{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"trust_dns_proto","disambiguator":[10379152517567058016,6967446335435192947]},"crate_root":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src","external_crates":[{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1877579056841321839,4002650866653523028]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12966739244720591078,10895073499070158948]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4148811982382486632,5293825926111630395]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[55294194006836696,257979567559498938]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[5663549295587754337,15298730489275369687]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[198562575503244264,15640276364166720962]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15019360886040341153,15954958735131723916]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[2748248400471175825,13783408877556183619]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[13472166887002568360,10424338574949869411]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":10,"id":{"name":"byteorder","disambiguator":[8988598909874560933,4826208576571986389]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":11,"id":{"name":"error_chain","disambiguator":[10242872516202489512,10092784916658631227]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":12,"id":{"name":"backtrace","disambiguator":[1080526500646159015,4241599378775313753]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[6776164903394557340,5187685817441892726]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":14,"id":{"name":"kernel32","disambiguator":[15611740098429702478,10460589485399547101]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":15,"id":{"name":"winapi","disambiguator":[15860821539406332374,9960237418415781328]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":16,"id":{"name":"dbghelp","disambiguator":[17697407719049890133,12622276913898486262]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":17,"id":{"name":"cfg_if","disambiguator":[6006914319526097489,5258778526497927168]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":18,"id":{"name":"rustc_demangle","disambiguator":[394265122105596474,5491823219573500145]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":19,"id":{"name":"backtrace_sys","disambiguator":[10527265934296796221,16247629214312641050]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":20,"id":{"name":"futures","disambiguator":[2797111832135900288,10996968085909763905]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":21,"id":{"name":"idna","disambiguator":[6513525912223775413,2722108154196486933]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":22,"id":{"name":"matches","disambiguator":[144437934217919094,676890238016255303]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":23,"id":{"name":"unicode_bidi","disambiguator":[15017337113096338004,10379254784674978371]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":24,"id":{"name":"unicode_normalization","disambiguator":[12781306319530544488,17765710639574063471]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":25,"id":{"name":"lazy_static","disambiguator":[11344889491810651932,6895610591521445416]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":26,"id":{"name":"log","disambiguator":[15458592949001772203,8043066798733188894]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":27,"id":{"name":"rand","disambiguator":[334009103214978063,4138513403882637278]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":28,"id":{"name":"tokio_core","disambiguator":[3779790289665083978,10574587043782049608]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":29,"id":{"name":"bytes","disambiguator":[2243761007803172346,17220500735206689809]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":30,"id":{"name":"iovec","disambiguator":[14942903118612993787,3195164160326042708]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":31,"id":{"name":"mio","disambiguator":[6280754324342045782,12160645006236027775]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":32,"id":{"name":"lazycell","disambiguator":[18174132419564488369,14019574044694012499]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":33,"id":{"name":"net2","disambiguator":[317664373739507878,15870254251397999881]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":34,"id":{"name":"slab","disambiguator":[1099382465232922427,4147351552908711642]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":35,"id":{"name":"tokio","disambiguator":[2107488636326319418,9259435925439407871]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":36,"id":{"name":"tokio_io","disambiguator":[3098776858731583494,5792086936481248474]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":37,"id":{"name":"tokio_executor","disambiguator":[683898760621928858,14010187796969828021]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":38,"id":{"name":"tokio_fs","disambiguator":[17636440806477404680,11211504037280965869]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":39,"id":{"name":"tokio_threadpool","disambiguator":[4513923943547734703,6193414483657061897]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":40,"id":{"name":"crossbeam_deque","disambiguator":[10326191094564336542,1317797165839595611]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":41,"id":{"name":"crossbeam_epoch","disambiguator":[6033121348989273617,12884233294960675054]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":42,"id":{"name":"arrayvec","disambiguator":[14070364190623908350,2193847739732787816]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":43,"id":{"name":"nodrop","disambiguator":[16917837262680337612,9611257862573741212]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":44,"id":{"name":"crossbeam_utils","disambiguator":[5493064370480691886,11878396229817512907]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":45,"id":{"name":"memoffset","disambiguator":[11198361772079937771,1044545670470132666]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":46,"id":{"name":"scopeguard","disambiguator":[16080139938043077784,6937527896958391680]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":47,"id":{"name":"num_cpus","disambiguator":[13608167663791814966,7430131916315588627]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":48,"id":{"name":"tokio_reactor","disambiguator":[14289571406710191975,17513231348397987044]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":49,"id":{"name":"tokio_timer","disambiguator":[2682471578261500693,11814807607582994778]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":50,"id":{"name":"tokio_tcp","disambiguator":[12745081902887399059,11893570571150293273]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":51,"id":{"name":"tokio_udp","disambiguator":[8396490895404068141,7269215585895472706]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":52,"id":{"name":"scoped_tls","disambiguator":[4914369682651080361,6276924783556748307]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":53,"id":{"name":"url","disambiguator":[1952168457287149149,10760397706989225166]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":54,"id":{"name":"percent_encoding","disambiguator":[13095268402707263148,3260326389160806080]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":55,"id":{"name":"encoding","disambiguator":[13027981889672753724,6349801895236036630]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":56,"id":{"name":"encoding_index_singlebyte","disambiguator":[9261069429616711561,8196775401228681489]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":57,"id":{"name":"encoding_index_korean","disambiguator":[10301196848309449363,18395094388819978464]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":58,"id":{"name":"encoding_index_japanese","disambiguator":[9465750678948411572,7473154291665176248]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":59,"id":{"name":"encoding_index_simpchinese","disambiguator":[15636719963065211290,18031915939374505090]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","num":60,"id":{"name":"encoding_index_tradchinese","disambiguator":[8157798394079192542,12466363381784315089]}}],"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":385,"byte_end":3550,"line_start":9,"line_end":140,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2556},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35591,"byte_end":35595,"line_start":27,"line_end":27,"column_start":21,"column_end":25},"alias_span":null,"name":"Edns","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":2572},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35619,"byte_end":35625,"line_start":28,"line_end":28,"column_start":23,"column_end":29},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":2600},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35649,"byte_end":35660,"line_start":29,"line_end":29,"column_start":23,"column_end":34},"alias_span":null,"name":"MessageType","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35686,"byte_end":35702,"line_start":30,"line_end":30,"column_start":25,"column_end":41},"alias_span":null,"name":"EncodableMessage","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":2620},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35704,"byte_end":35711,"line_start":30,"line_end":30,"column_start":43,"column_end":50},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35713,"byte_end":35729,"line_start":30,"line_end":30,"column_start":52,"column_end":68},"alias_span":null,"name":"MessageFinalizer","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35731,"byte_end":35751,"line_start":30,"line_end":30,"column_start":70,"column_end":90},"alias_span":null,"name":"NoopMessageFinalizer","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":2656},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35777,"byte_end":35783,"line_start":31,"line_end":31,"column_start":24,"column_end":30},"alias_span":null,"name":"OpCode","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":2676},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35806,"byte_end":35811,"line_start":32,"line_end":32,"column_start":22,"column_end":27},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":2700},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35842,"byte_end":35854,"line_start":33,"line_end":33,"column_start":30,"column_end":42},"alias_span":null,"name":"ResponseCode","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,109,111,100,46,114,115],"byte_start":123343,"byte_end":123351,"line_start":16,"line_end":16,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoName","value":"","parent":{"krate":0,"index":806}},{"kind":"Use","ref_id":{"krate":0,"index":2756},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,109,111,100,46,114,115],"byte_start":123353,"byte_end":123357,"line_start":16,"line_end":16,"column_start":32,"column_end":36},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":806}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,109,111,100,46,114,115],"byte_start":123382,"byte_end":123391,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"alias_span":null,"name":"IntoLabel","value":"","parent":{"krate":0,"index":806}},{"kind":"Use","ref_id":{"krate":0,"index":2746},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,109,111,100,46,114,115],"byte_start":123393,"byte_end":123398,"line_start":17,"line_end":17,"column_start":34,"column_end":39},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":806}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201890,"byte_end":201893,"line_start":34,"line_end":34,"column_start":20,"column_end":23},"alias_span":null,"name":"CAA","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":3146},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201913,"byte_end":201915,"line_start":35,"line_end":35,"column_start":19,"column_end":21},"alias_span":null,"name":"MX","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201937,"byte_end":201941,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"alias_span":null,"name":"NULL","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":3198},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201962,"byte_end":201965,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"OPT","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":3324},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201986,"byte_end":201989,"line_start":38,"line_end":38,"column_start":20,"column_end":23},"alias_span":null,"name":"SRV","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":3300},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":202010,"byte_end":202013,"line_start":39,"line_end":39,"column_start":20,"column_end":23},"alias_span":null,"name":"SOA","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":3348},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":202035,"byte_end":202039,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"TLSA","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":3450},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":202060,"byte_end":202063,"line_start":41,"line_end":41,"column_start":20,"column_end":23},"alias_span":null,"name":"TXT","value":"","parent":{"krate":0,"index":1244}},{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117867,"byte_end":117875,"line_start":30,"line_end":30,"column_start":24,"column_end":32},"alias_span":null,"name":"IntoName","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":2756},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117877,"byte_end":117881,"line_start":30,"line_end":30,"column_start":34,"column_end":38},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117909,"byte_end":117917,"line_start":31,"line_end":31,"column_start":26,"column_end":34},"alias_span":null,"name":"DNSClass","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":3474},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117946,"byte_end":117951,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"alias_span":null,"name":"RData","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":3494},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117980,"byte_end":117990,"line_start":33,"line_end":33,"column_start":28,"column_end":38},"alias_span":null,"name":"RecordType","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":3520},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":118016,"byte_end":118022,"line_start":34,"line_end":34,"column_start":25,"column_end":31},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":118046,"byte_end":118059,"line_start":35,"line_end":35,"column_start":23,"column_end":36},"alias_span":null,"name":"IntoRecordSet","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":3538},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":118083,"byte_end":118092,"line_start":36,"line_end":36,"column_start":23,"column_end":32},"alias_span":null,"name":"RecordSet","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1934},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":410866,"byte_end":410876,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"BinDecoder","value":"","parent":{"krate":0,"index":1918}},{"kind":"Use","ref_id":{"krate":0,"index":1986},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":410901,"byte_end":410911,"line_start":23,"line_end":23,"column_start":24,"column_end":34},"alias_span":null,"name":"BinEncoder","value":"","parent":{"krate":0,"index":1918}},{"kind":"Use","ref_id":{"krate":0,"index":3560},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":410936,"byte_end":410946,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"alias_span":null,"name":"EncodeMode","value":"","parent":{"krate":0,"index":1918}},{"kind":"Use","ref_id":{"krate":0,"index":2154},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,109,111,100,46,114,115],"byte_start":434390,"byte_end":434405,"line_start":22,"line_end":22,"column_start":34,"column_end":49},"alias_span":null,"name":"TcpClientStream","value":"","parent":{"krate":0,"index":2116}},{"kind":"Use","ref_id":{"krate":0,"index":2234},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,109,111,100,46,114,115],"byte_start":434433,"byte_end":434442,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":2116}},{"kind":"Use","ref_id":{"krate":0,"index":2292},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,109,111,100,46,114,115],"byte_start":464839,"byte_end":464854,"line_start":22,"line_end":22,"column_start":34,"column_end":49},"alias_span":null,"name":"UdpClientStream","value":"","parent":{"krate":0,"index":2264}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,109,111,100,46,114,115],"byte_start":464882,"byte_end":464891,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"alias_span":null,"name":"UdpStream","value":"","parent":{"krate":0,"index":2264}},{"kind":"Use","ref_id":{"krate":0,"index":2434},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1261,"byte_end":1275,"line_start":54,"line_end":54,"column_start":22,"column_end":36},"alias_span":null,"name":"BasicDnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1277,"byte_end":1286,"line_start":54,"line_end":54,"column_start":38,"column_end":47},"alias_span":null,"name":"DnsFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1288,"byte_end":1297,"line_start":54,"line_end":54,"column_start":49,"column_end":58},"alias_span":null,"name":"DnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1299,"byte_end":1314,"line_start":54,"line_end":54,"column_start":60,"column_end":75},"alias_span":null,"name":"DnsStreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1316,"byte_end":1328,"line_start":54,"line_end":54,"column_start":77,"column_end":89},"alias_span":null,"name":"StreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3554},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1357,"byte_end":1371,"line_start":55,"line_end":55,"column_start":27,"column_end":41},"alias_span":null,"name":"RetryDnsHandle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":385,"byte_end":3550,"line_start":9,"line_end":140,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":198},{"krate":0,"index":254},{"krate":0,"index":744},{"krate":0,"index":1882},{"krate":0,"index":1916},{"krate":0,"index":2116},{"krate":0,"index":2264},{"krate":0,"index":2396},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":2414},{"krate":0,"index":2420},{"krate":0,"index":2422},{"krate":0,"index":2424},{"krate":0,"index":2428}],"decl_id":null,"docs":" TRust-DNS Protocol library\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":385,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"2048\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":408,"byte_end":436,"line_start":10,"line_end":10,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":4833,"byte_end":4845,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"StreamHandle","qualname":"::dns_handle::StreamHandle","value":"StreamHandle {  }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":" The StreamHandle is the general interface for communicating with the DnsFuture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":5078,"byte_end":5081,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamHandle<E>>::new","value":"fn (sender: UnboundedSender<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new StreamHandle for wrapping the sender\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":128},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":5291,"byte_end":5306,"line_start":55,"line_end":55,"column_start":11,"column_end":26},"name":"DnsStreamHandle","qualname":"::dns_handle::DnsStreamHandle","value":"DnsStreamHandle","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132}],"decl_id":null,"docs":" Implementations of Sinks for sending DNS messages\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":130},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":5377,"byte_end":5382,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Error","qualname":"::dns_handle::DnsStreamHandle::Error","value":"type Error: FromProtoError;","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" The Error type to be returned if there is an error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":5474,"byte_end":5478,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"send","qualname":"::dns_handle::DnsStreamHandle::send","value":"fn (&mut self, buffer: Vec<u8>) -> Result<(), Self::Error>","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" Sends a message to the Handle for delivery to the server.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":6336,"byte_end":6345,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"DnsFuture","qualname":"::dns_handle::DnsFuture","value":"DnsFuture {  }","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53}],"decl_id":null,"docs":" A DNS Client implemented over futures-rs.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":6276,"byte_end":6324,"line_start":86,"line_end":86,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":7649,"byte_end":7652,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<DnsFuture<S, E, MF>>::new","value":"fn (stream: Box<Future<Item = S, Error = io::Error>>, stream_handle: Box<DnsStreamHandle<Error = E>>, loop_handle: &Handle, signer: Option<Arc<MF>>) -> BasicDnsHandle<E>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new DnsFuture Stream. This uses a default timeout of 5 seconds for all requests.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":8788,"byte_end":8800,"line_start":146,"line_end":146,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<DnsFuture<S, E, MF>>::with_timeout","value":"fn (stream: Box<Future<Item = S, Error = io::Error>>, stream_handle: Box<DnsStreamHandle<Error = E>>, loop_handle: &Handle, timeout_duration: Duration, signer: Option<Arc<MF>>) -> BasicDnsHandle<E>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new DnsFuture Stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2434},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":21422,"byte_end":21436,"line_start":468,"line_end":468,"column_start":12,"column_end":26},"name":"BasicDnsHandle","qualname":"::dns_handle::BasicDnsHandle","value":"BasicDnsHandle {  }","parent":null,"children":[{"krate":0,"index":559}],"decl_id":null,"docs":" Root DnsHandle implementaton returned by DnsFuture","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":188},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":22690,"byte_end":22699,"line_start":505,"line_end":505,"column_start":11,"column_end":20},"name":"DnsHandle","qualname":"::dns_handle::DnsHandle","value":"DnsHandle: Clone","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196}],"decl_id":null,"docs":" A trait for implementing high level functions of DNS.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":190},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":22787,"byte_end":22792,"line_start":507,"line_end":507,"column_start":10,"column_end":15},"name":"Error","qualname":"::dns_handle::DnsHandle::Error","value":"type Error: FromProtoError;","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" The associated error type returned by future send operations\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":23036,"byte_end":23055,"line_start":512,"line_end":512,"column_start":8,"column_end":27},"name":"is_verifying_dnssec","qualname":"::dns_handle::DnsHandle::is_verifying_dnssec","value":"fn (&self) -> bool","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Ony returns true if and only if this DNS handle is validating DNSSec.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":23418,"byte_end":23422,"line_start":523,"line_end":523,"column_start":8,"column_end":12},"name":"send","qualname":"::dns_handle::DnsHandle::send","value":"fn (&mut self, message: Message) -> Box<Future<Item = Message, Error = Self::Error>>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Send a message via the channel in the client","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":23701,"byte_end":23707,"line_start":532,"line_end":532,"column_start":8,"column_end":14},"name":"lookup","qualname":"::dns_handle::DnsHandle::lookup","value":"fn (&mut self, query: Query) -> Box<Future<Item = Message, Error = Self::Error>>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" A *classic* DNS query","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/error.rs","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2440},{"krate":0,"index":2450},{"krate":0,"index":2456},{"krate":0,"index":2460},{"krate":0,"index":2464},{"krate":0,"index":2468},{"krate":0,"index":2472},{"krate":0,"index":2476},{"krate":0,"index":2480},{"krate":0,"index":2484},{"krate":0,"index":2488},{"krate":0,"index":2492},{"krate":0,"index":2496},{"krate":0,"index":2500},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2536},{"krate":0,"index":2540},{"krate":0,"index":2504},{"krate":0,"index":2508},{"krate":0,"index":2512},{"krate":0,"index":2516},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":214},{"krate":0,"index":226},{"krate":0,"index":238},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":252}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24942,"byte_end":24965,"line_start":8,"line_end":8,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":214},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":29913,"byte_end":29924,"line_start":158,"line_end":158,"column_start":9,"column_end":20},"name":"not_openssl","qualname":"::error::not_openssl","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/error.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":218},{"krate":0,"index":222}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"openssl\"))","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":29872,"byte_end":29904,"line_start":157,"line_end":157,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2544},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":29977,"byte_end":29990,"line_start":162,"line_end":162,"column_start":16,"column_end":29},"name":"SslErrorStack","qualname":"::error::not_openssl::SslErrorStack","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30347,"byte_end":30355,"line_start":179,"line_end":179,"column_start":9,"column_end":17},"name":"not_ring","qualname":"::error::not_ring","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/error.rs","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":230},{"krate":0,"index":234}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"ring\"))","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30309,"byte_end":30338,"line_start":178,"line_end":178,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2550},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30408,"byte_end":30419,"line_start":183,"line_end":183,"column_start":16,"column_end":27},"name":"Unspecified","qualname":"::error::not_ring::Unspecified","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34518,"byte_end":34532,"line_start":280,"line_end":280,"column_start":11,"column_end":25},"name":"FromProtoError","qualname":"::error::FromProtoError","value":"FromProtoError: From<ProtoError> + ::std::error::Error + Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"op","qualname":"::op","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/op/mod.rs","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":330},{"krate":0,"index":418},{"krate":0,"index":622},{"krate":0,"index":636},{"krate":0,"index":690},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742}],"decl_id":null,"docs":" Operations to send with a `Client` or server, e.g. `Query`, `Message`, or `UpdateMessage` can\n be used to gether to either query or update resource records sets.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2556},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":36881,"byte_end":36885,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Edns","qualname":"::op::edns::Edns","value":"Edns {  }","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751}],"decl_id":null,"docs":" Edns implements the higher level concepts for working with extended dns as it is used to create or be\n created from OPT record data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37576,"byte_end":37579,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Edns>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new extended DNS object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37707,"byte_end":37717,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"rcode_high","qualname":"<Edns>::rcode_high","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The high order bytes for the response code in the DNS Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37808,"byte_end":37815,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"version","qualname":"<Edns>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the EDNS version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37939,"byte_end":37948,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"dnssec_ok","qualname":"<Edns>::dnssec_ok","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Specifies that DNSSec is supported for this Client or Server\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":38057,"byte_end":38068,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"max_payload","qualname":"<Edns>::max_payload","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Maximum supported size of the DNS payload\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":38180,"byte_end":38186,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"option","qualname":"<Edns>::option","value":"fn (&self, code: &EdnsCode) -> Option<&EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Option associated with the code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":38329,"byte_end":38336,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"options","qualname":"<Edns>::options","value":"fn (&self) -> &OPT","parent":null,"children":[],"decl_id":null,"docs":" Returns the options portion of EDNS\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":38447,"byte_end":38461,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"set_rcode_high","qualname":"<Edns>::set_rcode_high","value":"fn (&mut self, rcode_high: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the high order bits for the result code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":38575,"byte_end":38586,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"set_version","qualname":"<Edns>::set_version","value":"fn (&mut self, version: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the EDNS version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":38705,"byte_end":38718,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"set_dnssec_ok","qualname":"<Edns>::set_dnssec_ok","value":"fn (&mut self, dnssec_ok: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set to true if DNSSec is supported\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":38936,"byte_end":38951,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"set_max_payload","qualname":"<Edns>::set_max_payload","value":"fn (&mut self, max_payload: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum payload which can be supported\n From RFC 6891: `Values lower than 512 MUST be treated as equal to 512`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":39088,"byte_end":39098,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"set_option","qualname":"<Edns>::set_option","value":"fn (&mut self, option: EdnsOption) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the specified EDNS option\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":330},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::op::header","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/op/header.rs","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":2572},{"krate":0,"index":2596},{"krate":0,"index":2592},{"krate":0,"index":2586},{"krate":0,"index":2574},{"krate":0,"index":2600},{"krate":0,"index":2616},{"krate":0,"index":2612},{"krate":0,"index":2608},{"krate":0,"index":2606},{"krate":0,"index":2602},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":410},{"krate":0,"index":414}],"decl_id":null,"docs":" Message metadata\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2572},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":45140,"byte_end":45146,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Header","qualname":"::op::header::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779}],"decl_id":null,"docs":" Metadata for the `Message` struct.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":885},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":45733,"byte_end":45738,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Query","qualname":"::op::header::MessageType::Query","value":"MessageType::Query","parent":{"krate":0,"index":2600},"children":[],"decl_id":null,"docs":" Queries are Client requests, these are either Queries or Updates\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":45806,"byte_end":45814,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"name":"Response","qualname":"::op::header::MessageType::Response","value":"MessageType::Response","parent":{"krate":0,"index":2600},"children":[],"decl_id":null,"docs":" Response message from the Server or upstream Resolver\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2600},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":45642,"byte_end":45653,"line_start":78,"line_end":78,"column_start":10,"column_end":21},"name":"MessageType","qualname":"::op::header::MessageType","value":"MessageType::{Query, Response}","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":887}],"decl_id":null,"docs":" Message types are either Query (also Update) or Response\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":45633,"byte_end":45817,"line_start":78,"line_end":83,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":46534,"byte_end":46537,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" A default Header, not very useful.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":46663,"byte_end":46666,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"len","qualname":"<Header>::len","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Length of the header, always 12 bytes\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":46634,"byte_end":46651,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":46810,"byte_end":46816,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"set_id","qualname":"<Header>::set_id","value":"fn (&mut self, id: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the id of the message, for queries this shoudl be random.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":46972,"byte_end":46988,"line_start":126,"line_end":126,"column_start":12,"column_end":28},"name":"set_message_type","qualname":"<Header>::set_message_type","value":"fn (&mut self, message_type: MessageType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the message type, Queries and Updates both use Query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":47162,"byte_end":47173,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"set_op_code","qualname":"<Header>::set_op_code","value":"fn (&mut self, op_code: OpCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the operation code for the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":47355,"byte_end":47372,"line_start":138,"line_end":138,"column_start":12,"column_end":29},"name":"set_authoritative","qualname":"<Header>::set_authoritative","value":"fn (&mut self, authoritative: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From the server is specifies that it is an authoritative reqponse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":47625,"byte_end":47638,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"set_truncated","qualname":"<Header>::set_truncated","value":"fn (&mut self, truncated: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the records were too large for the payload.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":47841,"byte_end":47862,"line_start":152,"line_end":152,"column_start":12,"column_end":33},"name":"set_recursion_desired","qualname":"<Header>::set_recursion_desired","value":"fn (&mut self, recursion_desired: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that the resolver should recursiviley request data from upstream DNS nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":48076,"byte_end":48099,"line_start":158,"line_end":158,"column_start":12,"column_end":35},"name":"set_recursion_available","qualname":"<Header>::set_recursion_available","value":"fn (&mut self, recursion_available: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that recursion is available from this or the remote resolver\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":48349,"byte_end":48367,"line_start":164,"line_end":164,"column_start":12,"column_end":30},"name":"set_authentic_data","qualname":"<Header>::set_authentic_data","value":"fn (&mut self, authentic_data: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the data is authnetic, i.e. the resolver believes all data to be valid through DNSSec\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":48609,"byte_end":48630,"line_start":170,"line_end":170,"column_start":12,"column_end":33},"name":"set_checking_disabled","qualname":"<Header>::set_checking_disabled","value":"fn (&mut self, checking_disabled: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Used during recursive resolution to specified if a resolver should or should not validate DNSSec signatures\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":48845,"byte_end":48862,"line_start":176,"line_end":176,"column_start":12,"column_end":29},"name":"set_response_code","qualname":"<Header>::set_response_code","value":"fn (&mut self, response_code: ResponseCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" The low responsed code (original response codes before EDNS extensions)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":49046,"byte_end":49061,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"set_query_count","qualname":"<Header>::set_query_count","value":"fn (&mut self, query_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number or query records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":49225,"byte_end":49241,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"set_answer_count","qualname":"<Header>::set_answer_count","value":"fn (&mut self, answer_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of answer records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":49413,"byte_end":49434,"line_start":194,"line_end":194,"column_start":12,"column_end":33},"name":"set_name_server_count","qualname":"<Header>::set_name_server_count","value":"fn (&mut self, name_server_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of name server records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":49620,"byte_end":49640,"line_start":200,"line_end":200,"column_start":12,"column_end":32},"name":"set_additional_count","qualname":"<Header>::set_additional_count","value":"fn (&mut self, additional_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of additional records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":50101,"byte_end":50103,"line_start":211,"line_end":211,"column_start":12,"column_end":14},"name":"id","qualname":"<Header>::id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ID              A 16 bit identifier assigned by the program that\n                 generates any kind of query.  This identifier is copied\n                 the corresponding reply and can be used by the requester\n                 to match up replies to outstanding queries.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":50317,"byte_end":50329,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"message_type","qualname":"<Header>::message_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QR              A one bit field that specifies whether this message is a\n                 query (0), or a response (1).\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":50677,"byte_end":50684,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"op_code","qualname":"<Header>::op_code","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" ```text\n OPCODE          A four bit field that specifies kind of query in this\n                 message.  This value is set by the originator of a query\n                 and copied into the response.  The values are: <see super::op_code>\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":51313,"byte_end":51326,"line_start":242,"line_end":242,"column_start":12,"column_end":25},"name":"authoritative","qualname":"<Header>::authoritative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n AA              Authoritative Answer - this bit is valid in responses,\n                 and specifies that the responding name server is an\n                 authority for the domain name in question section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":51615,"byte_end":51624,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"truncated","qualname":"<Header>::truncated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TC              TrunCation - specifies that this message was truncated\n                 due to length greater than that permitted on the\n                 transmission channel.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":52004,"byte_end":52021,"line_start":261,"line_end":261,"column_start":12,"column_end":29},"name":"recursion_desired","qualname":"<Header>::recursion_desired","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RD              Recursion Desired - this bit may be set in a query and\n                 is copied into the response.  If RD is set, it directs\n                 the name server to pursue the query recursively.\n                 Recursive query support is optional.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":52328,"byte_end":52347,"line_start":270,"line_end":270,"column_start":12,"column_end":31},"name":"recursion_available","qualname":"<Header>::recursion_available","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RA              Recursion Available - this be is set or cleared in a\n                 response, and denotes whether recursive query support is\n                 available in the name server.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":54082,"byte_end":54096,"line_start":304,"line_end":304,"column_start":12,"column_end":26},"name":"authentic_data","qualname":"<Header>::authentic_data","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4035, DNSSEC Resource Records, March 2005](https://tools.ietf.org/html/rfc4035#section-3.1.6)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":54194,"byte_end":54211,"line_start":309,"line_end":309,"column_start":12,"column_end":29},"name":"checking_disabled","qualname":"<Header>::checking_disabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `is_authentic_data()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":54514,"byte_end":54527,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Header>::response_code","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RCODE           Response code - this 4 bit field is set as part of\n                 responses.  The values have the following\n                 interpretation: <see super::response_code>\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":54969,"byte_end":54980,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"query_count","qualname":"<Header>::query_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QDCOUNT         an unsigned 16 bit integer specifying the number of\n                 entries in the question section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":55418,"byte_end":55430,"line_start":344,"line_end":344,"column_start":12,"column_end":24},"name":"answer_count","qualname":"<Header>::answer_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ANCOUNT         an unsigned 16 bit integer specifying the number of\n                 resource records in the answer section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":56066,"byte_end":56083,"line_start":360,"line_end":360,"column_start":12,"column_end":29},"name":"name_server_count","qualname":"<Header>::name_server_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" for queries this is the nameservers which are authorities for the SOA of the Record\n for updates this is the update record count\n ```text\n NSCOUNT         an unsigned 16 bit integer specifying the number of name\n                 server resource records in the authority records\n                 section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":56460,"byte_end":56476,"line_start":372,"line_end":372,"column_start":12,"column_end":28},"name":"additional_count","qualname":"<Header>::additional_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ARCOUNT         an unsigned 16 bit integer specifying the number of\n                 resource records in the additional records section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":56694,"byte_end":56699,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"clone","qualname":"<Header>::clone","value":"fn (&self, query_count: u16, answer_count: u16, name_server_count: u16, additional_count: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a specialized clone which clones all the fields but the counts\n  handy for setting the count fields before sending over the wire.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":418},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message","qualname":"::op::message","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/op/message.rs","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":432},{"krate":0,"index":444},{"krate":0,"index":2620},{"krate":0,"index":2636},{"krate":0,"index":2632},{"krate":0,"index":2626},{"krate":0,"index":2622},{"krate":0,"index":458},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":494},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":618}],"decl_id":null,"docs":" Basic protocol message for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":65433,"byte_end":65440,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Message","qualname":"::op::message::Message","value":"Message {  }","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901}],"decl_id":null,"docs":" The basic request and response datastructure, used for all DNS protocols.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":458},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":65724,"byte_end":65740,"line_start":84,"line_end":84,"column_start":11,"column_end":27},"name":"EncodableMessage","qualname":"::op::message::EncodableMessage","value":"EncodableMessage","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482}],"decl_id":null,"docs":" A generic EncodableMessage with associated information for streaming to a connection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":65798,"byte_end":65804,"line_start":86,"line_end":86,"column_start":8,"column_end":14},"name":"header","qualname":"::op::message::EncodableMessage::header","value":"fn (&self) -> &Header","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" The Header associated with this Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":65880,"byte_end":65891,"line_start":89,"line_end":89,"column_start":8,"column_end":19},"name":"queries_len","qualname":"::op::message::EncodableMessage::queries_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" return the length of the set of queries\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66027,"byte_end":66039,"line_start":92,"line_end":92,"column_start":8,"column_end":20},"name":"emit_queries","qualname":"::op::message::EncodableMessage::emit_queries","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Emit the queries section of the EncodableMessage, if there are none, it's acceptable to return Ok(())\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66149,"byte_end":66160,"line_start":95,"line_end":95,"column_start":8,"column_end":19},"name":"answers_len","qualname":"::op::message::EncodableMessage::answers_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" return the length of the set of queries\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66296,"byte_end":66308,"line_start":98,"line_end":98,"column_start":8,"column_end":20},"name":"emit_answers","qualname":"::op::message::EncodableMessage::emit_answers","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Emit the answers section of the EncodableMessage, if there are none, it's acceptable to return Ok(())\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66418,"byte_end":66434,"line_start":101,"line_end":101,"column_start":8,"column_end":24},"name":"name_servers_len","qualname":"::op::message::EncodableMessage::name_servers_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" return the length of the set of queries\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66575,"byte_end":66592,"line_start":104,"line_end":104,"column_start":8,"column_end":25},"name":"emit_name_servers","qualname":"::op::message::EncodableMessage::emit_name_servers","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Emit the name_servers section of the EncodableMessage, if there are none, it's acceptable to return Ok(())\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66702,"byte_end":66717,"line_start":107,"line_end":107,"column_start":8,"column_end":23},"name":"additionals_len","qualname":"::op::message::EncodableMessage::additionals_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" return the length of the set of queries\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66857,"byte_end":66873,"line_start":110,"line_end":110,"column_start":8,"column_end":24},"name":"emit_additionals","qualname":"::op::message::EncodableMessage::emit_additionals","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Emit the additionals section of the EncodableMessage, if there are none, it's acceptable to return Ok(())\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":66993,"byte_end":66997,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"edns","qualname":"::op::message::EncodableMessage::edns","value":"fn (&self) -> Option<&Edns>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Extended DNS options associated with this message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":67076,"byte_end":67080,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"sig0","qualname":"::op::message::EncodableMessage::sig0","value":"fn (&self) -> &[Record]","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Any SIG0 records for signed messages\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":67185,"byte_end":67205,"line_start":119,"line_end":119,"column_start":8,"column_end":28},"name":"update_header_counts","qualname":"::op::message::EncodableMessage::update_header_counts","value":"fn (&self, include_sig0: bool) -> Header","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Returns a new Header with accurate counts for each Message section\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":68746,"byte_end":68749,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Message>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new \"empty\" Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":69324,"byte_end":69333,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"error_msg","qualname":"<Message>::error_msg","value":"fn (id: u16, op_code: OpCode, response_code: ResponseCode) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Returns a Message constructed with error details to return to a client","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":69760,"byte_end":69768,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Message>::truncate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Truncates a Message, this blindly removes all response fields and sets trucation to `true`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":70543,"byte_end":70549,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"set_id","qualname":"<Message>::set_id","value":"fn (&mut self, id: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_id`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":70687,"byte_end":70703,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"set_message_type","qualname":"<Message>::set_message_type","value":"fn (&mut self, message_type: MessageType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_message_type`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":70874,"byte_end":70885,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"set_op_code","qualname":"<Message>::set_op_code","value":"fn (&mut self, op_code: OpCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_op_code`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":71042,"byte_end":71059,"line_start":244,"line_end":244,"column_start":12,"column_end":29},"name":"set_authoritative","qualname":"<Message>::set_authoritative","value":"fn (&mut self, authoritative: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_authoritative`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":71228,"byte_end":71241,"line_start":250,"line_end":250,"column_start":12,"column_end":25},"name":"set_truncated","qualname":"<Message>::set_truncated","value":"fn (&mut self, truncated: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_truncated`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":71406,"byte_end":71427,"line_start":256,"line_end":256,"column_start":12,"column_end":33},"name":"set_recursion_desired","qualname":"<Message>::set_recursion_desired","value":"fn (&mut self, recursion_desired: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_recursion_desired`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":71618,"byte_end":71641,"line_start":262,"line_end":262,"column_start":12,"column_end":35},"name":"set_recursion_available","qualname":"<Message>::set_recursion_available","value":"fn (&mut self, recursion_available: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_recursion_available`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":71833,"byte_end":71851,"line_start":268,"line_end":268,"column_start":12,"column_end":30},"name":"set_authentic_data","qualname":"<Message>::set_authentic_data","value":"fn (&mut self, authentic_data: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_authentic_data`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72031,"byte_end":72052,"line_start":274,"line_end":274,"column_start":12,"column_end":33},"name":"set_checking_disabled","qualname":"<Message>::set_checking_disabled","value":"fn (&mut self, checking_disabled: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_checking_disabled`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72237,"byte_end":72254,"line_start":280,"line_end":280,"column_start":12,"column_end":29},"name":"set_response_code","qualname":"<Message>::set_response_code","value":"fn (&mut self, response_code: ResponseCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_response_code`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72496,"byte_end":72505,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"add_query","qualname":"<Message>::add_query","value":"fn (&mut self, query: Query) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a query to the Message, either the query response from the server, or the request Query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72685,"byte_end":72696,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"add_queries","qualname":"<Message>::add_queries","value":"fn <Q, I> (&mut self, queries: Q) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an iterator over a set of Queries to be added to the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72988,"byte_end":72998,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"add_answer","qualname":"<Message>::add_answer","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an answer to the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73191,"byte_end":73202,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"add_answers","qualname":"<Message>::add_answers","value":"fn <R, I> (&mut self, records: R) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add all the records from the iterator to the answers section of the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73629,"byte_end":73643,"line_start":328,"line_end":328,"column_start":12,"column_end":26},"name":"insert_answers","qualname":"<Message>::insert_answers","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the answers to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73819,"byte_end":73834,"line_start":334,"line_end":334,"column_start":12,"column_end":27},"name":"add_name_server","qualname":"<Message>::add_name_server","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a name server record to the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74034,"byte_end":74050,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"add_name_servers","qualname":"<Message>::add_name_servers","value":"fn <R, I> (&mut self, records: R) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add all the records in the Iterator to the name server section of the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74493,"byte_end":74512,"line_start":357,"line_end":357,"column_start":12,"column_end":31},"name":"insert_name_servers","qualname":"<Message>::insert_name_servers","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the name_servers to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74695,"byte_end":74709,"line_start":363,"line_end":363,"column_start":12,"column_end":26},"name":"add_additional","qualname":"<Message>::add_additional","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A an addtional Record to the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74996,"byte_end":75014,"line_start":373,"line_end":373,"column_start":12,"column_end":30},"name":"insert_additionals","qualname":"<Message>::insert_additionals","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the additional to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75195,"byte_end":75203,"line_start":379,"line_end":379,"column_start":12,"column_end":20},"name":"set_edns","qualname":"<Message>::set_edns","value":"fn (&mut self, edns: Edns) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add the EDNS section the the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75766,"byte_end":75768,"line_start":395,"line_end":395,"column_start":12,"column_end":14},"name":"id","qualname":"<Message>::id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" see `Header::id()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75865,"byte_end":75877,"line_start":400,"line_end":400,"column_start":12,"column_end":24},"name":"message_type","qualname":"<Message>::message_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" see `Header::message_type()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75987,"byte_end":75994,"line_start":405,"line_end":405,"column_start":12,"column_end":19},"name":"op_code","qualname":"<Message>::op_code","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" see `Header::op_code()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76100,"byte_end":76113,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"authoritative","qualname":"<Message>::authoritative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::authoritative()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76219,"byte_end":76228,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"truncated","qualname":"<Message>::truncated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::truncated()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76338,"byte_end":76355,"line_start":420,"line_end":420,"column_start":12,"column_end":29},"name":"recursion_desired","qualname":"<Message>::recursion_desired","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::recursion_desired()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76475,"byte_end":76494,"line_start":425,"line_end":425,"column_start":12,"column_end":31},"name":"recursion_available","qualname":"<Message>::recursion_available","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::recursion_available()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76611,"byte_end":76625,"line_start":430,"line_end":430,"column_start":12,"column_end":26},"name":"authentic_data","qualname":"<Message>::authentic_data","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::authentic_data()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76740,"byte_end":76757,"line_start":435,"line_end":435,"column_start":12,"column_end":29},"name":"checking_disabled","qualname":"<Message>::checking_disabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::checking_disabled()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":77014,"byte_end":77027,"line_start":443,"line_end":443,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Message>::response_code","value":"fn (&self) -> ResponseCode","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":77315,"byte_end":77322,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"queries","qualname":"<Message>::queries","value":"fn (&self) -> &[Query]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Question        Carries the query name and other query parameters.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":77481,"byte_end":77488,"line_start":460,"line_end":460,"column_start":12,"column_end":19},"name":"answers","qualname":"<Message>::answers","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Answer          Carries RRs which directly answer the query.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":77600,"byte_end":77612,"line_start":465,"line_end":465,"column_start":12,"column_end":24},"name":"take_answers","qualname":"<Message>::take_answers","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Removes all the answers from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":77945,"byte_end":77957,"line_start":474,"line_end":474,"column_start":12,"column_end":24},"name":"name_servers","qualname":"<Message>::name_servers","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Authority       Carries RRs which describe other authoritative servers.\n                 May optionally carry the SOA RR for the authoritative\n                 data in the answer section.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":78074,"byte_end":78091,"line_start":479,"line_end":479,"column_start":12,"column_end":29},"name":"take_name_servers","qualname":"<Message>::take_name_servers","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Remove the name servers from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":78340,"byte_end":78351,"line_start":487,"line_end":487,"column_start":12,"column_end":23},"name":"additionals","qualname":"<Message>::additionals","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Additional      Carries RRs which may be helpful in using the RRs in the\n                 other sections.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":78473,"byte_end":78489,"line_start":492,"line_end":492,"column_start":12,"column_end":28},"name":"take_additionals","qualname":"<Message>::take_additionals","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Remove the additional Records from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":79981,"byte_end":79985,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"edns","qualname":"<Message>::edns","value":"fn (&self) -> Option<&Edns>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 6891, EDNS(0) Extensions, April 2013](https://tools.ietf.org/html/rfc6891#section-6.1.1)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":80119,"byte_end":80127,"line_start":530,"line_end":530,"column_start":12,"column_end":20},"name":"edns_mut","qualname":"<Message>::edns_mut","value":"fn (&mut self) -> &mut Edns","parent":null,"children":[],"decl_id":null,"docs":" If edns is_none, this will create a new default Edns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":80393,"byte_end":80404,"line_start":541,"line_end":541,"column_start":12,"column_end":23},"name":"max_payload","qualname":"<Message>::max_payload","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":80688,"byte_end":80695,"line_start":553,"line_end":553,"column_start":12,"column_end":19},"name":"version","qualname":"<Message>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":81498,"byte_end":81502,"line_start":571,"line_end":571,"column_start":12,"column_end":16},"name":"sig0","qualname":"<Message>::sig0","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" [RFC 2535, Domain Name System Security Extensions, March 1999](https://tools.ietf.org/html/rfc2535#section-4)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":81989,"byte_end":82001,"line_start":585,"line_end":585,"column_start":12,"column_end":24},"name":"read_queries","qualname":"<Message>::read_queries","value":"fn (decoder: &mut BinDecoder, count: usize) -> ProtoResult<Vec<Query>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read the specified number of `Query`s\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":82546,"byte_end":82558,"line_start":599,"line_end":599,"column_start":12,"column_end":24},"name":"read_records","qualname":"<Message>::read_records","value":"fn (decoder: &mut BinDecoder, count: usize, is_additional: bool) -> ProtoResult<(Vec<Record>, Option<Edns>, Vec<Record>)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read the specified number of records","sig":null,"attributes":[{"value":"allow(unused_mut)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":82515,"byte_end":82533,"line_start":598,"line_end":598,"column_start":41,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":85267,"byte_end":85275,"line_start":672,"line_end":672,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Message>::from_vec","value":"fn (buffer: &[u8]) -> ProtoResult<Message>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a message from the buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":85464,"byte_end":85470,"line_start":678,"line_end":678,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Message>::to_vec","value":"fn (&self) -> Result<Vec<u8>, ProtoError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the Message into a buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":85839,"byte_end":85847,"line_start":691,"line_end":691,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Message>::finalize","value":"fn <MF> (&mut self, finalizer: &MF, inception_time: u32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Finalize the message prior to sending.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":600},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86758,"byte_end":86774,"line_start":717,"line_end":717,"column_start":11,"column_end":27},"name":"MessageFinalizer","qualname":"::op::message::MessageFinalizer","value":"MessageFinalizer","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":" A trait for performing final ammendments to a Message before it is sent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87327,"byte_end":87343,"line_start":729,"line_end":729,"column_start":8,"column_end":24},"name":"finalize_message","qualname":"::op::message::MessageFinalizer::finalize_message","value":"fn (&self, message: &Message, current_time: u32) -> ProtoResult<Vec<Record>>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" The message taken in should be processed and then return [`Record`]s which should be\n  appended to the additional section of the message.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87587,"byte_end":87607,"line_start":735,"line_end":735,"column_start":12,"column_end":32},"name":"NoopMessageFinalizer","qualname":"::op::message::NoopMessageFinalizer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A MessageFinalizer which does nothing","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87677,"byte_end":87680,"line_start":739,"line_end":739,"column_start":12,"column_end":15},"name":"new","qualname":"<NoopMessageFinalizer>::new","value":"fn () -> Option<Arc<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Always returns None\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":622},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"op_code","qualname":"::op::op_code","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/op/op_code.rs","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":2656},{"krate":0,"index":2672},{"krate":0,"index":2668},{"krate":0,"index":2664},{"krate":0,"index":2662},{"krate":0,"index":2658},{"krate":0,"index":628},{"krate":0,"index":632}],"decl_id":null,"docs":" Operation code for queries, updates, and responses\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":95251,"byte_end":95256,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"Query","qualname":"::op::op_code::OpCode::Query","value":"OpCode::Query","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Query request [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":95334,"byte_end":95340,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Status","qualname":"::op::op_code::OpCode::Status","value":"OpCode::Status","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Status message [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":95420,"byte_end":95426,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Notify","qualname":"::op::op_code::OpCode::Notify","value":"OpCode::Notify","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Notify of change [RFC 1996](https://tools.ietf.org/html/rfc1996)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":95504,"byte_end":95510,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Update","qualname":"::op::op_code::OpCode::Update","value":"OpCode::Update","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Update message [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2656},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":95168,"byte_end":95174,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::op::op_code::OpCode","value":"OpCode::{Query, Status, Notify, Update}","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909}],"decl_id":null,"docs":" Operation code for queries, updates, and responses","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":95139,"byte_end":95158,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":95159,"byte_end":95513,"line_start":42,"line_end":54,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":96416,"byte_end":96423,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<OpCode>::from_u8","value":"fn (value: u8) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the binary value of the OpCode\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":636},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"query","qualname":"::op::query","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/op/query.rs","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":2676},{"krate":0,"index":2696},{"krate":0,"index":2692},{"krate":0,"index":2688},{"krate":0,"index":2684},{"krate":0,"index":2678},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":678},{"krate":0,"index":682},{"krate":0,"index":686}],"decl_id":null,"docs":" Query struct for looking up resource records\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2676},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":98775,"byte_end":98780,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Query","qualname":"::op::query::Query","value":"Query {  }","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915}],"decl_id":null,"docs":" Query struct for looking up resource records, basically a resource record without RDATA.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":98764,"byte_end":98855,"line_start":53,"line_end":57,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":99267,"byte_end":99270,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Query>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a default query with an empty name and A, IN for the query_type and query_class\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":99396,"byte_end":99401,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"query","qualname":"<Query>::query","value":"fn (name: Name, query_type: RecordType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new query from name and type, class defaults to IN\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":99613,"byte_end":99621,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Query>::set_name","value":"fn (&mut self, name: Name) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" replaces name with the new name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":99762,"byte_end":99776,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"set_query_type","qualname":"<Query>::set_query_type","value":"fn (&mut self, query_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the RecordType being queried\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":99959,"byte_end":99974,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"set_query_class","qualname":"<Query>::set_query_class","value":"fn (&mut self, query_class: DNSClass) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify÷ the DNS class of the Query, almost always IN\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":100558,"byte_end":100562,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"name","qualname":"<Query>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QNAME           a domain name represented as a sequence of labels, where\n                 each label consists of a length octet followed by that\n                 number of octets.  The domain name terminates with the\n                 zero length octet for the null label of the root.  Note\n                 that this field may be an odd number of octets; no\n                 padding is used.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":100946,"byte_end":100956,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"query_type","qualname":"<Query>::query_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QTYPE           a two octet code which specifies the type of the query.\n                 The values for this field include all codes valid for a\n                 TYPE field, together with some more general codes which\n                 can match more than one type of RR.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":101208,"byte_end":101219,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"query_class","qualname":"<Query>::query_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QCLASS          a two octet code that specifies the class of the query.\n                 For example, the QCLASS field is IN for the Internet.\n ```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":690},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response_code","qualname":"::op::response_code","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/op/response_code.rs","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":2700},{"krate":0,"index":2716},{"krate":0,"index":2712},{"krate":0,"index":2708},{"krate":0,"index":2706},{"krate":0,"index":2702},{"krate":0,"index":700},{"krate":0,"index":710},{"krate":0,"index":714},{"krate":0,"index":718}],"decl_id":null,"docs":" All defined response codes in DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105610,"byte_end":105617,"line_start":68,"line_end":68,"column_start":5,"column_end":12},"name":"NoError","qualname":"::op::response_code::ResponseCode::NoError","value":"ResponseCode::NoError","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" No Error [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105693,"byte_end":105700,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"FormErr","qualname":"::op::response_code::ResponseCode::FormErr","value":"ResponseCode::FormErr","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Format Error [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105778,"byte_end":105786,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"ServFail","qualname":"::op::response_code::ResponseCode::ServFail","value":"ResponseCode::ServFail","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Server Failure [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105869,"byte_end":105877,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"name":"NXDomain","qualname":"::op::response_code::ResponseCode::NXDomain","value":"ResponseCode::NXDomain","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Non-Esistent Domain [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":927},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105956,"byte_end":105962,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"NotImp","qualname":"::op::response_code::ResponseCode::NotImp","value":"ResponseCode::NotImp","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Not Implemented [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106039,"byte_end":106046,"line_start":83,"line_end":83,"column_start":5,"column_end":12},"name":"Refused","qualname":"::op::response_code::ResponseCode::Refused","value":"ResponseCode::Refused","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Query Refused [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106140,"byte_end":106148,"line_start":86,"line_end":86,"column_start":5,"column_end":13},"name":"YXDomain","qualname":"::op::response_code::ResponseCode::YXDomain","value":"ResponseCode::YXDomain","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Name Exists when it should not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106244,"byte_end":106251,"line_start":89,"line_end":89,"column_start":5,"column_end":12},"name":"YXRRSet","qualname":"::op::response_code::ResponseCode::YXRRSet","value":"ResponseCode::YXRRSet","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" RR Set Exists when it should not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106348,"byte_end":106355,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"NXRRSet","qualname":"::op::response_code::ResponseCode::NXRRSet","value":"ResponseCode::NXRRSet","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" RR Set that should exist does not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106526,"byte_end":106533,"line_start":96,"line_end":96,"column_start":5,"column_end":12},"name":"NotAuth","qualname":"::op::response_code::ResponseCode::NotAuth","value":"ResponseCode::NotAuth","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Server Not Authoritative for zone [RFC 2136](https://tools.ietf.org/html/rfc2136)\n or Not Authorized [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106623,"byte_end":106630,"line_start":99,"line_end":99,"column_start":5,"column_end":12},"name":"NotZone","qualname":"::op::response_code::ResponseCode::NotZone","value":"ResponseCode::NotZone","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Name not contained in zone [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106719,"byte_end":106726,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"BADVERS","qualname":"::op::response_code::ResponseCode::BADVERS","value":"ResponseCode::BADVERS","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Bad OPT Version [RFC 6891](https://tools.ietf.org/html/rfc6891#section-9)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106812,"byte_end":106818,"line_start":105,"line_end":105,"column_start":5,"column_end":11},"name":"BADSIG","qualname":"::op::response_code::ResponseCode::BADSIG","value":"ResponseCode::BADSIG","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" TSIG Signature Failure [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106900,"byte_end":106906,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"BADKEY","qualname":"::op::response_code::ResponseCode::BADKEY","value":"ResponseCode::BADKEY","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Key not recognized [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":106998,"byte_end":107005,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"BADTIME","qualname":"::op::response_code::ResponseCode::BADTIME","value":"ResponseCode::BADTIME","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Signature out of time window [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107094,"byte_end":107101,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"BADMODE","qualname":"::op::response_code::ResponseCode::BADMODE","value":"ResponseCode::BADMODE","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Bad TKEY Mode [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107195,"byte_end":107202,"line_start":117,"line_end":117,"column_start":5,"column_end":12},"name":"BADNAME","qualname":"::op::response_code::ResponseCode::BADNAME","value":"ResponseCode::BADNAME","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Duplicate key name [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107301,"byte_end":107307,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"name":"BADALG","qualname":"::op::response_code::ResponseCode::BADALG","value":"ResponseCode::BADALG","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Algorithm not supported [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107395,"byte_end":107403,"line_start":123,"line_end":123,"column_start":5,"column_end":13},"name":"BADTRUNC","qualname":"::op::response_code::ResponseCode::BADTRUNC","value":"ResponseCode::BADTRUNC","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Bad Truncation [RFC 4635](https://tools.ietf.org/html/rfc4635#section-4)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107528,"byte_end":107537,"line_start":126,"line_end":126,"column_start":5,"column_end":14},"name":"BADCOOKIE","qualname":"::op::response_code::ResponseCode::BADCOOKIE","value":"ResponseCode::BADCOOKIE","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Bad/missing server cookie [draft-ietf-dnsop-cookies](https://tools.ietf.org/html/draft-ietf-dnsop-cookies-10)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2700},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105526,"byte_end":105538,"line_start":66,"line_end":66,"column_start":10,"column_end":22},"name":"ResponseCode","qualname":"::op::response_code::ResponseCode","value":"ResponseCode::{NoError, FormErr, ServFail, NXDomain, NotImp, Refused, YXDomain, YXRRSet, NXRRSet, NotAuth, NotZone, BADVERS, BADSIG, BADKEY, BADTIME, BADMODE, BADNAME, BADALG, BADTRUNC, BADCOOKIE}","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957}],"decl_id":null,"docs":" The status code of the response to a query.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105497,"byte_end":105516,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":105517,"byte_end":107794,"line_start":66,"line_end":131,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107927,"byte_end":107930,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"low","qualname":"<ResponseCode>::low","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" returns the lower 4 bits of the response code (for the original header portion of the code)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":108081,"byte_end":108085,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"high","qualname":"<ResponseCode>::high","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" returns the high 12 bits for the edns portion of the response code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":108253,"byte_end":108257,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"from","qualname":"<ResponseCode>::from","value":"fn (high: u8, low: u8) -> ResponseCode","parent":null,"children":[],"decl_id":null,"docs":" Combines the EDNS high and low from the Header to produce the Extended ResponseCode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":108443,"byte_end":108449,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"to_str","qualname":"<ResponseCode>::to_str","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Transforms the response code into the human message\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":744},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rr","qualname":"::rr","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/mod.rs","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":806},{"krate":0,"index":1244},{"krate":0,"index":1580},{"krate":0,"index":1640},{"krate":0,"index":1706},{"krate":0,"index":1786},{"krate":0,"index":1864},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880}],"decl_id":null,"docs":" Resource record related components, e.g. `Name` aka label, `Record`, `RData`, ...\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":746},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_class","qualname":"::rr::dns_class","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/dns_class.rs","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":2720},{"krate":0,"index":2742},{"krate":0,"index":2736},{"krate":0,"index":2732},{"krate":0,"index":2728},{"krate":0,"index":2726},{"krate":0,"index":2722},{"krate":0,"index":766},{"krate":0,"index":772},{"krate":0,"index":778},{"krate":0,"index":782},{"krate":0,"index":786},{"krate":0,"index":790},{"krate":0,"index":794},{"krate":0,"index":798},{"krate":0,"index":802}],"decl_id":null,"docs":" class of DNS operations, in general always IN for internet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":959},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118814,"byte_end":118816,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"IN","qualname":"::rr::dns_class::DNSClass::IN","value":"DNSClass::IN","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Internet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":961},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118836,"byte_end":118838,"line_start":26,"line_end":26,"column_start":5,"column_end":7},"name":"CH","qualname":"::rr::dns_class::DNSClass::CH","value":"DNSClass::CH","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Chaos\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118859,"byte_end":118861,"line_start":28,"line_end":28,"column_start":5,"column_end":7},"name":"HS","qualname":"::rr::dns_class::DNSClass::HS","value":"DNSClass::HS","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Hesiod\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":965},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118887,"byte_end":118891,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"NONE","qualname":"::rr::dns_class::DNSClass::NONE","value":"DNSClass::NONE","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" QCLASS NONE\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118920,"byte_end":118923,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"ANY","qualname":"::rr::dns_class::DNSClass::ANY","value":"DNSClass::ANY","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" QCLASS * (ANY)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":119084,"byte_end":119087,"line_start":35,"line_end":35,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::dns_class::DNSClass::OPT","value":"DNSClass::OPT(u16)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Special class for OPT Version, it was overloaded for EDNS - RFC 6891\n From the RFC: `Values lower than 512 MUST be treated as equal to 512`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2720},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118782,"byte_end":118790,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"name":"DNSClass","qualname":"::rr::dns_class::DNSClass","value":"DNSClass::{IN, CH, HS, NONE, ANY, OPT}","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969}],"decl_id":null,"docs":" The DNS Record class\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118753,"byte_end":118772,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118773,"byte_end":119095,"line_start":22,"line_end":36,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":118773,"byte_end":119095,"line_start":22,"line_end":36,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":120042,"byte_end":120050,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"from_u16","qualname":"<DNSClass>::from_u16","value":"fn (value: u16) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert from u16 to DNSClass","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":120434,"byte_end":120441,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"for_opt","qualname":"<DNSClass>::for_opt","value":"fn (value: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the OPT version from value\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":806},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"domain","qualname":"::rr::domain","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/domain/mod.rs","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":954},{"krate":0,"index":1186},{"krate":0,"index":1232},{"krate":0,"index":1238}],"decl_id":null,"docs":" Domain name associated types, suchas Name and Label.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2746},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":124014,"byte_end":124019,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Label","qualname":"::rr::domain::label::Label","value":"","parent":null,"children":[],"decl_id":null,"docs":" Labels are always stored as ASCII, unicode characters must be encoded with punycode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":124307,"byte_end":124321,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"from_raw_bytes","qualname":"<Label>::from_raw_bytes","value":"fn (bytes: &[u8]) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" These must only be ASCII, with unicode encoded to PunyCode, or other such transformation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":124632,"byte_end":124641,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<Label>::from_utf8","value":"fn (s: &str) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Translates this string into IDNA safe name, encoding to punycode as necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":125465,"byte_end":125475,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Label>::from_ascii","value":"fn (s: &str) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Takes the ascii string and returns a new label.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":126028,"byte_end":126040,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"to_lowercase","qualname":"<Label>::to_lowercase","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts this label to lowercase\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":126530,"byte_end":126541,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"is_wildcard","qualname":"<Label>::is_wildcard","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this label is the wildcard, '*', label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":126663,"byte_end":126666,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"len","qualname":"<Label>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the lenght in bytes of this label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":126894,"byte_end":126902,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Label>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bytes of the label, this is good for writing to the wire.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":127016,"byte_end":127036,"line_start":108,"line_end":108,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<Label>::eq_ignore_ascii_case","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivelence operation disregarding case\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":127185,"byte_end":127195,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"cmp_with_f","qualname":"<Label>::cmp_with_f","value":"fn <F> (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" compares with the other label, ignoring case\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":127648,"byte_end":127655,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"to_utf8","qualname":"<Label>::to_utf8","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Performs the conversion to utf8 from IDNA as necessary, see `fmt` for more details\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":127899,"byte_end":127907,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"to_ascii","qualname":"<Label>::to_ascii","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts this label to safe ascii, escaping characters as necessary","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":128192,"byte_end":128203,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"write_ascii","qualname":"<Label>::write_ascii","value":"fn <W> (&self, f: &mut W) -> Result<(), fmt::Error>","parent":null,"children":[],"decl_id":null,"docs":" Writes this label to safe ascii, escaping characters as necessary\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":910},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131721,"byte_end":131729,"line_start":259,"line_end":259,"column_start":11,"column_end":19},"name":"LabelCmp","qualname":"::rr::domain::label::LabelCmp","value":"LabelCmp","parent":null,"children":[{"krate":0,"index":912}],"decl_id":null,"docs":" Label comparison trait for case sensitive or insensitive comparisons\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131800,"byte_end":131806,"line_start":261,"line_end":261,"column_start":8,"column_end":14},"name":"cmp_u8","qualname":"::rr::domain::label::LabelCmp::cmp_u8","value":"fn (l: u8, r: u8) -> Ordering","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" this should mimic the cmp method from [`PartialOrd`]\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":926},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132267,"byte_end":132276,"line_start":283,"line_end":283,"column_start":11,"column_end":20},"name":"IntoLabel","qualname":"::rr::domain::label::IntoLabel","value":"IntoLabel: Sized","parent":null,"children":[{"krate":0,"index":928}],"decl_id":null,"docs":" Conversion into a Label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132325,"byte_end":132335,"line_start":285,"line_end":285,"column_start":8,"column_end":18},"name":"into_label","qualname":"::rr::domain::label::IntoLabel::into_label","value":"fn (self: Self) -> ProtoResult<Label>","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Convert this into Label\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2756},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":137774,"byte_end":137778,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Name","qualname":"::rr::domain::name::Name","value":"Name {  }","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":981}],"decl_id":null,"docs":" Them should be through references. As a workaround the Strings are all Rc as well as the array\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":137896,"byte_end":137899,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Name>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new domain::Name, i.e. label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":138050,"byte_end":138054,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"root","qualname":"<Name>::root","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the root label, i.e. no labels, can probably make this better in the future.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":138470,"byte_end":138477,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Name>::is_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no labels, i.e. it's empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":139304,"byte_end":139311,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"is_fqdn","qualname":"<Name>::is_fqdn","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the name is a fully qualified domain name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":139512,"byte_end":139520,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"set_fqdn","qualname":"<Name>::set_fqdn","value":"fn (&mut self, val: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies this name is a fully qualified domain name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":139634,"byte_end":139638,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"iter","qualname":"<Name>::iter","value":"fn (&self) -> LabelIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":140098,"byte_end":140110,"line_start":110,"line_end":110,"column_start":12,"column_end":24},"name":"append_label","qualname":"<Name>::append_label","value":"fn <L> (mut self, label: L) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Appends the label to the end of this name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":141293,"byte_end":141304,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"from_labels","qualname":"<Name>::from_labels","value":"fn <I, L> (labels: I) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Name from the specified labels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":142927,"byte_end":142938,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"append_name","qualname":"<Name>::append_name","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends `other` to `self`, returning a new `Name`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":143809,"byte_end":143822,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"append_domain","qualname":"<Name>::append_domain","value":"fn (self, domain: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the `domain` to `self`, making the new Name an FQDN","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":144472,"byte_end":144484,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"to_lowercase","qualname":"<Name>::to_lowercase","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Name with all labels lowercased","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":145273,"byte_end":145282,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"base_name","qualname":"<Name>::base_name","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Trims off the first part of the name, to help with searching for the domain piece","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":146023,"byte_end":146030,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"trim_to","qualname":"<Name>::trim_to","value":"fn (&self, num_labels: usize) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Trims to the number of labels specified","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":146418,"byte_end":146430,"line_start":286,"line_end":286,"column_start":12,"column_end":24},"name":"zone_of_case","qualname":"<Name>::zone_of_case","value":"fn (&self, name: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" same as zone_of allows for case sensitive call\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":147693,"byte_end":147700,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"zone_of","qualname":"<Name>::zone_of","value":"fn (&self, name: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" returns true if the name components of self are all present at the end of name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":148441,"byte_end":148451,"line_start":354,"line_end":354,"column_start":12,"column_end":22},"name":"num_labels","qualname":"<Name>::num_labels","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of labels in the name, discounting `*`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":149255,"byte_end":149258,"line_start":377,"line_end":377,"column_start":12,"column_end":15},"name":"len","qualname":"<Name>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" returns the length in bytes of the labels. '.' counts as 1","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":149644,"byte_end":149652,"line_start":388,"line_end":388,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Name>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the length of the labels, in bytes is 0. In practive, since '.' counts as\n 1, this is never the case so the method returns false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":150122,"byte_end":150127,"line_start":404,"line_end":404,"column_start":12,"column_end":17},"name":"parse","qualname":"<Name>::parse","value":"fn (local: &str, origin: Option<&Self>) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" attempts to parse a name such as `\"example.com.\"` or `\"subdomain.example.com.\"`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":151441,"byte_end":151451,"line_start":435,"line_end":435,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Name>::from_ascii","value":"fn <S> (name: S) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Will convert the string to a name only allowing ascii as valid input ","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":155949,"byte_end":155966,"line_start":543,"line_end":543,"column_start":12,"column_end":29},"name":"emit_as_canonical","qualname":"<Name>::emit_as_canonical","value":"fn (&self, encoder: &mut BinEncoder, canonical: bool) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emits the canonical version of the name to the encoder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":159063,"byte_end":159082,"line_start":614,"line_end":614,"column_start":12,"column_end":31},"name":"emit_with_lowercase","qualname":"<Name>::emit_with_lowercase","value":"fn (&self, encoder: &mut BinEncoder, lowercase: bool) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the labels, as lower case, to the encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":160208,"byte_end":160216,"line_start":649,"line_end":649,"column_start":12,"column_end":20},"name":"cmp_case","qualname":"<Name>::cmp_case","value":"fn (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Case sensitive comparison\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":160377,"byte_end":160384,"line_start":654,"line_end":654,"column_start":12,"column_end":19},"name":"eq_case","qualname":"<Name>::eq_case","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares the Names, in a case sensitive manner\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":160749,"byte_end":160757,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"to_ascii","qualname":"<Name>::to_ascii","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts this name into an ascii safe string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":161260,"byte_end":161267,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"to_utf8","qualname":"<Name>::to_utf8","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts the Name labels to the utf8 String form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":162330,"byte_end":162342,"line_start":712,"line_end":712,"column_start":12,"column_end":24},"name":"is_localhost","qualname":"<Name>::is_localhost","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Name` is either localhost or in the localhost zone.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1092},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163145,"byte_end":163154,"line_start":746,"line_end":746,"column_start":12,"column_end":21},"name":"LabelIter","qualname":"::rr::domain::name::LabelIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over labels in a name\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1166},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":173040,"byte_end":173048,"line_start":1004,"line_end":1004,"column_start":11,"column_end":19},"name":"IntoName","qualname":"::rr::domain::name::IntoName","value":"IntoName: Sized","parent":null,"children":[{"krate":0,"index":1168}],"decl_id":null,"docs":" Conversion into a Name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":173096,"byte_end":173105,"line_start":1006,"line_end":1006,"column_start":8,"column_end":17},"name":"into_name","qualname":"::rr::domain::name::IntoName::into_name","value":"fn (self) -> ProtoResult<Name>","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Convert this into Name\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1186},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"usage","qualname":"::rr::domain::usage","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/domain/usage.rs","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2792},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2812},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2832},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2852},{"krate":0,"index":2858},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2872},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2892},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2912},{"krate":0,"index":2918},{"krate":0,"index":2920},{"krate":0,"index":2922},{"krate":0,"index":2932},{"krate":0,"index":2938},{"krate":0,"index":2950},{"krate":0,"index":2948},{"krate":0,"index":2944},{"krate":0,"index":2940},{"krate":0,"index":2954},{"krate":0,"index":2966},{"krate":0,"index":2964},{"krate":0,"index":2960},{"krate":0,"index":2956},{"krate":0,"index":2970},{"krate":0,"index":2982},{"krate":0,"index":2980},{"krate":0,"index":2976},{"krate":0,"index":2972},{"krate":0,"index":2986},{"krate":0,"index":2998},{"krate":0,"index":2996},{"krate":0,"index":2992},{"krate":0,"index":2988},{"krate":0,"index":3002},{"krate":0,"index":3014},{"krate":0,"index":3012},{"krate":0,"index":3008},{"krate":0,"index":3004},{"krate":0,"index":3018},{"krate":0,"index":3030},{"krate":0,"index":3028},{"krate":0,"index":3024},{"krate":0,"index":3020},{"krate":0,"index":3034},{"krate":0,"index":3046},{"krate":0,"index":3044},{"krate":0,"index":3040},{"krate":0,"index":3036},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1226}],"decl_id":null,"docs":" Reserved zone names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":186963,"byte_end":186969,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::UserUsage::Normal","value":"UserUsage::Normal","parent":{"krate":0,"index":2938},"children":[],"decl_id":null,"docs":" Users are free to use these names as they would any other\n reverse-mapping names.  However, since there is no central\n authority responsible for use of private addresses, users SHOULD\n be aware that these names are likely to yield different results\n on different networks.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":187215,"byte_end":187223,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::UserUsage::Loopback","value":"UserUsage::Loopback","parent":{"krate":0,"index":2938},"children":[],"decl_id":null,"docs":" Users are free to use localhost names as they would any other\n domain names.  Users may assume that IPv4 and IPv6 address\n queries for localhost names will always resolve to the respective\n IP loopback address.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1005},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":187419,"byte_end":187427,"line_start":91,"line_end":91,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::UserUsage::NxDomain","value":"UserUsage::NxDomain","parent":{"krate":0,"index":2938},"children":[],"decl_id":null,"docs":" Users are free to use \"invalid\" names as they would any other\n domain names.  Users MAY assume that queries for \"invalid\" names\n will always return NXDOMAIN responses.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2938},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":186638,"byte_end":186647,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"UserUsage","qualname":"::rr::domain::usage::UserUsage","value":"UserUsage::{Normal, Loopback, NxDomain}","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005}],"decl_id":null,"docs":" Users:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":186629,"byte_end":187430,"line_start":76,"line_end":92,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":186629,"byte_end":187430,"line_start":76,"line_end":92,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":188285,"byte_end":188291,"line_start":113,"line_end":113,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::AppUsage::Normal","value":"AppUsage::Normal","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" Application software SHOULD NOT recognize these names as special,\n and SHOULD use these names as they would other reverse-mapping\n names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1009},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":188464,"byte_end":188472,"line_start":118,"line_end":118,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::AppUsage::Loopback","value":"AppUsage::Loopback","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" Application software MAY recognize localhost names as special, or\n MAY pass them to name resolution APIs as they would for other\n domain names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":188645,"byte_end":188653,"line_start":124,"line_end":124,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::AppUsage::NxDomain","value":"AppUsage::NxDomain","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" Application software MAY recognize \"invalid\" names as special or\n MAY pass them to name resolution APIs as they would for other\n domain names.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2954},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":187799,"byte_end":187807,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"name":"AppUsage","qualname":"::rr::domain::usage::AppUsage","value":"AppUsage::{Normal, Loopback, NxDomain}","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1011}],"decl_id":null,"docs":" Application Software:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":187790,"byte_end":188656,"line_start":102,"line_end":125,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":187790,"byte_end":188656,"line_start":102,"line_end":125,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":189714,"byte_end":189720,"line_start":148,"line_end":148,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::ResolverUsage::Normal","value":"ResolverUsage::Normal","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD NOT recognize these\n names as special and SHOULD NOT treat them differently.  Name\n resolution APIs SHOULD send queries for these names to their\n configured caching DNS server(s).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":190074,"byte_end":190082,"line_start":155,"line_end":155,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::ResolverUsage::Loopback","value":"ResolverUsage::Loopback","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD recognize localhost\n names as special and SHOULD always return the IP loopback address\n for address queries and negative responses for all other query\n types.  Name resolution APIs SHOULD NOT send queries for\n localhost names to their configured caching DNS server(s).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1017},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":190364,"byte_end":190372,"line_start":161,"line_end":161,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::ResolverUsage::NxDomain","value":"ResolverUsage::NxDomain","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD recognize \"invalid\"\n names as special and SHOULD always return immediate negative\n responses.  Name resolution APIs SHOULD NOT send queries for\n \"invalid\" names to their configured caching DNS server(s).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2970},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":188923,"byte_end":188936,"line_start":133,"line_end":133,"column_start":10,"column_end":23},"name":"ResolverUsage","qualname":"::rr::domain::usage::ResolverUsage","value":"ResolverUsage::{Normal, Loopback, NxDomain}","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017}],"decl_id":null,"docs":" Name Resolution APIs and Libraries:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":188914,"byte_end":190375,"line_start":133,"line_end":162,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":188914,"byte_end":190375,"line_start":133,"line_end":162,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":191429,"byte_end":191441,"line_start":182,"line_end":182,"column_start":5,"column_end":17},"name":"NonRecursive","qualname":"::rr::domain::usage::CacheUsage::NonRecursive","value":"CacheUsage::NonRecursive","parent":{"krate":0,"index":2986},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize these names as special and\n SHOULD NOT, by default, attempt to look up NS records for them,\n or otherwise query authoritative DNS servers in an attempt to\n resolve these names.  Instead, caching DNS servers SHOULD, by\n default, generate immediate (positive or negative) responses for\n all such queries.  This is to avoid unnecessary load on the root\n name servers and other name servers.  Caching DNS servers SHOULD\n offer a configuration option (disabled by default) to enable\n upstream resolution of such names, for use in private networks\n where private-address reverse-mapping names are known to be\n handled by an authoritative DNS server in said private network.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1021},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":191891,"byte_end":191899,"line_start":191,"line_end":191,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::CacheUsage::NxDomain","value":"CacheUsage::NxDomain","parent":{"krate":0,"index":2986},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize \"invalid\" names as special\n and SHOULD NOT attempt to look up NS records for them, or\n otherwise query authoritative DNS servers in an attempt to\n resolve \"invalid\" names.  Instead, caching DNS servers SHOULD\n generate immediate NXDOMAIN responses for all such queries.  This\n is to avoid unnecessary load on the root name servers and other\n name servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1023},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":192472,"byte_end":192480,"line_start":201,"line_end":201,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::CacheUsage::Loopback","value":"CacheUsage::Loopback","parent":{"krate":0,"index":2986},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize localhost names as special\n and SHOULD NOT attempt to look up NS records for them, or\n otherwise query authoritative DNS servers in an attempt to\n resolve localhost names.  Instead, caching DNS servers SHOULD,\n for all such address queries, generate an immediate positive\n response giving the IP loopback address, and for all other query\n types, generate an immediate negative response.  This is to avoid\n unnecessary load on the root name servers and other name servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":192603,"byte_end":192609,"line_start":205,"line_end":205,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::CacheUsage::Normal","value":"CacheUsage::Normal","parent":{"krate":0,"index":2986},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD NOT recognize example names as special\n and SHOULD resolve them normally.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2986},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":190630,"byte_end":190640,"line_start":170,"line_end":170,"column_start":10,"column_end":20},"name":"CacheUsage","qualname":"::rr::domain::usage::CacheUsage","value":"CacheUsage::{NonRecursive, NxDomain, Loopback, Normal}","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025}],"decl_id":null,"docs":" Caching DNS Servers:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":190621,"byte_end":192612,"line_start":170,"line_end":206,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":190621,"byte_end":192612,"line_start":170,"line_end":206,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":193202,"byte_end":193207,"line_start":220,"line_end":220,"column_start":5,"column_end":10},"name":"Local","qualname":"::rr::domain::usage::AuthUsage::Local","value":"AuthUsage::Local","parent":{"krate":0,"index":3002},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize these names as special\n and SHOULD, by default, generate immediate negative responses for\n all such queries, unless explicitly configured by the\n administrator to give positive answers for private-address\n reverse-mapping names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1029},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":193522,"byte_end":193530,"line_start":227,"line_end":227,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::AuthUsage::NxDomain","value":"AuthUsage::NxDomain","parent":{"krate":0,"index":3002},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize these names as special\n and SHOULD, by default, generate immediate negative responses for\n all such queries, unless explicitly configured by the\n administrator to give positive answers for private-address\n reverse-mapping names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1031},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":193691,"byte_end":193699,"line_start":232,"line_end":232,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::AuthUsage::Loopback","value":"AuthUsage::Loopback","parent":{"krate":0,"index":3002},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize localhost names as\n special and handle them as described above for caching DNS\n servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":193795,"byte_end":193801,"line_start":236,"line_end":236,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::AuthUsage::Normal","value":"AuthUsage::Normal","parent":{"krate":0,"index":3002},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD NOT recognize example names as\n special.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3002},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":192879,"byte_end":192888,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"name":"AuthUsage","qualname":"::rr::domain::usage::AuthUsage","value":"AuthUsage::{Local, NxDomain, Loopback, Normal}","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033}],"decl_id":null,"docs":" Authoritative DNS Servers:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":192870,"byte_end":193804,"line_start":214,"line_end":237,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":192870,"byte_end":193804,"line_start":214,"line_end":237,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1035},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":194799,"byte_end":194805,"line_start":258,"line_end":258,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::OpUsage::Normal","value":"OpUsage::Normal","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD, if they are using private addresses,\n configure their authoritative DNS servers to act as authoritative\n for these names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1037},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":195002,"byte_end":195010,"line_start":263,"line_end":263,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::OpUsage::Loopback","value":"OpUsage::Loopback","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD be aware that the effective RDATA for\n localhost names is defined by protocol specification and cannot\n be modified by local configuration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1039},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":195225,"byte_end":195233,"line_start":268,"line_end":268,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::OpUsage::NxDomain","value":"OpUsage::NxDomain","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD be aware that the effective RDATA for\n \"invalid\" names is defined by protocol specification to be\n nonexistent and cannot be modified by local configuration.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3018},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":194439,"byte_end":194446,"line_start":250,"line_end":250,"column_start":10,"column_end":17},"name":"OpUsage","qualname":"::rr::domain::usage::OpUsage","value":"OpUsage::{Normal, Loopback, NxDomain}","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039}],"decl_id":null,"docs":" DNS Server Operators:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":194430,"byte_end":195236,"line_start":250,"line_end":269,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":194430,"byte_end":195236,"line_start":250,"line_end":269,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1041},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":195929,"byte_end":195935,"line_start":285,"line_end":285,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::RegistryUsage::Normal","value":"RegistryUsage::Normal","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Stanard checks apply\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":197578,"byte_end":197586,"line_start":314,"line_end":314,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::rr::domain::usage::RegistryUsage::Reserved","value":"RegistryUsage::Reserved","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" DNS Registries/Registrars MUST NOT grant requests to register\n test names in the normal way to any person or entity.  Test names\n are reserved for use in private networks and fall outside the set\n of names available for allocation by registries/registrars.\n Attempting to allocate a test name as if it were a normal DNS\n domain name will probably not work as desired, for reasons 4, 5,\n and 6 above.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3034},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":195881,"byte_end":195894,"line_start":283,"line_end":283,"column_start":10,"column_end":23},"name":"RegistryUsage","qualname":"::rr::domain::usage::RegistryUsage","value":"RegistryUsage::{Normal, Reserved}","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1043}],"decl_id":null,"docs":" DNS Registries/Registrars:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":195872,"byte_end":197589,"line_start":283,"line_end":315,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":195872,"byte_end":197589,"line_start":283,"line_end":315,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":197698,"byte_end":197707,"line_start":318,"line_end":318,"column_start":12,"column_end":21},"name":"ZoneUsage","qualname":"::rr::domain::usage::ZoneUsage","value":"ZoneUsage {  }","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281}],"decl_id":null,"docs":" ZoneUsage represents information about how a name falling in a given zone should be treated\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":197978,"byte_end":197981,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<ZoneUsage>::new","value":"fn (name: Name, user: UserUsage, app: AppUsage, resolver: ResolverUsage, cache: CacheUsage, auth: AuthUsage, op: OpUsage, registry: RegistryUsage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ZoneUsage with the associated values\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":198285,"byte_end":198292,"line_start":336,"line_end":336,"column_start":12,"column_end":19},"name":"default","qualname":"<ZoneUsage>::default","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new Default, with all no restrictions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":198533,"byte_end":198540,"line_start":341,"line_end":341,"column_start":12,"column_end":19},"name":"reverse","qualname":"<ZoneUsage>::reverse","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for reverse zones\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":198792,"byte_end":198796,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"test","qualname":"<ZoneUsage>::test","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .test. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":199053,"byte_end":199062,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"localhost","qualname":"<ZoneUsage>::localhost","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .localhost. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":199324,"byte_end":199331,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"invalid","qualname":"<ZoneUsage>::invalid","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .invalid. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":199593,"byte_end":199600,"line_start":361,"line_end":361,"column_start":12,"column_end":19},"name":"example","qualname":"<ZoneUsage>::example","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .example. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":199844,"byte_end":199848,"line_start":366,"line_end":366,"column_start":12,"column_end":16},"name":"name","qualname":"<ZoneUsage>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" A reference to this zone name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":199950,"byte_end":199954,"line_start":371,"line_end":371,"column_start":12,"column_end":16},"name":"user","qualname":"<ZoneUsage>::user","value":"fn (&self) -> UserUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the UserUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200056,"byte_end":200059,"line_start":376,"line_end":376,"column_start":12,"column_end":15},"name":"app","qualname":"<ZoneUsage>::app","value":"fn (&self) -> AppUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the AppUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200164,"byte_end":200172,"line_start":381,"line_end":381,"column_start":12,"column_end":20},"name":"resolver","qualname":"<ZoneUsage>::resolver","value":"fn (&self) -> ResolverUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the ResolverUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200284,"byte_end":200289,"line_start":386,"line_end":386,"column_start":12,"column_end":17},"name":"cache","qualname":"<ZoneUsage>::cache","value":"fn (&self) -> CacheUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the CacheUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200394,"byte_end":200398,"line_start":391,"line_end":391,"column_start":12,"column_end":16},"name":"auth","qualname":"<ZoneUsage>::auth","value":"fn (&self) -> AuthUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the AuthUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200499,"byte_end":200501,"line_start":396,"line_end":396,"column_start":12,"column_end":14},"name":"op","qualname":"<ZoneUsage>::op","value":"fn (&self) -> OpUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the OpUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200604,"byte_end":200612,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"registry","qualname":"<ZoneUsage>::registry","value":"fn (&self) -> RegistryUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the RegistryUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1244},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rdata","qualname":"::rr::rdata","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/mod.rs","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1258},{"krate":0,"index":1270},{"krate":0,"index":1344},{"krate":0,"index":1364},{"krate":0,"index":1376},{"krate":0,"index":1394},{"krate":0,"index":1446},{"krate":0,"index":1478},{"krate":0,"index":1502},{"krate":0,"index":1548},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578}],"decl_id":null,"docs":" All record data structures and related serialization methods\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1246},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"a","qualname":"::rr::rdata::a","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/a.rs","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256}],"decl_id":null,"docs":" IPv4 address record data","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1254},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,97,46,114,115],"byte_start":203626,"byte_end":203630,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::a::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1256},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,97,46,114,115],"byte_start":203862,"byte_end":203866,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::a::emit","value":"fn (encoder: &mut BinEncoder, address: &Ipv4Addr) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1258},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,97,97,97,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aaaa","qualname":"::rr::rdata::aaaa","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/aaaa.rs","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" IPv6 address record data","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1266},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,97,97,97,97,46,114,115],"byte_start":206449,"byte_end":206453,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::aaaa::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Ipv6Addr>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,97,97,97,97,46,114,115],"byte_start":206911,"byte_end":206915,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::aaaa::emit","value":"fn (encoder: &mut BinEncoder, address: &Ipv6Addr) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1270},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"caa","qualname":"::rr::rdata::caa","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/caa.rs","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":3050},{"krate":0,"index":3070},{"krate":0,"index":3064},{"krate":0,"index":3060},{"krate":0,"index":3056},{"krate":0,"index":3052},{"krate":0,"index":1282},{"krate":0,"index":3074},{"krate":0,"index":3094},{"krate":0,"index":3088},{"krate":0,"index":3084},{"krate":0,"index":3080},{"krate":0,"index":3076},{"krate":0,"index":1298},{"krate":0,"index":1310},{"krate":0,"index":3098},{"krate":0,"index":3118},{"krate":0,"index":3112},{"krate":0,"index":3108},{"krate":0,"index":3104},{"krate":0,"index":3100},{"krate":0,"index":1314},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":3122},{"krate":0,"index":3142},{"krate":0,"index":3136},{"krate":0,"index":3132},{"krate":0,"index":3128},{"krate":0,"index":3124},{"krate":0,"index":1332},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342}],"decl_id":null,"docs":" allows a DNS domain name holder to specify one or more Certification\n Authorities (CAs) authorized to issue certificates for that domain.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":215458,"byte_end":215461,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"CAA","qualname":"::rr::rdata::caa::CAA","value":"CAA { issuer_critical, tag, value }","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049}],"decl_id":null,"docs":" The CAA RR Type","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":215447,"byte_end":215586,"line_start":130,"line_end":134,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1045},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":215487,"byte_end":215502,"line_start":131,"line_end":131,"column_start":24,"column_end":39},"name":"issuer_critical","qualname":"::rr::rdata::caa::CAA::issuer_critical","value":"bool","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1047},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":215533,"byte_end":215536,"line_start":132,"line_end":132,"column_start":24,"column_end":27},"name":"tag","qualname":"::rr::rdata::caa::CAA::tag","value":"rr::rdata::caa::Property","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1049},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":215571,"byte_end":215576,"line_start":133,"line_end":133,"column_start":24,"column_end":29},"name":"value","qualname":"::rr::rdata::caa::CAA::value","value":"rr::rdata::caa::Value","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":216373,"byte_end":216382,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"new_issue","qualname":"<CAA>::new_issue","value":"fn (issuer_critical: bool, name: Option<Name>, options: Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `issue`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":216988,"byte_end":217001,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"new_issuewild","qualname":"<CAA>::new_issuewild","value":"fn (issuer_critical: bool, name: Option<Name>, options: Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `issuewild`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":217612,"byte_end":217621,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"new_iodef","qualname":"<CAA>::new_iodef","value":"fn (issuer_critical: bool, url: Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `iodef`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":217959,"byte_end":217974,"line_start":197,"line_end":197,"column_start":12,"column_end":27},"name":"issuer_critical","qualname":"<CAA>::issuer_critical","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the corresponding property tag MUST be understood if the semantics of the CAA record are to be correctly interpreted by an issuer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":218090,"byte_end":218093,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"tag","qualname":"<CAA>::tag","value":"fn (&self) -> &Property","parent":null,"children":[],"decl_id":null,"docs":" The property tag, see struct documentation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":218239,"byte_end":218244,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"name":"value","qualname":"<CAA>::value","value":"fn (&self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" a potentially associated value with the property tag, see struct documentation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":218718,"byte_end":218723,"line_start":220,"line_end":220,"column_start":5,"column_end":10},"name":"Issue","qualname":"::rr::rdata::caa::Property::Issue","value":"Property::Issue","parent":{"krate":0,"index":3074},"children":[],"decl_id":null,"docs":" The issue property\n    entry authorizes the holder of the domain name <Issuer Domain\n    Name> or a party acting under the explicit authority of the holder\n    of that domain name to issue certificates for the domain in which\n    the property is published.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":219035,"byte_end":219044,"line_start":226,"line_end":226,"column_start":5,"column_end":14},"name":"IssueWild","qualname":"::rr::rdata::caa::Property::IssueWild","value":"Property::IssueWild","parent":{"krate":0,"index":3074},"children":[],"decl_id":null,"docs":" The issuewild\n    property entry authorizes the holder of the domain name <Issuer\n    Domain Name> or a party acting under the explicit authority of the\n    holder of that domain name to issue wildcard certificates for the\n    domain in which the property is published.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1057},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":219449,"byte_end":219454,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"Iodef","qualname":"::rr::rdata::caa::Property::Iodef","value":"Property::Iodef","parent":{"krate":0,"index":3074},"children":[],"decl_id":null,"docs":" Specifies a URL to which an issuer MAY report\n    certificate issue requests that are inconsistent with the issuer's\n    Certification Practices or Certificate Policy, or that a\n    Certificate Evaluator may use to report observation of a possible\n    policy violation. The Incident Object Description Exchange Format\n    (IODEF) format is used [RFC5070].\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":219496,"byte_end":219503,"line_start":235,"line_end":235,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::caa::Property::Unknown","value":"Property::Unknown(String)","parent":{"krate":0,"index":3074},"children":[],"decl_id":null,"docs":" Unknown format to TRust-DNS\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3074},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":218410,"byte_end":218418,"line_start":214,"line_end":214,"column_start":10,"column_end":18},"name":"Property","qualname":"::rr::rdata::caa::Property","value":"Property::{Issue, IssueWild, Iodef, Unknown}","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059}],"decl_id":null,"docs":" Specifies in what contexts this key may be trusted for use\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":218401,"byte_end":219514,"line_start":214,"line_end":236,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":219838,"byte_end":219846,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"is_issue","qualname":"<Property>::is_issue","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `issue`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":220030,"byte_end":220042,"line_start":258,"line_end":258,"column_start":12,"column_end":24},"name":"is_issuewild","qualname":"<Property>::is_issuewild","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `issueworld`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":220225,"byte_end":220233,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"is_iodef","qualname":"<Property>::is_iodef","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `iodef`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":220427,"byte_end":220437,"line_start":276,"line_end":276,"column_start":12,"column_end":22},"name":"is_unknown","qualname":"<Property>::is_unknown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is not known to TRust-DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221207,"byte_end":221213,"line_start":308,"line_end":308,"column_start":5,"column_end":11},"name":"Issuer","qualname":"::rr::rdata::caa::Value::Issuer","value":"Value::Issuer(Option<Name>, Vec<KeyValue>)","parent":{"krate":0,"index":3098},"children":[],"decl_id":null,"docs":" Issuer authorized to issue certs for this zone, and any associated parameters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1071},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221287,"byte_end":221290,"line_start":310,"line_end":310,"column_start":5,"column_end":8},"name":"Url","qualname":"::rr::rdata::caa::Value::Url","value":"Value::Url(Url)","parent":{"krate":0,"index":3098},"children":[],"decl_id":null,"docs":" Url to which to send CA errors\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1075},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221349,"byte_end":221356,"line_start":312,"line_end":312,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::caa::Value::Unknown","value":"Value::Unknown(Vec<u8>)","parent":{"krate":0,"index":3098},"children":[],"decl_id":null,"docs":" Unrecognized tag and value by TRust-DNS\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3098},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221109,"byte_end":221114,"line_start":306,"line_end":306,"column_start":10,"column_end":15},"name":"Value","qualname":"::rr::rdata::caa::Value","value":"Value::{Issuer, Url, Unknown}","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1071},{"krate":0,"index":1075}],"decl_id":null,"docs":" Potential values.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221100,"byte_end":221368,"line_start":306,"line_end":313,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221430,"byte_end":221439,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"name":"is_issuer","qualname":"<Value>::is_issuer","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is an `Issuer`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221612,"byte_end":221618,"line_start":326,"line_end":326,"column_start":12,"column_end":18},"name":"is_url","qualname":"<Value>::is_url","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is a `Url`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221793,"byte_end":221803,"line_start":335,"line_end":335,"column_start":12,"column_end":22},"name":"is_unknown","qualname":"<Value>::is_unknown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is an `Unknown`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1328},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":226657,"byte_end":226668,"line_start":474,"line_end":474,"column_start":8,"column_end":19},"name":"read_issuer","qualname":"::rr::rdata::caa::read_issuer","value":"fn (bytes: &[u8]) -> ProtoResult<(Option<Name>, Vec<KeyValue>)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the issuer field according to the spec","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1330},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":232486,"byte_end":232496,"line_start":624,"line_end":624,"column_start":8,"column_end":18},"name":"read_iodef","qualname":"::rr::rdata::caa::read_iodef","value":"fn (url: &[u8]) -> ProtoResult<Url>","parent":null,"children":[],"decl_id":null,"docs":" Incident Object Description Exchange Format","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3122},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":232857,"byte_end":232865,"line_start":635,"line_end":635,"column_start":12,"column_end":20},"name":"KeyValue","qualname":"::rr::rdata::caa::KeyValue","value":"KeyValue {  }","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1083}],"decl_id":null,"docs":" Issuer key and value pairs.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":232846,"byte_end":232905,"line_start":635,"line_end":638,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":232973,"byte_end":232976,"line_start":642,"line_end":642,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyValue>::new","value":"fn <K, V> (key: K, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Contstruct a new KeyValue pair\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1336},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":236767,"byte_end":236771,"line_start":728,"line_end":728,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::caa::read","value":"fn (decoder: &mut BinDecoder, rdata_length: u16) -> ProtoResult<CAA>","parent":null,"children":[],"decl_id":null,"docs":" Read the bincary CAA format","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1342},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":238735,"byte_end":238739,"line_start":793,"line_end":793,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::caa::emit","value":"fn (encoder: &mut BinEncoder, caa: &CAA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1344},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mx","qualname":"::rr::rdata::mx","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/mx.rs","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":3146},{"krate":0,"index":3166},{"krate":0,"index":3160},{"krate":0,"index":3156},{"krate":0,"index":3152},{"krate":0,"index":3148},{"krate":0,"index":1352},{"krate":0,"index":1360},{"krate":0,"index":1362}],"decl_id":null,"docs":" mail exchange, email, record\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3146},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":247373,"byte_end":247375,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"MX","qualname":"::rr::rdata::mx::MX","value":"MX {  }","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1089}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":247362,"byte_end":247420,"line_start":41,"line_end":44,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":247766,"byte_end":247769,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<MX>::new","value":"fn (preference: u16, exchange: Name) -> MX","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new MX RData","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":248274,"byte_end":248284,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"preference","qualname":"<MX>::preference","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":248640,"byte_end":248648,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"exchange","qualname":"<MX>::exchange","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1360},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":248748,"byte_end":248752,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::mx::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<MX>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1362},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":249533,"byte_end":249537,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::mx::emit","value":"fn (encoder: &mut BinEncoder, mx: &MX) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1364},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,97,109,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::rr::rdata::name","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/name.rs","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374}],"decl_id":null,"docs":" Record type for all cname like records.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1372},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,97,109,101,46,114,115],"byte_start":252155,"byte_end":252159,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::name::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Name>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1374},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,97,109,101,46,114,115],"byte_start":252965,"byte_end":252969,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::name::emit","value":"fn (encoder: &mut BinEncoder, name_data: &Name) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1376},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"null","qualname":"::rr::rdata::null","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/null.rs","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":3170},{"krate":0,"index":3194},{"krate":0,"index":3190},{"krate":0,"index":3184},{"krate":0,"index":3180},{"krate":0,"index":3176},{"krate":0,"index":3172},{"krate":0,"index":1382},{"krate":0,"index":1390},{"krate":0,"index":1392}],"decl_id":null,"docs":" null record type, generally not used except as an internal tool for representing null data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3170},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255266,"byte_end":255270,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"NULL","qualname":"::rr::rdata::null::NULL","value":"NULL {  }","parent":null,"children":[{"krate":0,"index":1093}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255255,"byte_end":255305,"line_start":40,"line_end":42,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255365,"byte_end":255368,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<NULL>::new","value":"fn () -> NULL","parent":null,"children":[],"decl_id":null,"docs":" Construct a new NULL RData\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255487,"byte_end":255491,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"with","qualname":"<NULL>::with","value":"fn (anything: Vec<u8>) -> NULL","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new NULL RData with the associated data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255648,"byte_end":255656,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"anything","qualname":"<NULL>::anything","value":"fn (&self) -> Option<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the buffer stored in the NULL\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1390},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255775,"byte_end":255779,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::null::read","value":"fn (decoder: &mut BinDecoder, rdata_length: u16) -> ProtoResult<NULL>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1392},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":256341,"byte_end":256345,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::null::emit","value":"fn (encoder: &mut BinEncoder, nil: &NULL) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1394},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"opt","qualname":"::rr::rdata::opt","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/opt.rs","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":3198},{"krate":0,"index":3218},{"krate":0,"index":3214},{"krate":0,"index":3208},{"krate":0,"index":3204},{"krate":0,"index":3200},{"krate":0,"index":1402},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":3222},{"krate":0,"index":3234},{"krate":0,"index":3228},{"krate":0,"index":3224},{"krate":0,"index":3238},{"krate":0,"index":3260},{"krate":0,"index":3256},{"krate":0,"index":3254},{"krate":0,"index":3250},{"krate":0,"index":3244},{"krate":0,"index":3240},{"krate":0,"index":1416},{"krate":0,"index":1420},{"krate":0,"index":3264},{"krate":0,"index":3296},{"krate":0,"index":3284},{"krate":0,"index":3278},{"krate":0,"index":3274},{"krate":0,"index":3270},{"krate":0,"index":3266},{"krate":0,"index":1424},{"krate":0,"index":1430},{"krate":0,"index":1434},{"krate":0,"index":1438},{"krate":0,"index":1442}],"decl_id":null,"docs":" option record for passing protocol options between the client and server\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3198},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":264733,"byte_end":264736,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"OPT","qualname":"::rr::rdata::opt::OPT","value":"OPT {  }","parent":null,"children":[{"krate":0,"index":1097}],"decl_id":null,"docs":" The OPT record type is used for ExtendedDNS records.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":264722,"byte_end":264784,"line_start":164,"line_end":166,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":265015,"byte_end":265018,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<OPT>::new","value":"fn (options: HashMap<EdnsCode, EdnsOption>) -> OPT","parent":null,"children":[],"decl_id":null,"docs":" Creates a new OPT record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":265153,"byte_end":265160,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"options","qualname":"<OPT>::options","value":"fn (&self) -> &HashMap<EdnsCode, EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" The entire map of options\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":265290,"byte_end":265293,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"get","qualname":"<OPT>::get","value":"fn (&self, code: &EdnsCode) -> Option<&EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" Get a single option based on the code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":265462,"byte_end":265468,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"insert","qualname":"<OPT>::insert","value":"fn (&mut self, option: EdnsOption) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert a new option, the key is derived from the `EdnsOption`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1412},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":265615,"byte_end":265619,"line_start":199,"line_end":199,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::opt::read","value":"fn (decoder: &mut BinDecoder, rdata_length: u16) -> ProtoResult<OPT>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1414},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":267638,"byte_end":267642,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::opt::emit","value":"fn (encoder: &mut BinEncoder, opt: &OPT) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1113},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268379,"byte_end":268383,"line_start":278,"line_end":278,"column_start":5,"column_end":9},"name":"Zero","qualname":"::rr::rdata::opt::EdnsCode::Zero","value":"EdnsCode::Zero","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [RFC 6891, Reserved](https://tools.ietf.org/html/rfc6891)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1115},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268461,"byte_end":268464,"line_start":281,"line_end":281,"column_start":5,"column_end":8},"name":"LLQ","qualname":"::rr::rdata::opt::EdnsCode::LLQ","value":"EdnsCode::LLQ","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [LLQ On-hold](http://files.dns-sd.org/draft-sekar-dns-llq.txt)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268540,"byte_end":268542,"line_start":284,"line_end":284,"column_start":5,"column_end":7},"name":"UL","qualname":"::rr::rdata::opt::EdnsCode::UL","value":"EdnsCode::UL","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [UL On-hold](http://files.dns-sd.org/draft-sekar-dns-ul.txt)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1119},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268611,"byte_end":268615,"line_start":287,"line_end":287,"column_start":5,"column_end":9},"name":"NSID","qualname":"::rr::rdata::opt::EdnsCode::NSID","value":"EdnsCode::NSID","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [RFC 5001, NSID](https://tools.ietf.org/html/rfc5001)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1121},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268770,"byte_end":268773,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"DAU","qualname":"::rr::rdata::opt::EdnsCode::DAU","value":"EdnsCode::DAU","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [RFC 6975, DNSSEC Algorithm Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1123},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268856,"byte_end":268859,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"DHU","qualname":"::rr::rdata::opt::EdnsCode::DHU","value":"EdnsCode::DHU","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [RFC 6975, DS Hash Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1125},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268945,"byte_end":268948,"line_start":296,"line_end":296,"column_start":5,"column_end":8},"name":"N3U","qualname":"::rr::rdata::opt::EdnsCode::N3U","value":"EdnsCode::N3U","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [RFC 6975, NSEC3 Hash Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1127},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269063,"byte_end":269069,"line_start":299,"line_end":299,"column_start":5,"column_end":11},"name":"Subnet","qualname":"::rr::rdata::opt::EdnsCode::Subnet","value":"EdnsCode::Subnet","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [edns-client-subnet, Optional](https://tools.ietf.org/html/draft-vandergaast-edns-client-subnet-02)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1129},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269155,"byte_end":269161,"line_start":302,"line_end":302,"column_start":5,"column_end":11},"name":"Expire","qualname":"::rr::rdata::opt::EdnsCode::Expire","value":"EdnsCode::Expire","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [RFC 7314, EDNS EXPIRE, Optional](https://tools.ietf.org/html/rfc7314)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1131},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269260,"byte_end":269266,"line_start":305,"line_end":305,"column_start":5,"column_end":11},"name":"Cookie","qualname":"::rr::rdata::opt::EdnsCode::Cookie","value":"EdnsCode::Cookie","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-cookies](https://tools.ietf.org/html/draft-ietf-dnsop-cookies-07)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1133},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269397,"byte_end":269406,"line_start":308,"line_end":308,"column_start":5,"column_end":14},"name":"Keepalive","qualname":"::rr::rdata::opt::EdnsCode::Keepalive","value":"EdnsCode::Keepalive","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-edns-tcp-keepalive, Optional](https://tools.ietf.org/html/draft-ietf-dnsop-edns-tcp-keepalive-04)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1135},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269525,"byte_end":269532,"line_start":311,"line_end":311,"column_start":5,"column_end":12},"name":"Padding","qualname":"::rr::rdata::opt::EdnsCode::Padding","value":"EdnsCode::Padding","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [draft-mayrhofer-edns0-padding, Optional](https://tools.ietf.org/html/draft-mayrhofer-edns0-padding-01)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1137},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269649,"byte_end":269654,"line_start":314,"line_end":314,"column_start":5,"column_end":10},"name":"Chain","qualname":"::rr::rdata::opt::EdnsCode::Chain","value":"EdnsCode::Chain","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-edns-chain-query](https://tools.ietf.org/html/draft-ietf-dnsop-edns-chain-query-07)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1139},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269725,"byte_end":269732,"line_start":317,"line_end":317,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::opt::EdnsCode::Unknown","value":"EdnsCode::Unknown(u16)","parent":{"krate":0,"index":3238},"children":[],"decl_id":null,"docs":" Unknown, used to deal with unknown or unsupported codes\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3238},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268298,"byte_end":268306,"line_start":276,"line_end":276,"column_start":10,"column_end":18},"name":"EdnsCode","qualname":"::rr::rdata::opt::EdnsCode","value":"EdnsCode::{Zero, LLQ, UL, NSID, DAU, DHU, N3U, Subnet, Expire, Cookie, Keepalive, Padding, Chain, Unknown}","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139}],"decl_id":null,"docs":" The code of the EDNS data option\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268289,"byte_end":269740,"line_start":276,"line_end":318,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":268289,"byte_end":269740,"line_start":276,"line_end":318,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1145},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":271946,"byte_end":271953,"line_start":385,"line_end":385,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::opt::EdnsOption::Unknown","value":"EdnsOption::Unknown(u16, Vec<u8>)","parent":{"krate":0,"index":3264},"children":[],"decl_id":null,"docs":" Unknown, used to deal with unknown or unsupported codes\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3264},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":271439,"byte_end":271449,"line_start":371,"line_end":371,"column_start":10,"column_end":20},"name":"EdnsOption","qualname":"::rr::rdata::opt::EdnsOption","value":"EdnsOption::{Unknown}","parent":null,"children":[{"krate":0,"index":1145}],"decl_id":null,"docs":" options used to pass information about capabilities between client and server","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":271430,"byte_end":271970,"line_start":371,"line_end":386,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":272055,"byte_end":272058,"line_start":390,"line_end":390,"column_start":12,"column_end":15},"name":"len","qualname":"<EdnsOption>::len","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the length in bytes of the EdnsOption\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":272484,"byte_end":272492,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EdnsOption>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the length in bytes of the EdnsOption is 0\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1446},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"soa","qualname":"::rr::rdata::soa","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/soa.rs","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":3300},{"krate":0,"index":3320},{"krate":0,"index":3314},{"krate":0,"index":3310},{"krate":0,"index":3306},{"krate":0,"index":3302},{"krate":0,"index":1454},{"krate":0,"index":1474},{"krate":0,"index":1476}],"decl_id":null,"docs":" start of authority record defining ownership and defaults for the zone\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3300},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":278459,"byte_end":278462,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"SOA","qualname":"::rr::rdata::soa::SOA","value":"SOA {  }","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":278448,"byte_end":278586,"line_start":68,"line_end":76,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":279361,"byte_end":279364,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<SOA>::new","value":"fn (mname: Name, rname: Name, serial: u32, refresh: i32, retry: i32, expire: i32, minimum: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SOA record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":279810,"byte_end":279826,"line_start":115,"line_end":115,"column_start":12,"column_end":28},"name":"increment_serial","qualname":"<SOA>::increment_serial","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increments the serial number by one\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":280277,"byte_end":280282,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"mname","qualname":"<SOA>::mname","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n MNAME           The <domain-name> of the name server that was the\n                 original or primary source of data for this zone.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":280667,"byte_end":280672,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"rname","qualname":"<SOA>::rname","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RNAME           A <domain-name> which specifies the mailbox of the\n                 person responsible for this zone.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":281266,"byte_end":281272,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"serial","qualname":"<SOA>::serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n SERIAL          The unsigned 32 bit version number of the original copy\n                 of the zone.  Zone transfers preserve this value.  This\n                 value wraps and should be compared using sequence space\n                 arithmetic.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":281582,"byte_end":281589,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"refresh","qualname":"<SOA>::refresh","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n REFRESH         A 32 bit time interval before the zone should be\n                 refreshed.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":281958,"byte_end":281963,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"retry","qualname":"<SOA>::retry","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RETRY           A 32 bit time interval that should elapse before a\n                 failed refresh should be retried.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":282447,"byte_end":282453,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"expire","qualname":"<SOA>::expire","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n EXPIRE          A 32 bit time value that specifies the upper limit on\n                 the time interval that can elapse before the zone is no\n                 longer authoritative.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":282811,"byte_end":282818,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"minimum","qualname":"<SOA>::minimum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n MINIMUM         The unsigned 32 bit minimum TTL field that should be\n                 exported with any RR from this zone.\n ```","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1474},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":282914,"byte_end":282918,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::soa::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<SOA>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1476},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":283979,"byte_end":283983,"line_start":243,"line_end":243,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::soa::emit","value":"fn (encoder: &mut BinEncoder, soa: &SOA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1478},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"srv","qualname":"::rr::rdata::srv","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/srv.rs","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":3324},{"krate":0,"index":3344},{"krate":0,"index":3338},{"krate":0,"index":3334},{"krate":0,"index":3330},{"krate":0,"index":3326},{"krate":0,"index":1486},{"krate":0,"index":1498},{"krate":0,"index":1500}],"decl_id":null,"docs":" service records for identify port mapping for specific services on a host\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3324},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":288177,"byte_end":288180,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"SRV","qualname":"::rr::rdata::srv::SRV","value":"SRV {  }","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1183}],"decl_id":null,"docs":" [RFC 2782, DNS SRV RR, February 2000](https://tools.ietf.org/html/rfc2782)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":288166,"byte_end":288253,"line_start":83,"line_end":88,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":288841,"byte_end":288844,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<SRV>::new","value":"fn (priority: u16, weight: u16, port: u16, target: Name) -> SRV","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SRV record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":289453,"byte_end":289461,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"priority","qualname":"<SRV>::priority","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Priority\n The priority of this target host.  A client MUST attempt to\n contact the target host with the lowest-numbered priority it can\n reach; target hosts with the same priority SHOULD be tried in an\n order defined by the weight field.  The range is 0-65535.  This\n is a 16 bit unsigned integer in network byte order.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":291593,"byte_end":291599,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"weight","qualname":"<SRV>::weight","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Weight\n A server selection mechanism.  The weight field specifies a\n relative weight for entries with the same priority. Larger\n weights SHOULD be given a proportionately higher probability of\n being selected. The range of this number is 0-65535.  This is a\n 16 bit unsigned integer in network byte order.  Domain\n administrators SHOULD use Weight 0 when there isn't any server\n selection to do, to make the RR easier to read for humans (less\n noisy).  In the presence of records containing weights greater\n than 0, records with weight 0 should have a very small chance of\n being selected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":291920,"byte_end":291924,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"port","qualname":"<SRV>::port","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Port\n The port on this target host of this service.  The range is 0-\n 65535.  This is a 16 bit unsigned integer in network byte order.\n This is often as specified in Assigned Numbers but need not be.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":292553,"byte_end":292559,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"target","qualname":"<SRV>::target","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Target\n The domain name of the target host.  There MUST be one or more\n address records for this name, the name MUST NOT be an alias (in\n the sense of RFC 1034 or RFC 2181).  Implementors are urged, but\n not required, to return the address record(s) in the Additional\n Data section.  Unless and until permitted by future standards\n action, name compression is not to be used for this field.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1498},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":292657,"byte_end":292661,"line_start":195,"line_end":195,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::srv::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<SRV>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1500},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":293652,"byte_end":293656,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::srv::emit","value":"fn (encoder: &mut BinEncoder, srv: &SRV) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1502},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tlsa","qualname":"::rr::rdata::tlsa","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/tlsa.rs","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":3348},{"krate":0,"index":3368},{"krate":0,"index":3362},{"krate":0,"index":3358},{"krate":0,"index":3354},{"krate":0,"index":3350},{"krate":0,"index":3372},{"krate":0,"index":3394},{"krate":0,"index":3388},{"krate":0,"index":3384},{"krate":0,"index":3380},{"krate":0,"index":3376},{"krate":0,"index":3374},{"krate":0,"index":1508},{"krate":0,"index":1512},{"krate":0,"index":3398},{"krate":0,"index":3420},{"krate":0,"index":3414},{"krate":0,"index":3410},{"krate":0,"index":3406},{"krate":0,"index":3402},{"krate":0,"index":3400},{"krate":0,"index":1516},{"krate":0,"index":1520},{"krate":0,"index":3424},{"krate":0,"index":3446},{"krate":0,"index":3440},{"krate":0,"index":3436},{"krate":0,"index":3432},{"krate":0,"index":3428},{"krate":0,"index":3426},{"krate":0,"index":1524},{"krate":0,"index":1528},{"krate":0,"index":1532},{"krate":0,"index":1544},{"krate":0,"index":1546}],"decl_id":null,"docs":" TLSA records for storing TLS certificate validation information\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3348},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":296167,"byte_end":296171,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"TLSA","qualname":"::rr::rdata::tlsa::TLSA","value":"TLSA {  }","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":296156,"byte_end":296274,"line_start":33,"line_end":38,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":298293,"byte_end":298295,"line_start":82,"line_end":82,"column_start":5,"column_end":7},"name":"CA","qualname":"::rr::rdata::tlsa::CertUsage::CA","value":"CertUsage::CA","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" ```text\n       0 -- Certificate usage 0 is used to specify a CA certificate, or\n       the public key of such a certificate, that MUST be found in any of\n       the PKIX certification paths for the end entity certificate given\n       by the server in TLS.  This certificate usage is sometimes\n       referred to as \"CA constraint\" because it limits which CA can be\n       used to issue certificates for a given service on a host.  The\n       presented certificate MUST pass PKIX certification path\n       validation, and a CA certificate that matches the TLSA record MUST\n       be included as part of a valid certification path.  Because this\n       certificate usage allows both trust anchors and CA certificates,\n       the certificate might or might not have the basicConstraints\n       extension present.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":298910,"byte_end":298917,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"Service","qualname":"::rr::rdata::tlsa::CertUsage::Service","value":"CertUsage::Service","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" ```text\n       1 -- Certificate usage 1 is used to specify an end entity\n       certificate, or the public key of such a certificate, that MUST be\n       matched with the end entity certificate given by the server in\n       TLS.  This certificate usage is sometimes referred to as \"service\n       certificate constraint\" because it limits which end entity\n       certificate can be used by a given service on a host.  The target\n       certificate MUST pass PKIX certification path validation and MUST\n       match the TLSA record.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":299798,"byte_end":299809,"line_start":109,"line_end":109,"column_start":5,"column_end":16},"name":"TrustAnchor","qualname":"::rr::rdata::tlsa::CertUsage::TrustAnchor","value":"CertUsage::TrustAnchor","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" ```text\n       2 -- Certificate usage 2 is used to specify a certificate, or the\n       public key of such a certificate, that MUST be used as the trust\n       anchor when validating the end entity certificate given by the\n       server in TLS.  This certificate usage is sometimes referred to as\n       \"trust anchor assertion\" and allows a domain name administrator to\n       specify a new trust anchor -- for example, if the domain issues\n       its own certificates under its own CA that is not expected to be\n       in the end users' collection of trust anchors.  The target\n       certificate MUST pass PKIX certification path validation, with any\n       certificate matching the TLSA record considered to be a trust\n       anchor for this certification path validation.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1203},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":300615,"byte_end":300627,"line_start":123,"line_end":123,"column_start":5,"column_end":17},"name":"DomainIssued","qualname":"::rr::rdata::tlsa::CertUsage::DomainIssued","value":"CertUsage::DomainIssued","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" ```text\n       3 -- Certificate usage 3 is used to specify a certificate, or the\n       public key of such a certificate, that MUST match the end entity\n       certificate given by the server in TLS.  This certificate usage is\n       sometimes referred to as \"domain-issued certificate\" because it\n       allows for a domain name administrator to issue certificates for a\n       domain without involving a third-party CA.  The target certificate\n       MUST match the TLSA record.  The difference between certificate\n       usage 1 and certificate usage 3 is that certificate usage 1\n       requires that the certificate pass PKIX validation, but PKIX\n       validation is not tested for certificate usage 3.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":300687,"byte_end":300697,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::CertUsage::Unassigned","value":"CertUsage::Unassigned(u8)","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" Unassined at the time of this implementation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":300730,"byte_end":300737,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::CertUsage::Private","value":"CertUsage::Private","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3372},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":297363,"byte_end":297372,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"CertUsage","qualname":"::rr::rdata::tlsa::CertUsage","value":"CertUsage::{CA, Service, TrustAnchor, DomainIssued, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1209}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":297354,"byte_end":300740,"line_start":67,"line_end":130,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":297354,"byte_end":300740,"line_start":67,"line_end":130,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302362,"byte_end":302366,"line_start":180,"line_end":180,"column_start":5,"column_end":9},"name":"Full","qualname":"::rr::rdata::tlsa::Selector::Full","value":"Selector::Full","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Full certificate: the Certificate binary structure as defined in [RFC5280]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1215},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302456,"byte_end":302460,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Spki","qualname":"::rr::rdata::tlsa::Selector::Spki","value":"Selector::Spki","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" SubjectPublicKeyInfo: DER-encoded binary structure as defined in [RFC5280]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1217},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302514,"byte_end":302524,"line_start":186,"line_end":186,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::Selector::Unassigned","value":"Selector::Unassigned(u8)","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Unassigned at the time of this writing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302557,"byte_end":302564,"line_start":189,"line_end":189,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::Selector::Private","value":"Selector::Private","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3398},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302264,"byte_end":302272,"line_start":178,"line_end":178,"column_start":10,"column_end":18},"name":"Selector","qualname":"::rr::rdata::tlsa::Selector","value":"Selector::{Full, Spki, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1221}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302255,"byte_end":302567,"line_start":178,"line_end":190,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302255,"byte_end":302567,"line_start":178,"line_end":190,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304045,"byte_end":304048,"line_start":239,"line_end":239,"column_start":5,"column_end":8},"name":"Raw","qualname":"::rr::rdata::tlsa::Matching::Raw","value":"Matching::Raw","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" Exact match on selected content\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304106,"byte_end":304112,"line_start":242,"line_end":242,"column_start":5,"column_end":11},"name":"Sha256","qualname":"::rr::rdata::tlsa::Matching::Sha256","value":"Matching::Sha256","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" SHA-256 hash of selected content [RFC6234]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1229},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304170,"byte_end":304176,"line_start":245,"line_end":245,"column_start":5,"column_end":11},"name":"Sha512","qualname":"::rr::rdata::tlsa::Matching::Sha512","value":"Matching::Sha512","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" SHA-512 hash of selected content [RFC6234]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304230,"byte_end":304240,"line_start":248,"line_end":248,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::Matching::Unassigned","value":"Matching::Unassigned(u8)","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" Unassigned at the time of this writing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304273,"byte_end":304280,"line_start":251,"line_end":251,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::Matching::Private","value":"Matching::Private","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3424},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":303990,"byte_end":303998,"line_start":237,"line_end":237,"column_start":10,"column_end":18},"name":"Matching","qualname":"::rr::rdata::tlsa::Matching","value":"Matching::{Raw, Sha256, Sha512, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1235}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.3)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":303981,"byte_end":304283,"line_start":237,"line_end":252,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":303981,"byte_end":304283,"line_start":237,"line_end":252,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":305762,"byte_end":305765,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"new","qualname":"<TLSA>::new","value":"fn (cert_usage: CertUsage, selector: Selector, matching: Matching, cert_data: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TLSA","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":306149,"byte_end":306159,"line_start":313,"line_end":313,"column_start":12,"column_end":22},"name":"cert_usage","qualname":"<TLSA>::cert_usage","value":"fn (&self) -> &CertUsage","parent":null,"children":[],"decl_id":null,"docs":" Specifies the provided association that will be used to match the certificate presented in the TLS handshake\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":306347,"byte_end":306355,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"selector","qualname":"<TLSA>::selector","value":"fn (&self) -> &Selector","parent":null,"children":[],"decl_id":null,"docs":" Specifies which part of the TLS certificate presented by the server will be matched against the association data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":306482,"byte_end":306490,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"matching","qualname":"<TLSA>::matching","value":"fn (&self) -> &Matching","parent":null,"children":[],"decl_id":null,"docs":" Specifies how the certificate association is presented\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":306638,"byte_end":306647,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"cert_data","qualname":"<TLSA>::cert_data","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Binary data for validating the cert, see other members to understand format\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1544},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":307427,"byte_end":307431,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::tlsa::read","value":"fn (decoder: &mut BinDecoder, rdata_length: u16) -> ProtoResult<TLSA>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1546},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":307901,"byte_end":307905,"line_start":363,"line_end":363,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::tlsa::emit","value":"fn (encoder: &mut BinEncoder, tlsa: &TLSA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1548},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"txt","qualname":"::rr::rdata::txt","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/rdata/txt.rs","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":3450},{"krate":0,"index":3470},{"krate":0,"index":3464},{"krate":0,"index":3460},{"krate":0,"index":3456},{"krate":0,"index":3452},{"krate":0,"index":1554},{"krate":0,"index":1560},{"krate":0,"index":1562}],"decl_id":null,"docs":" text records for storing arbitrary data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3450},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":312968,"byte_end":312971,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"TXT","qualname":"::rr::rdata::txt::TXT","value":"TXT {  }","parent":null,"children":[{"krate":0,"index":1239}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":312957,"byte_end":313007,"line_start":36,"line_end":38,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":313248,"byte_end":313251,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<TXT>::new","value":"fn (txt_data: Vec<String>) -> TXT","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TXT record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":313523,"byte_end":313531,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"txt_data","qualname":"<TXT>::txt_data","value":"fn (&self) -> &[Box<[u8]>]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TXT-DATA        One or more <character-string>s.\n ```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1560},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":313638,"byte_end":313642,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::txt::read","value":"fn (decoder: &mut BinDecoder, rdata_length: u16) -> ProtoResult<TXT>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1562},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":314071,"byte_end":314075,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::txt::emit","value":"fn (encoder: &mut BinEncoder, txt: &TXT) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1580},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"record_data","qualname":"::rr::record_data","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/record_data.rs","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":3474},{"krate":0,"index":3490},{"krate":0,"index":3484},{"krate":0,"index":3480},{"krate":0,"index":3476},{"krate":0,"index":1620},{"krate":0,"index":1632},{"krate":0,"index":1636}],"decl_id":null,"docs":" record data enum variants\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":317612,"byte_end":317613,"line_start":78,"line_end":78,"column_start":5,"column_end":6},"name":"A","qualname":"::rr::record_data::RData::A","value":"RData::A(Ipv4Addr)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 1035 -- Domain Implementation and Specification    November 1987","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":317923,"byte_end":317927,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"AAAA","qualname":"::rr::record_data::RData::AAAA","value":"RData::AAAA(Ipv6Addr)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 1886 -- IPv6 DNS Extensions              December 1995","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":319268,"byte_end":319271,"line_start":118,"line_end":118,"column_start":5,"column_end":8},"name":"CAA","qualname":"::rr::record_data::RData::CAA","value":"RData::CAA(CAA)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 6844          Certification Authority Authorization     January 2013","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1255},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":320785,"byte_end":320790,"line_start":151,"line_end":151,"column_start":5,"column_end":10},"name":"CNAME","qualname":"::rr::record_data::RData::CNAME","value":"RData::CNAME(Name)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n   3.3. Standard RRs","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1259},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":321799,"byte_end":321801,"line_start":176,"line_end":176,"column_start":5,"column_end":7},"name":"MX","qualname":"::rr::record_data::RData::MX","value":"RData::MX(MX)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n 3.3.9. MX RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1263},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":322454,"byte_end":322458,"line_start":193,"line_end":193,"column_start":5,"column_end":9},"name":"NULL","qualname":"::rr::record_data::RData::NULL","value":"RData::NULL(NULL)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n 3.3.10. NULL RDATA format (EXPERIMENTAL)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":323665,"byte_end":323667,"line_start":219,"line_end":219,"column_start":5,"column_end":7},"name":"NS","qualname":"::rr::record_data::RData::NS","value":"RData::NS(Name)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n 3.3.11. NS RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":325582,"byte_end":325585,"line_start":251,"line_end":251,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::record_data::RData::OPT","value":"RData::OPT(OPT)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n RFC 6891                   EDNS(0) Extensions                 April 2013\n 6.1.2.  Wire Format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":326391,"byte_end":326394,"line_start":271,"line_end":271,"column_start":5,"column_end":8},"name":"PTR","qualname":"::rr::record_data::RData::PTR","value":"RData::PTR(Name)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n 3.3.12. PTR RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":329876,"byte_end":329879,"line_start":339,"line_end":339,"column_start":5,"column_end":8},"name":"SOA","qualname":"::rr::record_data::RData::SOA","value":"RData::SOA(SOA)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n 3.3.13. SOA RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1283},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":330121,"byte_end":330124,"line_start":348,"line_end":348,"column_start":5,"column_end":8},"name":"SRV","qualname":"::rr::record_data::RData::SRV","value":"RData::SRV(SRV)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n RFC 2782                       DNS SRV RR                  February 2000","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":330965,"byte_end":330969,"line_start":363,"line_end":363,"column_start":5,"column_end":9},"name":"TLSA","qualname":"::rr::record_data::RData::TLSA","value":"RData::TLSA(TLSA)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":331460,"byte_end":331463,"line_start":379,"line_end":379,"column_start":5,"column_end":8},"name":"TXT","qualname":"::rr::record_data::RData::TXT","value":"RData::TXT(TXT)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" ```text\n 3.3.14. TXT RDATA format","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1295},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":331809,"byte_end":331816,"line_start":389,"line_end":389,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::record_data::RData::Unknown","value":"RData::Unknown { code, rdata }","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" Unknown RecordData is for record types not supported by TRust-DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":332002,"byte_end":332006,"line_start":397,"line_end":397,"column_start":5,"column_end":9},"name":"ZERO","qualname":"::rr::record_data::RData::ZERO","value":"RData::ZERO","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":" This corresponds to a record type of 0, unspecified\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3474},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":316759,"byte_end":316764,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"RData","qualname":"::rr::record_data::RData","value":"RData::{A, AAAA, CAA, CNAME, MX, NULL, NS, OPT, PTR, SOA, SRV, TLSA, TXT, Unknown, ZERO}","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1247},{"krate":0,"index":1251},{"krate":0,"index":1255},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1279},{"krate":0,"index":1283},{"krate":0,"index":1287},{"krate":0,"index":1291},{"krate":0,"index":1295},{"krate":0,"index":1301}],"decl_id":null,"docs":" Record data enum variants","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":316750,"byte_end":332009,"line_start":54,"line_end":398,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":332421,"byte_end":332425,"line_start":414,"line_end":414,"column_start":12,"column_end":16},"name":"read","qualname":"<RData>::read","value":"fn (decoder: &mut BinDecoder, record_type: RecordType, rdata_length: u16) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":336349,"byte_end":336353,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"emit","qualname":"<RData>::emit","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":337758,"byte_end":337772,"line_start":545,"line_end":545,"column_start":12,"column_end":26},"name":"to_record_type","qualname":"<RData>::to_record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Converts this to a Recordtype\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":338786,"byte_end":338796,"line_start":568,"line_end":568,"column_start":12,"column_end":22},"name":"to_ip_addr","qualname":"<RData>::to_ip_addr","value":"fn (&self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" If this is an A or AAAA record type, then an IpAddr will be returned\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1640},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"record_type","qualname":"::rr::record_type","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/record_type.rs","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":3494},{"krate":0,"index":3516},{"krate":0,"index":3510},{"krate":0,"index":3506},{"krate":0,"index":3502},{"krate":0,"index":3500},{"krate":0,"index":3496},{"krate":0,"index":1660},{"krate":0,"index":1668},{"krate":0,"index":1674},{"krate":0,"index":1678},{"krate":0,"index":1682},{"krate":0,"index":1686},{"krate":0,"index":1690},{"krate":0,"index":1694},{"krate":0,"index":1698},{"krate":0,"index":1702}],"decl_id":null,"docs":" record type definitions\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351288,"byte_end":351289,"line_start":38,"line_end":38,"column_start":5,"column_end":6},"name":"A","qualname":"::rr::record_type::RecordType::A","value":"RecordType::A","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tIPv4 Address record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351335,"byte_end":351339,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"AAAA","qualname":"::rr::record_type::RecordType::AAAA","value":"RecordType::AAAA","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 3596[2]\tIPv6 address record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351448,"byte_end":351451,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"ANY","qualname":"::rr::record_type::RecordType::ANY","value":"RecordType::ANY","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tAll cached records, aka ANY\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351560,"byte_end":351564,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"AXFR","qualname":"::rr::record_type::RecordType::AXFR","value":"RecordType::AXFR","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tAuthoritative Zone Transfer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351625,"byte_end":351628,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"CAA","qualname":"::rr::record_type::RecordType::CAA","value":"RecordType::CAA","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 6844 Certification Authority Authorization\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351730,"byte_end":351735,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"CNAME","qualname":"::rr::record_type::RecordType::CNAME","value":"RecordType::CNAME","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tCanonical name record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351989,"byte_end":351993,"line_start":57,"line_end":57,"column_start":5,"column_end":9},"name":"IXFR","qualname":"::rr::record_type::RecordType::IXFR","value":"RecordType::IXFR","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1996\tIncremental Zone Transfer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1317},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352147,"byte_end":352149,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"MX","qualname":"::rr::record_type::RecordType::MX","value":"RecordType::MX","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tMail exchange record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352254,"byte_end":352256,"line_start":64,"line_end":64,"column_start":5,"column_end":7},"name":"NS","qualname":"::rr::record_type::RecordType::NS","value":"RecordType::NS","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tName server record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352314,"byte_end":352318,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"NULL","qualname":"::rr::record_type::RecordType::NULL","value":"RecordType::NULL","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tNull server record, for testing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1323},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352348,"byte_end":352351,"line_start":68,"line_end":68,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::record_type::RecordType::OPT","value":"RecordType::OPT","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 6891\tOption\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352392,"byte_end":352395,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"PTR","qualname":"::rr::record_type::RecordType::PTR","value":"RecordType::PTR","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tPointer record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352529,"byte_end":352532,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"SOA","qualname":"::rr::record_type::RecordType::SOA","value":"RecordType::SOA","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1] and RFC 2308[9]\tStart of [a zone of] authority record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352571,"byte_end":352574,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"SRV","qualname":"::rr::record_type::RecordType::SRV","value":"RecordType::SRV","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 2782\tService locator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352800,"byte_end":352804,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"TLSA","qualname":"::rr::record_type::RecordType::TLSA","value":"RecordType::TLSA","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":"\tRFC 6698\tTLSA certificate association\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":352900,"byte_end":352903,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"TXT","qualname":"::rr::record_type::RecordType::TXT","value":"RecordType::TXT","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" RFC 1035[1]\tText record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353198,"byte_end":353205,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::record_type::RecordType::Unknown","value":"RecordType::Unknown(u16)","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" Unknown Record type, or unsupported\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353277,"byte_end":353281,"line_start":96,"line_end":96,"column_start":5,"column_end":9},"name":"ZERO","qualname":"::rr::record_type::RecordType::ZERO","value":"RecordType::ZERO","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" This corresponds to a record type of 0, unspecified\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3494},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351231,"byte_end":351241,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"name":"RecordType","qualname":"::rr::record_type::RecordType","value":"RecordType::{A, AAAA, ANY, AXFR, CAA, CNAME, IXFR, MX, NS, NULL, OPT, PTR, SOA, SRV, TLSA, TXT, Unknown, ZERO}","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1339}],"decl_id":null,"docs":" The type of the resource record.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351202,"byte_end":351221,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351222,"byte_end":353284,"line_start":36,"line_end":97,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":351222,"byte_end":353284,"line_start":36,"line_end":97,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353368,"byte_end":353374,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"is_any","qualname":"<RecordType>::is_any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an ANY\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353347,"byte_end":353356,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353497,"byte_end":353505,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"is_cname","qualname":"<RecordType>::is_cname","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is a CNAME\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353476,"byte_end":353485,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353629,"byte_end":353635,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"is_srv","qualname":"<RecordType>::is_srv","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an SRV\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353608,"byte_end":353617,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1706},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::rr::resource","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/rr/resource.rs","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":3520},{"krate":0,"index":3534},{"krate":0,"index":3530},{"krate":0,"index":3526},{"krate":0,"index":3522},{"krate":0,"index":1728},{"krate":0,"index":1732},{"krate":0,"index":1764},{"krate":0,"index":1768},{"krate":0,"index":1772},{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1782}],"decl_id":null,"docs":" resource record implementation\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3520},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":362637,"byte_end":362643,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Record","qualname":"::rr::resource::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351}],"decl_id":null,"docs":" Resource records are storage value in DNS, into which all key/value pair data is stored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":363350,"byte_end":363353,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"fn () -> Record","parent":null,"children":[],"decl_id":null,"docs":" Creates a default record, use the setters to build a more useful object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":363694,"byte_end":363698,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"with","qualname":"<Record>::with","value":"fn (name: Name, rr_type: RecordType, ttl: u32) -> Record","parent":null,"children":[],"decl_id":null,"docs":" Create a record with the specified initial values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":364306,"byte_end":364316,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"from_rdata","qualname":"<Record>::from_rdata","value":"fn (name: Name, ttl: u32, record_type: RecordType, rdata: RData) -> Record","parent":null,"children":[],"decl_id":null,"docs":" Create a record with the specified initial values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":364730,"byte_end":364738,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Record>::set_name","value":"fn (&mut self, name: Name) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n NAME            a domain name to which this resource record pertains.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":365055,"byte_end":365066,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"set_rr_type","qualname":"<Record>::set_rr_type","value":"fn (&mut self, rr_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TYPE            two octets containing one of the RR type codes.  This\n                 field specifies the meaning of the data in the RDATA\n                 field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":365320,"byte_end":365333,"line_start":157,"line_end":157,"column_start":12,"column_end":25},"name":"set_dns_class","qualname":"<Record>::set_dns_class","value":"fn (&mut self, dns_class: DNSClass) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n CLASS           two octets which specify the class of the data in the\n                 RDATA field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":365863,"byte_end":365870,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Record>::set_ttl","value":"fn (&mut self, ttl: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TTL             a 32 bit unsigned integer that specifies the time\n                 interval (in seconds) that the resource record may be\n                 cached before it should be discarded.  Zero values are\n                 interpreted to mean that the RR can only be used for the\n                 transaction in progress, and should not be cached.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":366376,"byte_end":366385,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"set_rdata","qualname":"<Record>::set_rdata","value":"fn (&mut self, rdata: RData) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RDATA           a variable length string of octets that describes the\n                 resource.  The format of this information varies\n                 according to the TYPE and CLASS of the resource record.\n                 For example, the if the TYPE is A and the CLASS is IN,\n                 the RDATA field is a 4 octet ARPA Internet address.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":366524,"byte_end":366528,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"name","qualname":"<Record>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":366643,"byte_end":366650,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"rr_type","qualname":"<Record>::rr_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the RData in the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":366783,"byte_end":366792,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"dns_class","qualname":"<Record>::dns_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" Returns the DNSClass of the Record, generally IN fro internet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":366924,"byte_end":366927,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Record>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time-to-live of the record, for caching purposes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":367040,"byte_end":367045,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"name":"rdata","qualname":"<Record>::rdata","value":"fn (&self) -> &RData","parent":null,"children":[],"decl_id":null,"docs":" Returns the Record Data, i.e. the record information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":367158,"byte_end":367167,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"rdata_mut","qualname":"<Record>::rdata_mut","value":"fn (&mut self) -> &mut RData","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the Record Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":367284,"byte_end":367296,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"unwrap_rdata","qualname":"<Record>::unwrap_rdata","value":"fn (self) -> RData","parent":null,"children":[],"decl_id":null,"docs":" Returns the RData consuming the Record\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3538},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":377026,"byte_end":377035,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"RecordSet","qualname":"::rr::rr_set::RecordSet","value":"RecordSet {  }","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365}],"decl_id":null,"docs":" Set of resource records associated to a name and type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":377845,"byte_end":377848,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<RecordSet>::new","value":"fn (name: &Name, record_type: RecordType, serial: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Resource Record Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":378661,"byte_end":378669,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"with_ttl","qualname":"<RecordSet>::with_ttl","value":"fn (name: Name, record_type: RecordType, ttl: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Resource Record Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":379228,"byte_end":379232,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"from","qualname":"<RecordSet>::from","value":"fn (record: Record) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Resource Record Set from a Record","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":379623,"byte_end":379627,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"name","qualname":"<RecordSet>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":379762,"byte_end":379773,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"record_type","qualname":"<RecordSet>::record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":379983,"byte_end":379996,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"set_dns_class","qualname":"<RecordSet>::set_dns_class","value":"fn (&mut self, dns_class: DNSClass) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the DNSClass to the specified value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":380220,"byte_end":380229,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"dns_class","qualname":"<RecordSet>::dns_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" Returns the `DNSClass` of the RecordSet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":380437,"byte_end":380444,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<RecordSet>::set_ttl","value":"fn (&mut self, ttl: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the TTL, in seconds, to the specified value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":380807,"byte_end":380810,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"ttl","qualname":"<RecordSet>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time-to-live for the record.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":382957,"byte_end":382979,"line_start":208,"line_end":208,"column_start":12,"column_end":34},"name":"records_without_rrsigs","qualname":"<RecordSet>::records_without_rrsigs","value":"fn (&self) -> Vec<&Record>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Vec of all records in the set, without any RRSIGs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":383117,"byte_end":383121,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"iter","qualname":"<RecordSet>::iter","value":"fn <'s> (&'s self) -> Iter<'s, Record>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the records in the set\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":383261,"byte_end":383269,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RecordSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no records in this set\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":383404,"byte_end":383410,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"serial","qualname":"<RecordSet>::serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the serial number at which the record was updated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":383536,"byte_end":383542,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"rrsigs","qualname":"<RecordSet>::rrsigs","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of all the Records signatures in the RecordSet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":383854,"byte_end":383866,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"insert_rrsig","qualname":"<RecordSet>::insert_rrsig","value":"fn (&mut self, rrsig: Record) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a Signature for the Record set","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":384040,"byte_end":384052,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"clear_rrsigs","qualname":"<RecordSet>::clear_rrsigs","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Useful for clearing all signatures when the RecordSet is updated, or keys are rotated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":384341,"byte_end":384351,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"new_record","qualname":"<RecordSet>::new_record","value":"fn (&mut self, rdata: &RData) -> &Record","parent":null,"children":[],"decl_id":null,"docs":" creates a new Record as part of this RecordSet, adding the associated RData\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":386243,"byte_end":386249,"line_start":300,"line_end":300,"column_start":12,"column_end":18},"name":"insert","qualname":"<RecordSet>::insert","value":"fn (&mut self, record: Record, serial: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new Resource Record into the Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":390294,"byte_end":390300,"line_start":397,"line_end":397,"column_start":12,"column_end":18},"name":"remove","qualname":"<RecordSet>::remove","value":"fn (&mut self, record: &Record, serial: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes the Resource Record if it exists.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1848},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":391546,"byte_end":391559,"line_start":435,"line_end":435,"column_start":11,"column_end":24},"name":"IntoRecordSet","qualname":"::rr::rr_set::IntoRecordSet","value":"IntoRecordSet: Sized","parent":null,"children":[{"krate":0,"index":1850}],"decl_id":null,"docs":" Types which implement this can be converted into a RecordSet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":391623,"byte_end":391638,"line_start":437,"line_end":437,"column_start":8,"column_end":23},"name":"into_record_set","qualname":"::rr::rr_set::IntoRecordSet::into_record_set","value":"fn (self) -> RecordSet","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Performs the conversion to a RecordSet\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3554},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":405253,"byte_end":405267,"line_start":19,"line_end":19,"column_start":12,"column_end":26},"name":"RetryDnsHandle","qualname":"::retry_dns_handle::RetryDnsHandle","value":"RetryDnsHandle {  }","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1373}],"decl_id":null,"docs":" Can be used to reattempt a queries if they fail","sig":null,"attributes":[{"value":"must_use = \"queries can only be sent through a ClientHandle\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":405178,"byte_end":405241,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":405734,"byte_end":405737,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<RetryDnsHandle<H, E>>::new","value":"fn (handle: H, attempts: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Client handler for reattempting requests on failures.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1916},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialize","qualname":"::serialize","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/serialize/mod.rs","parent":null,"children":[{"krate":0,"index":1918}],"decl_id":null,"docs":" Contains serialization libraries for `binary` and text, `txt`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1918},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary","qualname":"::serialize::binary","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/serialize/binary/mod.rs","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1968},{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2078},{"krate":0,"index":2084},{"krate":0,"index":2088},{"krate":0,"index":2092},{"krate":0,"index":2096},{"krate":0,"index":2100},{"krate":0,"index":2104},{"krate":0,"index":2108},{"krate":0,"index":2112}],"decl_id":null,"docs":" Binary serialization types\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1934},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":414132,"byte_end":414142,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"BinDecoder","qualname":"::serialize::binary::decoder::BinDecoder","value":"BinDecoder {  }","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365}],"decl_id":null,"docs":" This is non-destructive to the inner buffer, b/c for pointer types we need to perform a reverse\n  seek to lookup names","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":414359,"byte_end":414362,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<BinDecoder<'a>>::new","value":"fn (buffer: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new BinDecoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":414527,"byte_end":414530,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinDecoder<'a>>::pop","value":"fn (&mut self) -> ProtoResult<u8>","parent":null,"children":[],"decl_id":null,"docs":" Pop one byte from the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":414883,"byte_end":414886,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"len","qualname":"<BinDecoder<'a>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":415008,"byte_end":415016,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinDecoder<'a>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":415148,"byte_end":415152,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinDecoder<'a>>::peek","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Peed one byte forward, without moving the current index forward\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":415372,"byte_end":415377,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"index","qualname":"<BinDecoder<'a>>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current index in the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":415564,"byte_end":415569,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"clone","qualname":"<BinDecoder<'a>>::clone","value":"fn (&self, index_at: u16) -> BinDecoder<'a>","parent":null,"children":[],"decl_id":null,"docs":" This is a pretty efficient clone, as the buffer is never cloned, and only the index is set\n  to the value passed in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":416129,"byte_end":416148,"line_start":101,"line_end":101,"column_start":12,"column_end":31},"name":"read_character_data","qualname":"<BinDecoder<'a>>::read_character_data","value":"fn (&mut self) -> ProtoResult<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a String from the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":416553,"byte_end":416561,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"read_vec","qualname":"<BinDecoder<'a>>::read_vec","value":"fn (&mut self, len: usize) -> ProtoResult<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a Vec out of the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":417104,"byte_end":417114,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"read_slice","qualname":"<BinDecoder<'a>>::read_slice","value":"fn (&mut self, len: usize) -> ProtoResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a slice out of the buffer, without allocating","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":417507,"byte_end":417517,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<BinDecoder<'a>>::slice_from","value":"fn (&self, index: usize) -> ProtoResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a slice from a previous index to the current\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":417824,"byte_end":417831,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"read_u8","qualname":"<BinDecoder<'a>>::read_u8","value":"fn (&mut self) -> ProtoResult<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads a byte from the buffer, equivalent to `Self::pop()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":418183,"byte_end":418191,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"read_u16","qualname":"<BinDecoder<'a>>::read_u16","value":"fn (&mut self) -> ProtoResult<u16>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next 2 bytes into u16","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":418586,"byte_end":418594,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"read_i32","qualname":"<BinDecoder<'a>>::read_i32","value":"fn (&mut self) -> ProtoResult<i32>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next four bytes into i32.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":418989,"byte_end":418997,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"read_u32","qualname":"<BinDecoder<'a>>::read_u32","value":"fn (&mut self) -> ProtoResult<u32>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next four bytes into u32.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1986},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":421273,"byte_end":421283,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"BinEncoder","qualname":"::serialize::binary::encoder::BinEncoder","value":"BinEncoder {  }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379}],"decl_id":null,"docs":" Encode DNS messages and resource record types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":421574,"byte_end":421577,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<BinEncoder<'a>>::new","value":"fn (buf: &'a mut Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder with the Vec to fill\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":421877,"byte_end":421886,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"with_mode","qualname":"<BinEncoder<'a>>::with_mode","value":"fn (buf: &'a mut Vec<u8>, mode: EncodeMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the mode for encoding","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":422417,"byte_end":422428,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"with_offset","qualname":"<BinEncoder<'a>>::with_offset","value":"fn (buf: &'a mut Vec<u8>, offset: u32, mode: EncodeMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begins the encoder at the given offset","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":422753,"byte_end":422763,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<BinEncoder<'a>>::into_bytes","value":"fn (self) -> &'a Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":422866,"byte_end":422869,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"len","qualname":"<BinEncoder<'a>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":422978,"byte_end":422986,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinEncoder<'a>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":423104,"byte_end":423110,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"offset","qualname":"<BinEncoder<'a>>::offset","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current offset into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":423217,"byte_end":423227,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<BinEncoder<'a>>::set_offset","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" sets the current offset to the new offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":423346,"byte_end":423350,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"mode","qualname":"<BinEncoder<'a>>::mode","value":"fn (&self) -> EncodeMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the current Encoding mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":423495,"byte_end":423514,"line_start":98,"line_end":98,"column_start":12,"column_end":31},"name":"set_canonical_names","qualname":"<BinEncoder<'a>>::set_canonical_names","value":"fn (&mut self, canonical_names: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If set to true, then names will be written into the buffer in canonical form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":423683,"byte_end":423701,"line_start":103,"line_end":103,"column_start":12,"column_end":30},"name":"is_canonical_names","qualname":"<BinEncoder<'a>>::is_canonical_names","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if then encoder is writing in canonical form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":423823,"byte_end":423830,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BinEncoder<'a>>::reserve","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve specified length in the internal buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":424029,"byte_end":424033,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"trim","qualname":"<BinEncoder<'a>>::trim","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" trims to the current offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":424268,"byte_end":424272,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"emit","qualname":"<BinEncoder<'a>>::emit","value":"fn (&mut self, b: u8) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit one byte into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":424641,"byte_end":424649,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"slice_of","qualname":"<BinEncoder<'a>>::slice_of","value":"fn (&self, start: usize, end: usize) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" borrow a slice from the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":425057,"byte_end":425076,"line_start":145,"line_end":145,"column_start":12,"column_end":31},"name":"store_label_pointer","qualname":"<BinEncoder<'a>>::store_label_pointer","value":"fn (&mut self, start: usize, end: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a label pointer to an already written label","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":425476,"byte_end":425493,"line_start":155,"line_end":155,"column_start":12,"column_end":29},"name":"get_label_pointer","qualname":"<BinEncoder<'a>>::get_label_pointer","value":"fn (&self, start: usize, end: usize) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Looks up the index of an already written label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":426327,"byte_end":426346,"line_start":181,"line_end":181,"column_start":12,"column_end":31},"name":"emit_character_data","qualname":"<BinEncoder<'a>>::emit_character_data","value":"fn <S> (&mut self, char_data: S) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" matches description from above.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":426843,"byte_end":426850,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"emit_u8","qualname":"<BinEncoder<'a>>::emit_u8","value":"fn (&mut self, data: u8) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit one byte into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":426992,"byte_end":427000,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"emit_u16","qualname":"<BinEncoder<'a>>::emit_u16","value":"fn (&mut self, data: u16) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a u16 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":427277,"byte_end":427285,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"emit_i32","qualname":"<BinEncoder<'a>>::emit_i32","value":"fn (&mut self, data: i32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an i32 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":427562,"byte_end":427570,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"emit_u32","qualname":"<BinEncoder<'a>>::emit_u32","value":"fn (&mut self, data: u32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an u32 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":428351,"byte_end":428359,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"emit_vec","qualname":"<BinEncoder<'a>>::emit_vec","value":"fn (&mut self, data: &[u8]) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the byte slice to the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":428531,"byte_end":428539,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"emit_all","qualname":"<BinEncoder<'a>>::emit_all","value":"fn <'e, I, E> (&mut self, iter: I) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emits all the elements of an Iterator to the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":428811,"byte_end":428824,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"emit_all_refs","qualname":"<BinEncoder<'a>>::emit_all_refs","value":"fn <'r, 'e, I, E> (&mut self, iter: I) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emits all the elements of an Iterator to the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":429121,"byte_end":429126,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"place","qualname":"<BinEncoder<'a>>::place","value":"fn <T> (&mut self) -> Place<T>","parent":null,"children":[],"decl_id":null,"docs":" capture a location to write back to\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":429552,"byte_end":429567,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"len_since_place","qualname":"<BinEncoder<'a>>::len_since_place","value":"fn <T> (&self, place: &Place<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" calculates the length of data written since the place was creating\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":429751,"byte_end":429758,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"emit_at","qualname":"<BinEncoder<'a>>::emit_at","value":"fn <T> (&mut self, place: Place<T>, data: T) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" write back to a previously captured location\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2048},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":430757,"byte_end":430768,"line_start":321,"line_end":321,"column_start":11,"column_end":22},"name":"EncodedSize","qualname":"::serialize::binary::encoder::EncodedSize","value":"EncodedSize: BinEncodable","parent":null,"children":[{"krate":0,"index":2050}],"decl_id":null,"docs":" A trait to return the size of a type as it will be encoded in DNS","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":430792,"byte_end":430799,"line_start":322,"line_end":322,"column_start":8,"column_end":15},"name":"size_of","qualname":"::serialize::binary::encoder::EncodedSize::size_of","value":"fn () -> usize","parent":{"krate":0,"index":2048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":430955,"byte_end":430960,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"Place","qualname":"::serialize::binary::encoder::Place","value":"Place {  }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":417}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"data must be written back to the place\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":430889,"byte_end":430943,"line_start":331,"line_end":331,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431078,"byte_end":431085,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"replace","qualname":"<Place<T>>::replace","value":"fn (self, encoder: &mut BinEncoder, data: T) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431202,"byte_end":431209,"line_start":342,"line_end":342,"column_start":12,"column_end":19},"name":"size_of","qualname":"<Place<T>>::size_of","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431575,"byte_end":431582,"line_start":352,"line_end":352,"column_start":5,"column_end":12},"name":"Signing","qualname":"::serialize::binary::encoder::EncodeMode::Signing","value":"EncodeMode::Signing","parent":{"krate":0,"index":3560},"children":[],"decl_id":null,"docs":" In signing mode records are written in canonical form\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431629,"byte_end":431635,"line_start":354,"line_end":354,"column_start":5,"column_end":11},"name":"Normal","qualname":"::serialize::binary::encoder::EncodeMode::Normal","value":"EncodeMode::Normal","parent":{"krate":0,"index":3560},"children":[],"decl_id":null,"docs":" Write records in standard format\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3560},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431496,"byte_end":431506,"line_start":350,"line_end":350,"column_start":10,"column_end":20},"name":"EncodeMode","qualname":"::serialize::binary::encoder::EncodeMode","value":"EncodeMode::{Signing, Normal}","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1381}],"decl_id":null,"docs":" In the Verify mode there maybe some things which are encoded differently, e.g. SIG0 records\n  should not be included in the additional count and not in the encoded data when in Verify\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431487,"byte_end":431638,"line_start":350,"line_end":355,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431487,"byte_end":431638,"line_start":350,"line_end":355,"column_start":1,"column_end":2}}]},{"kind":"Trait","id":{"krate":0,"index":2072},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":411064,"byte_end":411076,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"BinEncodable","qualname":"::serialize::binary::BinEncodable","value":"BinEncodable","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2076}],"decl_id":null,"docs":" A type which can be encoded into a DNS binary format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":411123,"byte_end":411127,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"emit","qualname":"::serialize::binary::BinEncodable::emit","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":{"krate":0,"index":2072},"children":[],"decl_id":null,"docs":" Write the type to the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":411231,"byte_end":411239,"line_start":37,"line_end":37,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::serialize::binary::BinEncodable::to_bytes","value":"fn (&self) -> ProtoResult<Vec<u8>>","parent":{"krate":0,"index":2072},"children":[],"decl_id":null,"docs":" Returns the object in binary form\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2078},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":411546,"byte_end":411558,"line_start":49,"line_end":49,"column_start":11,"column_end":23},"name":"BinDecodable","qualname":"::serialize::binary::BinDecodable","value":"BinDecodable<'r>: Sized","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2082}],"decl_id":null,"docs":" A trait for types which are serializable to and from DNS binary formats\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":411617,"byte_end":411621,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"read","qualname":"::serialize::binary::BinDecodable::read","value":"fn (decoder: &mut BinDecoder<'r>) -> ProtoResult<Self>","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":" Read the type from the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":411724,"byte_end":411734,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::serialize::binary::BinDecodable::from_bytes","value":"fn (bytes: &'r [u8]) -> ProtoResult<Self>","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":" Returns the object in binary form\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2116},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::tcp","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2174},{"krate":0,"index":2260},{"krate":0,"index":2262}],"decl_id":null,"docs":" TCP protocol related components for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2154},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":435260,"byte_end":435275,"line_start":26,"line_end":26,"column_start":12,"column_end":27},"name":"TcpClientStream","qualname":"::tcp::tcp_client_stream::TcpClientStream","value":"TcpClientStream {  }","parent":null,"children":[{"krate":0,"index":433}],"decl_id":null,"docs":" Tcp client stream","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":435200,"byte_end":435248,"line_start":25,"line_end":25,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":435678,"byte_end":435681,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpClientStream<TokioTcpStream>>::new","value":"fn <E> (name_server: SocketAddr, loop_handle: &Handle) -> (Box<Future<Item = TcpClientStream<TokioTcpStream>, Error = io::Error>>,\n Box<DnsStreamHandle<Error = E>>)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":436343,"byte_end":436355,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpClientStream<TokioTcpStream>>::with_timeout","value":"fn <E> (name_server: SocketAddr, loop_handle: &Handle, timeout: Duration) -> (Box<Future<Item = TcpClientStream<TokioTcpStream>, Error = io::Error>>,\n Box<DnsStreamHandle<Error = E>>)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":437260,"byte_end":437271,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<TcpClientStream<S>>::from_stream","value":"fn (tcp_stream: TcpStream<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the TcpStream in TcpClientStream\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2234},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":444714,"byte_end":444723,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::tcp::tcp_stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487}],"decl_id":null,"docs":" A Stream used for sending data to and from a remote DNS endpoint (client or server).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":444654,"byte_end":444702,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":445010,"byte_end":445019,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream<S>>::peer_addr","value":"fn (&self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the peer connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":445452,"byte_end":445455,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpStream<TokioTcpStream>>::new","value":"fn <E> (name_server: SocketAddr, loop_handle: &Handle) -> (Box<Future<Item = TcpStream<TokioTcpStream>, Error = io::Error>>,\n BufStreamHandle<E>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future of the eventually establish a IO stream connection or fail trying.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":446106,"byte_end":446118,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpStream<TokioTcpStream>>::with_timeout","value":"fn <E> (name_server: SocketAddr, loop_handle: &Handle, timeout: Duration) -> (Box<Future<Item = TcpStream<TokioTcpStream>, Error = io::Error>>,\n BufStreamHandle<E>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future of the eventually establish a IO stream connection or fail trying","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":448526,"byte_end":448537,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<TcpStream<S>>::from_stream","value":"fn <E> (stream: S, peer_addr: SocketAddr) -> (Self, BufStreamHandle<E>)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a TcpStream with an existing tokio_core::net::TcpStream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":449076,"byte_end":449101,"line_start":193,"line_end":193,"column_start":12,"column_end":37},"name":"from_stream_with_receiver","qualname":"<TcpStream<S>>::from_stream_with_receiver","value":"fn (stream: S, peer_addr: SocketAddr, receiver: UnboundedReceiver<(Vec<u8>, SocketAddr)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrapps a stream where a sender and receiver have already been established\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2264},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::udp","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.3.3/src/udp/mod.rs","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2306},{"krate":0,"index":2392},{"krate":0,"index":2394}],"decl_id":null,"docs":" UDP protocol related components for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2292},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":465553,"byte_end":465568,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"UdpClientStream","qualname":"::udp::udp_client_stream::UdpClientStream","value":"UdpClientStream {  }","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":517}],"decl_id":null,"docs":" A UDP client stream of DNS binary packets\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":465493,"byte_end":465541,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":466071,"byte_end":466074,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpClientStream>::new","value":"fn <E> (name_server: SocketAddr, loop_handle: &Handle) -> (Box<Future<Item = UdpClientStream, Error = io::Error>>,\n Box<DnsStreamHandle<Error = E>>)","parent":null,"children":[],"decl_id":null,"docs":" it is expected that the resolver wrapper will be responsible for creating and managing\n  new UdpClients such that each new client would have a random port (reduce chance of cache\n  poisoning)","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2364},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":471583,"byte_end":471592,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"UdpStream","qualname":"::udp::udp_stream::UdpStream","value":"UdpStream {  }","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":525}],"decl_id":null,"docs":" A UDP stream of DNS binary packets\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":471523,"byte_end":471571,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":472580,"byte_end":472583,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpStream>::new","value":"fn <E> (name_server: SocketAddr, loop_handle: &Handle) -> (Box<Future<Item = UdpStream, Error = io::Error>>, BufStreamHandle<E>)","parent":null,"children":[],"decl_id":null,"docs":" This method is intended for client connections, see `with_bound` for a method better for\n  straight listening. It is expected that the resolver wrapper will be responsible for\n  creating and managing new UdpStreams such that each new client would have a random port\n  (reduce chance of cache poisoning). This will return a randomly assigned local port.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":474750,"byte_end":474760,"line_start":104,"line_end":104,"column_start":12,"column_end":22},"name":"with_bound","qualname":"<UdpStream>::with_bound","value":"fn <E> (socket: std::net::UdpSocket, loop_handle: &Handle) -> (Self, BufStreamHandle<E>)","parent":null,"children":[],"decl_id":null,"docs":" Initialize the Stream with an already bound socket. Generally this should be only used for\n  server listening sockets. See `new` for a client oriented socket. Specifically, this there\n  is already a bound socket in this context, whereas `new` makes sure to randomize ports\n  for additional cache poison prevention.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3576},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1586,"byte_end":1601,"line_start":64,"line_end":64,"column_start":12,"column_end":27},"name":"BufStreamHandle","qualname":"::BufStreamHandle","value":"BufStreamHandle {  }","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1387}],"decl_id":null,"docs":" A sender to which serialized DNS Messages can be sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1861,"byte_end":1864,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStreamHandle<E>>::new","value":"fn (sender: UnboundedSender<(Vec<u8>, SocketAddr)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new BufStreamHandle with the associated ProtoError\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2089,"byte_end":2103,"line_start":85,"line_end":85,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<BufStreamHandle<E>>::unbounded_send","value":"fn (&self, msg: (Vec<u8>, SocketAddr)) -> Result<(), SendError<(Vec<u8>, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" see [`futures::sync::mpsc::UnboundedSender`]\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2420},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2338,"byte_end":2357,"line_start":95,"line_end":95,"column_start":10,"column_end":29},"name":"MessageStreamHandle","qualname":"::MessageStreamHandle","value":"UnboundedSender<Message>","parent":null,"children":[],"decl_id":null,"docs":" A sender to which a Message can be sent\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2422},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2445,"byte_end":2463,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"BufDnsStreamHandle","qualname":"::BufDnsStreamHandle","value":"BufDnsStreamHandle {  }","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":549}],"decl_id":null,"docs":" A buffering stream bound to a `SocketAddr`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2884,"byte_end":2887,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<BufDnsStreamHandle<E>>::new","value":"fn (name_server: SocketAddr, sender: BufStreamHandle<E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new Buffered Stream Handle, used for sending data to the DNS peer.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":4958,"byte_end":4970,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":5566,"byte_end":5578,"line_start":63,"line_end":63,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":6857,"byte_end":6866,"line_start":103,"line_end":103,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":12416,"byte_end":12425,"line_start":243,"line_end":243,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":19895,"byte_end":19914,"line_start":413,"line_end":413,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":20781,"byte_end":20800,"line_start":446,"line_end":446,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":21561,"byte_end":21575,"line_start":472,"line_end":472,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30024,"byte_end":30037,"line_start":164,"line_end":164,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30192,"byte_end":30205,"line_start":171,"line_end":171,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30453,"byte_end":30464,"line_start":185,"line_end":185,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30619,"byte_end":30630,"line_start":192,"line_end":192,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30761,"byte_end":30766,"line_start":199,"line_end":199,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":31053,"byte_end":31067,"line_start":210,"line_end":210,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33989,"byte_end":33999,"line_start":265,"line_end":265,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34612,"byte_end":34613,"line_start":282,"line_end":282,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37294,"byte_end":37298,"line_start":43,"line_end":43,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37515,"byte_end":37519,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":39208,"byte_end":39212,"line_start":118,"line_end":118,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":40417,"byte_end":40423,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":41460,"byte_end":41464,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":45836,"byte_end":45842,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":46384,"byte_end":46390,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":57102,"byte_end":57108,"line_start":395,"line_end":395,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":58607,"byte_end":58613,"line_start":442,"line_end":442,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":68238,"byte_end":68245,"line_start":156,"line_end":156,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":490},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":68687,"byte_end":68694,"line_start":175,"line_end":175,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87615,"byte_end":87635,"line_start":737,"line_end":737,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87754,"byte_end":87774,"line_start":744,"line_end":744,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87987,"byte_end":87988,"line_start":750,"line_end":750,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89163,"byte_end":89170,"line_start":779,"line_end":779,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":96349,"byte_end":96355,"line_start":91,"line_end":91,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":98874,"byte_end":98879,"line_start":59,"line_end":59,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":99153,"byte_end":99158,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":101297,"byte_end":101302,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":101541,"byte_end":101546,"line_start":144,"line_end":144,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":101915,"byte_end":101920,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107801,"byte_end":107813,"line_start":133,"line_end":133,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":111278,"byte_end":111290,"line_start":176,"line_end":176,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":114475,"byte_end":114487,"line_start":239,"line_end":239,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":119114,"byte_end":119122,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":119800,"byte_end":119808,"line_start":62,"line_end":62,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":120642,"byte_end":120650,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":120799,"byte_end":120807,"line_start":96,"line_end":96,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":122094,"byte_end":122102,"line_start":147,"line_end":147,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":122223,"byte_end":122231,"line_start":153,"line_end":153,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":122355,"byte_end":122363,"line_start":159,"line_end":159,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":124037,"byte_end":124042,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":129309,"byte_end":129314,"line_start":173,"line_end":173,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":129396,"byte_end":129401,"line_start":179,"line_end":179,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":129891,"byte_end":129896,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":130873,"byte_end":130878,"line_start":222,"line_end":222,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131069,"byte_end":131074,"line_start":229,"line_end":229,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131195,"byte_end":131200,"line_start":235,"line_end":235,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131318,"byte_end":131323,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131445,"byte_end":131450,"line_start":247,"line_end":247,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131924,"byte_end":131937,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132100,"byte_end":132115,"line_start":276,"line_end":276,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132516,"byte_end":132521,"line_start":294,"line_end":294,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132750,"byte_end":132756,"line_start":306,"line_end":306,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":133005,"byte_end":133008,"line_start":318,"line_end":318,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":137832,"byte_end":137836,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":162600,"byte_end":162613,"line_start":723,"line_end":723,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":162867,"byte_end":162879,"line_start":734,"line_end":734,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163200,"byte_end":163209,"line_start":748,"line_end":748,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163372,"byte_end":163381,"line_start":756,"line_end":756,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163422,"byte_end":163431,"line_start":757,"line_end":757,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163739,"byte_end":163743,"line_start":772,"line_end":772,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163928,"byte_end":163932,"line_start":781,"line_end":781,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":164659,"byte_end":164663,"line_start":801,"line_end":801,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":165799,"byte_end":165803,"line_start":823,"line_end":823,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":166033,"byte_end":166037,"line_start":836,"line_end":836,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":166268,"byte_end":166272,"line_start":843,"line_end":843,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170302,"byte_end":170306,"line_start":925,"line_end":925,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170460,"byte_end":170464,"line_start":931,"line_end":931,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170604,"byte_end":170608,"line_start":939,"line_end":939,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170725,"byte_end":170729,"line_start":945,"line_end":945,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":172760,"byte_end":172764,"line_start":994,"line_end":994,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":173306,"byte_end":173310,"line_start":1016,"line_end":1016,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":173608,"byte_end":173614,"line_start":1029,"line_end":1029,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":197893,"byte_end":197902,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200685,"byte_end":200694,"line_start":406,"line_end":406,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":215593,"byte_end":215596,"line_start":136,"line_end":136,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":219521,"byte_end":219529,"line_start":238,"line_end":238,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":220594,"byte_end":220602,"line_start":285,"line_end":285,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221375,"byte_end":221380,"line_start":315,"line_end":315,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":232912,"byte_end":232920,"line_start":640,"line_end":640,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":247427,"byte_end":247429,"line_start":46,"line_end":46,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255312,"byte_end":255316,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":264791,"byte_end":264794,"line_start":168,"line_end":168,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269816,"byte_end":269824,"line_start":321,"line_end":321,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":271977,"byte_end":271987,"line_start":388,"line_end":388,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":272839,"byte_end":272849,"line_start":412,"line_end":412,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":273373,"byte_end":273383,"line_start":425,"line_end":425,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":273895,"byte_end":273898,"line_start":439,"line_end":439,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":274330,"byte_end":274338,"line_start":451,"line_end":451,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":278593,"byte_end":278596,"line_start":78,"line_end":78,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":288260,"byte_end":288263,"line_start":90,"line_end":90,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":300760,"byte_end":300769,"line_start":132,"line_end":132,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302587,"byte_end":302595,"line_start":192,"line_end":192,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304303,"byte_end":304311,"line_start":254,"line_end":254,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304995,"byte_end":304999,"line_start":279,"line_end":279,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":313014,"byte_end":313017,"line_start":40,"line_end":40,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":332016,"byte_end":332021,"line_start":400,"line_end":400,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":339024,"byte_end":339029,"line_start":577,"line_end":577,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":339147,"byte_end":339152,"line_start":583,"line_end":583,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353291,"byte_end":353301,"line_start":99,"line_end":99,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353712,"byte_end":353722,"line_start":119,"line_end":119,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":354817,"byte_end":354827,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":356086,"byte_end":356096,"line_start":194,"line_end":194,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":356245,"byte_end":356255,"line_start":200,"line_end":200,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":358699,"byte_end":358709,"line_start":285,"line_end":285,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":358832,"byte_end":358842,"line_start":291,"line_end":291,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":358966,"byte_end":358976,"line_start":297,"line_end":297,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":362771,"byte_end":362777,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":363095,"byte_end":363101,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":367365,"byte_end":367371,"line_start":222,"line_end":222,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":367479,"byte_end":367485,"line_start":228,"line_end":228,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":368136,"byte_end":368142,"line_start":252,"line_end":252,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":370897,"byte_end":370903,"line_start":312,"line_end":312,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":372065,"byte_end":372071,"line_start":342,"line_end":342,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":377249,"byte_end":377258,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":391685,"byte_end":391694,"line_start":440,"line_end":440,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":391780,"byte_end":391789,"line_start":446,"line_end":446,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":405413,"byte_end":405427,"line_start":27,"line_end":27,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":405854,"byte_end":405868,"line_start":43,"line_end":43,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":406758,"byte_end":406773,"line_start":72,"line_end":72,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":414201,"byte_end":414211,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1964},{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":421496,"byte_end":421506,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431056,"byte_end":431061,"line_start":337,"line_end":337,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":412692,"byte_end":412695,"line_start":96,"line_end":96,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":412838,"byte_end":412841,"line_start":102,"line_end":102,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":435319,"byte_end":435334,"line_start":30,"line_end":30,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":437181,"byte_end":437196,"line_start":89,"line_end":89,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":437432,"byte_end":437447,"line_start":98,"line_end":98,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":444932,"byte_end":444941,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":445080,"byte_end":445089,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":448194,"byte_end":448203,"line_start":168,"line_end":168,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":449583,"byte_end":449592,"line_start":211,"line_end":211,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":465635,"byte_end":465650,"line_start":26,"line_end":26,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":466882,"byte_end":466897,"line_start":64,"line_end":64,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":471803,"byte_end":471812,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":476006,"byte_end":476015,"line_start":142,"line_end":142,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2378},{"krate":0,"index":2380}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":478059,"byte_end":478078,"line_start":196,"line_end":196,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1728,"byte_end":1743,"line_start":72,"line_end":72,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2570,"byte_end":2588,"line_start":106,"line_end":106,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3093,"byte_end":3111,"line_start":124,"line_end":124,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1091,"byte_end":1096,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":198}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1106,"byte_end":1108,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":254}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35490,"byte_end":35496,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":330}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35506,"byte_end":35513,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":418}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35523,"byte_end":35530,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":622}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35540,"byte_end":35545,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":636}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,111,100,46,114,115],"byte_start":35555,"byte_end":35568,"line_start":25,"line_end":25,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":690}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1118,"byte_end":1120,"line_start":46,"line_end":46,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":744}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117663,"byte_end":117672,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":746}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117748,"byte_end":117754,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":806}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,109,111,100,46,114,115],"byte_start":123314,"byte_end":123319,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1186}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117764,"byte_end":117769,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1244}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201734,"byte_end":201735,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"ref_id":{"krate":0,"index":1246}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201745,"byte_end":201749,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1258}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201759,"byte_end":201762,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1270}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201772,"byte_end":201774,"line_start":25,"line_end":25,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1344}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201784,"byte_end":201788,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1364}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201798,"byte_end":201802,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1376}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201812,"byte_end":201815,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1394}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201825,"byte_end":201828,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1446}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201838,"byte_end":201841,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1478}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201851,"byte_end":201855,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1502}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,111,100,46,114,115],"byte_start":201865,"byte_end":201868,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1548}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117779,"byte_end":117790,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1580}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117800,"byte_end":117811,"line_start":26,"line_end":26,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1640}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,109,111,100,46,114,115],"byte_start":117821,"byte_end":117829,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1706}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1202,"byte_end":1211,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1916}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,109,111,100,46,114,115],"byte_start":410153,"byte_end":410159,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1918}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1221,"byte_end":1224,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2116}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1234,"byte_end":1237,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2264}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":4958,"byte_end":4970,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":5566,"byte_end":5578,"line_start":63,"line_end":63,"column_start":29,"column_end":41},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":122},"to":{"krate":0,"index":128}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":6857,"byte_end":6866,"line_start":103,"line_end":103,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":12416,"byte_end":12425,"line_start":243,"line_end":243,"column_start":27,"column_end":36},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":142},"to":{"krate":20,"index":668}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":19895,"byte_end":19914,"line_start":413,"line_end":413,"column_start":20,"column_end":39},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":162},"to":{"krate":20,"index":668}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":20781,"byte_end":20800,"line_start":446,"line_end":446,"column_start":27,"column_end":46},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":172},"to":{"krate":20,"index":668}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":21561,"byte_end":21575,"line_start":472,"line_end":472,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":2434},"to":{"krate":0,"index":188}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":22701,"byte_end":22706,"line_start":505,"line_end":505,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2562},"to":{"krate":0,"index":188}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30024,"byte_end":30037,"line_start":164,"line_end":164,"column_start":32,"column_end":45},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":2544},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30192,"byte_end":30205,"line_start":171,"line_end":171,"column_start":32,"column_end":45},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":2544},"to":{"krate":1,"index":2396}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30453,"byte_end":30464,"line_start":185,"line_end":185,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":2550},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30619,"byte_end":30630,"line_start":192,"line_end":192,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":2550},"to":{"krate":1,"index":2396}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":30761,"byte_end":30766,"line_start":199,"line_end":199,"column_start":31,"column_end":36},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":1,"index":3742},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":31053,"byte_end":31067,"line_start":210,"line_end":210,"column_start":16,"column_end":30},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":2530},"to":{"krate":2,"index":2562}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33989,"byte_end":33999,"line_start":265,"line_end":265,"column_start":16,"column_end":26},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2562}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34534,"byte_end":34538,"line_start":280,"line_end":280,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2616},"to":{"krate":0,"index":250}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34567,"byte_end":34572,"line_start":280,"line_end":280,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":2396},"to":{"krate":0,"index":250}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34575,"byte_end":34580,"line_start":280,"line_end":280,"column_start":68,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":2562},"to":{"krate":0,"index":250}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34612,"byte_end":34613,"line_start":282,"line_end":282,"column_start":28,"column_end":29},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":111},"to":{"krate":0,"index":250}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37294,"byte_end":37298,"line_start":43,"line_end":43,"column_start":18,"column_end":22},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":2556},"to":{"krate":2,"index":2596}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":37515,"byte_end":37519,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":2556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":39208,"byte_end":39212,"line_start":118,"line_end":118,"column_start":31,"column_end":35},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":2556},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":40417,"byte_end":40423,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":3520},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,101,100,110,115,46,114,115],"byte_start":41460,"byte_end":41464,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":2556},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":45836,"byte_end":45842,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":2572},"to":{"krate":2,"index":2596}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":46384,"byte_end":46390,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":2572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":57102,"byte_end":57108,"line_start":395,"line_end":395,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":2572},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,104,101,97,100,101,114,46,114,115],"byte_start":58607,"byte_end":58613,"line_start":442,"line_end":442,"column_start":31,"column_end":37},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":2572},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":68238,"byte_end":68245,"line_start":156,"line_end":156,"column_start":27,"column_end":34},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":2620},"to":{"krate":0,"index":458}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":68687,"byte_end":68694,"line_start":175,"line_end":175,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":2620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87615,"byte_end":87635,"line_start":737,"line_end":737,"column_start":6,"column_end":26},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87754,"byte_end":87774,"line_start":744,"line_end":744,"column_start":27,"column_end":47},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":604},"to":{"krate":0,"index":600}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87987,"byte_end":87988,"line_start":750,"line_end":750,"column_start":44,"column_end":45},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":141},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89163,"byte_end":89170,"line_start":779,"line_end":779,"column_start":31,"column_end":38},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":2620},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,111,112,95,99,111,100,101,46,114,115],"byte_start":96349,"byte_end":96355,"line_start":91,"line_end":91,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":2656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":98874,"byte_end":98879,"line_start":59,"line_end":59,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":2596}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":99153,"byte_end":99158,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":2676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":101297,"byte_end":101302,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":2676},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":101541,"byte_end":101546,"line_start":144,"line_end":144,"column_start":31,"column_end":36},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":2676},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,113,117,101,114,121,46,114,115],"byte_start":101915,"byte_end":101920,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":107801,"byte_end":107813,"line_start":133,"line_end":133,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":2700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":111278,"byte_end":111290,"line_start":176,"line_end":176,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,111,112,47,114,101,115,112,111,110,115,101,95,99,111,100,101,46,114,115],"byte_start":114475,"byte_end":114487,"line_start":239,"line_end":239,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":119114,"byte_end":119122,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":6584}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":119800,"byte_end":119808,"line_start":62,"line_end":62,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":2720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":120642,"byte_end":120650,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":2720},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":120799,"byte_end":120807,"line_start":96,"line_end":96,"column_start":31,"column_end":39},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":2720},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":122094,"byte_end":122102,"line_start":147,"line_end":147,"column_start":31,"column_end":39},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2428}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":122223,"byte_end":122231,"line_start":153,"line_end":153,"column_start":14,"column_end":22},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":2410}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,110,115,95,99,108,97,115,115,46,114,115],"byte_start":122355,"byte_end":122363,"line_start":159,"line_end":159,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":124037,"byte_end":124042,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":2746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":129309,"byte_end":129314,"line_start":173,"line_end":173,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":2604}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":129396,"byte_end":129401,"line_start":179,"line_end":179,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":2678}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":129891,"byte_end":129896,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":130873,"byte_end":130878,"line_start":222,"line_end":222,"column_start":16,"column_end":21},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":7698}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131069,"byte_end":131074,"line_start":229,"line_end":229,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":2374}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131195,"byte_end":131200,"line_start":235,"line_end":235,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":2428}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131318,"byte_end":131323,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":2410}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131445,"byte_end":131450,"line_start":247,"line_end":247,"column_start":15,"column_end":20},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":7274}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":131924,"byte_end":131937,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":914},"to":{"krate":0,"index":910}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132100,"byte_end":132115,"line_start":276,"line_end":276,"column_start":19,"column_end":34},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":920},"to":{"krate":0,"index":910}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132278,"byte_end":132283,"line_start":283,"line_end":283,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1734},"to":{"krate":0,"index":926}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132516,"byte_end":132521,"line_start":294,"line_end":294,"column_start":20,"column_end":25},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":2746},"to":{"krate":0,"index":926}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":132750,"byte_end":132756,"line_start":306,"line_end":306,"column_start":20,"column_end":26},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":4,"index":4906},"to":{"krate":0,"index":926}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,108,97,98,101,108,46,114,115],"byte_start":133005,"byte_end":133008,"line_start":318,"line_end":318,"column_start":20,"column_end":23},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":4,"index":3906},"to":{"krate":0,"index":926}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":137832,"byte_end":137836,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":2756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":162600,"byte_end":162613,"line_start":723,"line_end":723,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":1076},"to":{"krate":0,"index":1070}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":162867,"byte_end":162879,"line_start":734,"line_end":734,"column_start":19,"column_end":31},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":1084},"to":{"krate":0,"index":1070}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163200,"byte_end":163209,"line_start":748,"line_end":748,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":3802}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163372,"byte_end":163381,"line_start":756,"line_end":756,"column_start":32,"column_end":41},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":4230}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163422,"byte_end":163431,"line_start":757,"line_end":757,"column_start":34,"column_end":43},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":4216}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163739,"byte_end":163743,"line_start":772,"line_end":772,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":163928,"byte_end":163932,"line_start":781,"line_end":781,"column_start":25,"column_end":29},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":164659,"byte_end":164663,"line_start":801,"line_end":801,"column_start":25,"column_end":29},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":165799,"byte_end":165803,"line_start":823,"line_end":823,"column_start":26,"column_end":30},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":2374}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":166033,"byte_end":166037,"line_start":836,"line_end":836,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":2756},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":166268,"byte_end":166272,"line_start":843,"line_end":843,"column_start":31,"column_end":35},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":2756},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170302,"byte_end":170306,"line_start":925,"line_end":925,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170460,"byte_end":170464,"line_start":931,"line_end":931,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":2062}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170604,"byte_end":170608,"line_start":939,"line_end":939,"column_start":27,"column_end":31},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":2428}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":170725,"byte_end":170729,"line_start":945,"line_end":945,"column_start":14,"column_end":18},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":2410}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":172760,"byte_end":172764,"line_start":994,"line_end":994,"column_start":18,"column_end":22},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":2756},"to":{"krate":2,"index":6584}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":173050,"byte_end":173055,"line_start":1004,"line_end":1004,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1734},"to":{"krate":0,"index":1166}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":173306,"byte_end":173310,"line_start":1016,"line_end":1016,"column_start":19,"column_end":23},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":2756},"to":{"krate":0,"index":1166}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,110,97,109,101,46,114,115],"byte_start":173608,"byte_end":173614,"line_start":1029,"line_end":1029,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":4,"index":4906},"to":{"krate":0,"index":1166}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":197893,"byte_end":197902,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,100,111,109,97,105,110,47,117,115,97,103,101,46,114,115],"byte_start":200685,"byte_end":200694,"line_start":406,"line_end":406,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":1192},"to":{"krate":2,"index":1968}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":215593,"byte_end":215596,"line_start":136,"line_end":136,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":219521,"byte_end":219529,"line_start":238,"line_end":238,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":3074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":220594,"byte_end":220602,"line_start":285,"line_end":285,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":221375,"byte_end":221380,"line_start":315,"line_end":315,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":3098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,99,97,97,46,114,115],"byte_start":232912,"byte_end":232920,"line_start":640,"line_end":640,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":3122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,109,120,46,114,115],"byte_start":247427,"byte_end":247429,"line_start":46,"line_end":46,"column_start":6,"column_end":8},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":3146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,110,117,108,108,46,114,115],"byte_start":255312,"byte_end":255316,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":264791,"byte_end":264794,"line_start":168,"line_end":168,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":3198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":269816,"byte_end":269824,"line_start":321,"line_end":321,"column_start":20,"column_end":28},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":3238},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":271977,"byte_end":271987,"line_start":388,"line_end":388,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":3264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":272839,"byte_end":272849,"line_start":412,"line_end":412,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":3264},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":273373,"byte_end":273383,"line_start":425,"line_end":425,"column_start":41,"column_end":51},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":3264},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":273895,"byte_end":273898,"line_start":439,"line_end":439,"column_start":35,"column_end":38},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":4,"index":3906},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,111,112,116,46,114,115],"byte_start":274330,"byte_end":274338,"line_start":451,"line_end":451,"column_start":35,"column_end":43},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":3238},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,111,97,46,114,115],"byte_start":278593,"byte_end":278596,"line_start":78,"line_end":78,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[99]},"from":{"krate":0,"index":3300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,115,114,118,46,114,115],"byte_start":288260,"byte_end":288263,"line_start":90,"line_end":90,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[100]},"from":{"krate":0,"index":3324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":300760,"byte_end":300769,"line_start":132,"line_end":132,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[101]},"from":{"krate":0,"index":3372},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":302587,"byte_end":302595,"line_start":192,"line_end":192,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[103]},"from":{"krate":0,"index":3398},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304303,"byte_end":304311,"line_start":254,"line_end":254,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[105]},"from":{"krate":0,"index":3424},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,108,115,97,46,114,115],"byte_start":304995,"byte_end":304999,"line_start":279,"line_end":279,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[107]},"from":{"krate":0,"index":3348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,100,97,116,97,47,116,120,116,46,114,115],"byte_start":313014,"byte_end":313017,"line_start":40,"line_end":40,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[108]},"from":{"krate":0,"index":3450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":332016,"byte_end":332021,"line_start":400,"line_end":400,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[109]},"from":{"krate":0,"index":3474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":339024,"byte_end":339029,"line_start":577,"line_end":577,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[110]},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":2428}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,100,97,116,97,46,114,115],"byte_start":339147,"byte_end":339152,"line_start":583,"line_end":583,"column_start":14,"column_end":19},"kind":{"variant":"Impl","fields":[111]},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":2410}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353291,"byte_end":353301,"line_start":99,"line_end":99,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[112]},"from":{"krate":0,"index":3494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":353712,"byte_end":353722,"line_start":119,"line_end":119,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[113]},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":6584}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":354817,"byte_end":354827,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[114]},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":356086,"byte_end":356096,"line_start":194,"line_end":194,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[115]},"from":{"krate":0,"index":3494},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":356245,"byte_end":356255,"line_start":200,"line_end":200,"column_start":31,"column_end":41},"kind":{"variant":"Impl","fields":[116]},"from":{"krate":0,"index":3494},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":358699,"byte_end":358709,"line_start":285,"line_end":285,"column_start":33,"column_end":43},"kind":{"variant":"Impl","fields":[118]},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":2428}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":358832,"byte_end":358842,"line_start":291,"line_end":291,"column_start":14,"column_end":24},"kind":{"variant":"Impl","fields":[119]},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":2410}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,99,111,114,100,95,116,121,112,101,46,114,115],"byte_start":358966,"byte_end":358976,"line_start":297,"line_end":297,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[120]},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":362771,"byte_end":362777,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[121]},"from":{"krate":0,"index":3520},"to":{"krate":2,"index":2596}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":363095,"byte_end":363101,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[122]},"from":{"krate":0,"index":3520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":367365,"byte_end":367371,"line_start":222,"line_end":222,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[123]},"from":{"krate":0,"index":3520},"to":{"krate":0,"index":1848}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":367479,"byte_end":367485,"line_start":228,"line_end":228,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[124]},"from":{"krate":0,"index":3520},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":368136,"byte_end":368142,"line_start":252,"line_end":252,"column_start":31,"column_end":37},"kind":{"variant":"Impl","fields":[125]},"from":{"krate":0,"index":3520},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":370897,"byte_end":370903,"line_start":312,"line_end":312,"column_start":20,"column_end":26},"kind":{"variant":"Impl","fields":[126]},"from":{"krate":0,"index":3520},"to":{"krate":2,"index":2374}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,101,115,111,117,114,99,101,46,114,115],"byte_start":372065,"byte_end":372071,"line_start":342,"line_end":342,"column_start":29,"column_end":35},"kind":{"variant":"Impl","fields":[127]},"from":{"krate":0,"index":3520},"to":{"krate":2,"index":2428}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":377249,"byte_end":377258,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[128]},"from":{"krate":0,"index":3538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":391561,"byte_end":391566,"line_start":435,"line_end":435,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1734},"to":{"krate":0,"index":1848}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":391685,"byte_end":391694,"line_start":440,"line_end":440,"column_start":24,"column_end":33},"kind":{"variant":"Impl","fields":[129]},"from":{"krate":0,"index":3538},"to":{"krate":0,"index":1848}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,114,47,114,114,95,115,101,116,46,114,115],"byte_start":391780,"byte_end":391789,"line_start":446,"line_end":446,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[130]},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":4192}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":405413,"byte_end":405427,"line_start":27,"line_end":27,"column_start":12,"column_end":26},"kind":{"variant":"Impl","fields":[131]},"from":{"krate":0,"index":3554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":405854,"byte_end":405868,"line_start":43,"line_end":43,"column_start":26,"column_end":40},"kind":{"variant":"Impl","fields":[132]},"from":{"krate":0,"index":3554},"to":{"krate":0,"index":188}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,114,101,116,114,121,95,100,110,115,95,104,97,110,100,108,101,46,114,115],"byte_start":406758,"byte_end":406773,"line_start":72,"line_end":72,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[133]},"from":{"krate":0,"index":1906},"to":{"krate":20,"index":668}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,100,101,99,111,100,101,114,46,114,115],"byte_start":414201,"byte_end":414211,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[134]},"from":{"krate":0,"index":1934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":421496,"byte_end":421506,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[135]},"from":{"krate":0,"index":1986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":430770,"byte_end":430782,"line_start":321,"line_end":321,"column_start":24,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":2072},"to":{"krate":0,"index":2048}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,101,110,99,111,100,101,114,46,114,115],"byte_start":431056,"byte_end":431061,"line_start":337,"line_end":337,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[137]},"from":{"krate":0,"index":2056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":411564,"byte_end":411569,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1734},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":412692,"byte_end":412695,"line_start":96,"line_end":96,"column_start":23,"column_end":26},"kind":{"variant":"Impl","fields":[144]},"from":{"krate":4,"index":3906},"to":{"krate":0,"index":2072}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,115,101,114,105,97,108,105,122,101,47,98,105,110,97,114,121,47,109,111,100,46,114,115],"byte_start":412838,"byte_end":412841,"line_start":102,"line_end":102,"column_start":31,"column_end":34},"kind":{"variant":"Impl","fields":[145]},"from":{"krate":4,"index":3906},"to":{"krate":0,"index":2078}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":435319,"byte_end":435334,"line_start":30,"line_end":30,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[146]},"from":{"krate":0,"index":2154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":437181,"byte_end":437196,"line_start":89,"line_end":89,"column_start":9,"column_end":24},"kind":{"variant":"Impl","fields":[147]},"from":{"krate":0,"index":2154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":437432,"byte_end":437447,"line_start":98,"line_end":98,"column_start":44,"column_end":59},"kind":{"variant":"Impl","fields":[148]},"from":{"krate":0,"index":2154},"to":{"krate":20,"index":2046}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":444932,"byte_end":444941,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"kind":{"variant":"Impl","fields":[149]},"from":{"krate":0,"index":2234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":445080,"byte_end":445089,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[150]},"from":{"krate":0,"index":2234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":448194,"byte_end":448203,"line_start":168,"line_end":168,"column_start":33,"column_end":42},"kind":{"variant":"Impl","fields":[151]},"from":{"krate":0,"index":2234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,116,99,112,47,116,99,112,95,115,116,114,101,97,109,46,114,115],"byte_start":449583,"byte_end":449592,"line_start":211,"line_end":211,"column_start":44,"column_end":53},"kind":{"variant":"Impl","fields":[152]},"from":{"krate":0,"index":2234},"to":{"krate":20,"index":2046}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":465635,"byte_end":465650,"line_start":26,"line_end":26,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[153]},"from":{"krate":0,"index":2292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,99,108,105,101,110,116,95,115,116,114,101,97,109,46,114,115],"byte_start":466882,"byte_end":466897,"line_start":64,"line_end":64,"column_start":17,"column_end":32},"kind":{"variant":"Impl","fields":[154]},"from":{"krate":0,"index":2292},"to":{"krate":20,"index":2046}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":471803,"byte_end":471812,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[155]},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":476006,"byte_end":476015,"line_start":142,"line_end":142,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[156]},"from":{"krate":0,"index":2364},"to":{"krate":20,"index":2046}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,117,100,112,47,117,100,112,95,115,116,114,101,97,109,46,114,115],"byte_start":478059,"byte_end":478078,"line_start":196,"line_end":196,"column_start":17,"column_end":36},"kind":{"variant":"Impl","fields":[157]},"from":{"krate":0,"index":2382},"to":{"krate":20,"index":668}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1728,"byte_end":1743,"line_start":72,"line_end":72,"column_start":9,"column_end":24},"kind":{"variant":"Impl","fields":[158]},"from":{"krate":0,"index":3576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2570,"byte_end":2588,"line_start":106,"line_end":106,"column_start":9,"column_end":27},"kind":{"variant":"Impl","fields":[159]},"from":{"krate":0,"index":2422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,114,117,115,116,45,100,110,115,45,112,114,111,116,111,45,48,46,51,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3093,"byte_end":3111,"line_start":124,"line_end":124,"column_start":29,"column_end":47},"kind":{"variant":"Impl","fields":[160]},"from":{"krate":0,"index":2422},"to":{"krate":0,"index":128}}]}