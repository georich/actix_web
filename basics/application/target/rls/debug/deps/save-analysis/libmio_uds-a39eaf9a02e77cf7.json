{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"mio_uds","disambiguator":[10147675665219072460,16574753490346177133]},"crate_root":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src","external_crates":[{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1877579056841321839,4002650866653523028]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12966739244720591078,10895073499070158948]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4148811982382486632,5293825926111630395]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[55294194006836696,257979567559498938]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[5663549295587754337,15298730489275369687]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[198562575503244264,15640276364166720962]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15019360886040341153,15954958735131723916]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[2748248400471175825,13783408877556183619]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[13472166887002568360,10424338574949869411]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":10,"id":{"name":"iovec","disambiguator":[14942903118612993787,3195164160326042708]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":11,"id":{"name":"libc","disambiguator":[6776164903394557340,5187685817441892726]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":12,"id":{"name":"mio","disambiguator":[6280754324342045782,12160645006236027775]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":13,"id":{"name":"lazycell","disambiguator":[18174132419564488369,14019574044694012499]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":14,"id":{"name":"net2","disambiguator":[317664373739507878,15870254251397999881]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[6006914319526097489,5258778526497927168]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":16,"id":{"name":"slab","disambiguator":[1099382465232922427,4147351552908711642]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","num":17,"id":{"name":"log","disambiguator":[15458592949001772203,8043066798733188894]}}],"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":726,"line_start":1,"line_end":34,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":276,"byte_end":286,"line_start":18,"line_end":18,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":306,"byte_end":318,"line_start":19,"line_end":19,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":338,"byte_end":350,"line_start":20,"line_end":20,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":726,"line_start":1,"line_end":34,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":104},{"krate":0,"index":180},{"krate":0,"index":228},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344}],"decl_id":null,"docs":" MIO bindings for Unix Domain Sockets\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42,"byte_end":55,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":1054,"byte_end":1066,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":1197,"byte_end":1201,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":1948,"byte_end":1961,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"from_datagram","qualname":"<UnixDatagram>::from_datagram","value":"fn (stream: net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixDatagram` and returns a wrapped\n `UnixDatagram` compatible with mio.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":2257,"byte_end":2261,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":2605,"byte_end":2612,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3019,"byte_end":3026,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3439,"byte_end":3448,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixDatagram>::try_clone","value":"fn (&self) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3638,"byte_end":3648,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3862,"byte_end":3871,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4112,"byte_end":4121,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, net::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4340,"byte_end":4344,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4562,"byte_end":4569,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&self, buf: &[u8], path: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4973,"byte_end":4977,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":5119,"byte_end":5129,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":5495,"byte_end":5503,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":7136,"byte_end":7148,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" A structure representing a Unix domain socket server.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":7283,"byte_end":7287,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":8086,"byte_end":8099,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<UnixListener>::from_listener","value":"fn (stream: net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixListener` and returns a wrapped\n `UnixListener` compatible with mio.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":8621,"byte_end":8627,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&self) -> io::Result<Option<(UnixStream, net::SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":9226,"byte_end":9236,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"accept_std","qualname":"<UnixListener>::accept_std","value":"fn (&self) -> io::Result<Option<(net::UnixStream, net::SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":9927,"byte_end":9936,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixListener>::try_clone","value":"fn (&self) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10117,"byte_end":10127,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10270,"byte_end":10280,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17581,"byte_end":17591,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17937,"byte_end":17944,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (p: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":18845,"byte_end":18856,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<UnixStream>::from_stream","value":"fn (stream: net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixStream` and returns a wrapped\n `UnixStream` compatible with mio.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":19144,"byte_end":19148,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":19718,"byte_end":19727,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixStream>::try_clone","value":"fn (&self) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":19942,"byte_end":19952,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":20117,"byte_end":20126,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":20268,"byte_end":20278,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":20645,"byte_end":20653,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":21387,"byte_end":21396,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"read_bufs","qualname":"<UnixStream>::read_bufs","value":"fn (&self, bufs: &mut [&mut IoVec]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read in a list of buffers all at once.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":22530,"byte_end":22540,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"write_bufs","qualname":"<UnixStream>::write_bufs","value":"fn (&self, bufs: &[&IoVec]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write a list of buffers all at once.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":1107,"byte_end":1119,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":5605,"byte_end":5617,"line_start":146,"line_end":146,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6258,"byte_end":6270,"line_start":168,"line_end":168,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6365,"byte_end":6377,"line_start":174,"line_end":174,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6475,"byte_end":6487,"line_start":180,"line_end":180,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":7189,"byte_end":7201,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10381,"byte_end":10393,"line_start":106,"line_end":106,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10945,"byte_end":10957,"line_start":126,"line_end":126,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":11052,"byte_end":11064,"line_start":132,"line_end":132,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":11162,"byte_end":11174,"line_start":138,"line_end":138,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":12190,"byte_end":12196,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":14732,"byte_end":14738,"line_start":91,"line_end":91,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17630,"byte_end":17640,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23073,"byte_end":23083,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23721,"byte_end":23731,"line_start":198,"line_end":198,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23995,"byte_end":24005,"line_start":210,"line_end":210,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24427,"byte_end":24437,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24532,"byte_end":24542,"line_start":236,"line_end":236,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24640,"byte_end":24650,"line_start":242,"line_end":242,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":1107,"byte_end":1119,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":5605,"byte_end":5617,"line_start":146,"line_end":146,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":346},"to":{"krate":12,"index":34}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6258,"byte_end":6270,"line_start":168,"line_end":168,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":346},"to":{"krate":1,"index":11558}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6365,"byte_end":6377,"line_start":174,"line_end":174,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":346},"to":{"krate":1,"index":11566}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6475,"byte_end":6487,"line_start":180,"line_end":180,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":346},"to":{"krate":1,"index":11562}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":7189,"byte_end":7201,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10381,"byte_end":10393,"line_start":106,"line_end":106,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":352},"to":{"krate":12,"index":34}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10945,"byte_end":10957,"line_start":126,"line_end":126,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":352},"to":{"krate":1,"index":11558}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":11052,"byte_end":11064,"line_start":132,"line_end":132,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":352},"to":{"krate":1,"index":11566}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":11162,"byte_end":11174,"line_start":138,"line_end":138,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":352},"to":{"krate":1,"index":11562}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":12190,"byte_end":12196,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":14732,"byte_end":14738,"line_start":91,"line_end":91,"column_start":15,"column_end":21},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":208},"to":{"krate":2,"index":1996}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17630,"byte_end":17640,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23073,"byte_end":23083,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":358},"to":{"krate":12,"index":34}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23721,"byte_end":23731,"line_start":198,"line_end":198,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":358},"to":{"krate":1,"index":4258}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23995,"byte_end":24005,"line_start":210,"line_end":210,"column_start":16,"column_end":26},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":358},"to":{"krate":1,"index":4290}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24427,"byte_end":24437,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":358},"to":{"krate":1,"index":11558}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24532,"byte_end":24542,"line_start":236,"line_end":236,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":358},"to":{"krate":1,"index":11566}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24640,"byte_end":24650,"line_start":242,"line_end":242,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":358},"to":{"krate":1,"index":11562}}]}