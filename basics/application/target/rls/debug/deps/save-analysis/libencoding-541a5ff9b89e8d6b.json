{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"encoding","disambiguator":[13027981889672753724,6349801895236036630]},"crate_root":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src","external_crates":[{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1877579056841321839,4002650866653523028]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12966739244720591078,10895073499070158948]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4148811982382486632,5293825926111630395]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[55294194006836696,257979567559498938]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[5663549295587754337,15298730489275369687]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[198562575503244264,15640276364166720962]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15019360886040341153,15954958735131723916]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[2748248400471175825,13783408877556183619]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[13472166887002568360,10424338574949869411]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":10,"id":{"name":"encoding_index_singlebyte","disambiguator":[9261069429616711561,8196775401228681489]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":11,"id":{"name":"encoding_index_korean","disambiguator":[10301196848309449363,18395094388819978464]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":12,"id":{"name":"encoding_index_japanese","disambiguator":[9465750678948411572,7473154291665176248]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":13,"id":{"name":"encoding_index_simpchinese","disambiguator":[15636719963065211290,18031915939374505090]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","num":14,"id":{"name":"encoding_index_tradchinese","disambiguator":[8157798394079192542,12466363381784315089]}}],"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":127,"byte_end":10394,"line_start":5,"line_end":267,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8960,"byte_end":8970,"line_start":217,"line_end":217,"column_start":23,"column_end":33},"alias_span":null,"name":"CodecError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8972,"byte_end":8982,"line_start":217,"line_end":217,"column_start":35,"column_end":45},"alias_span":null,"name":"ByteWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8984,"byte_end":8996,"line_start":217,"line_end":217,"column_start":47,"column_end":59},"alias_span":null,"name":"StringWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9020,"byte_end":9030,"line_start":218,"line_end":218,"column_start":23,"column_end":33},"alias_span":null,"name":"RawEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9032,"byte_end":9042,"line_start":218,"line_end":218,"column_start":35,"column_end":45},"alias_span":null,"name":"RawDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9044,"byte_end":9055,"line_start":218,"line_end":218,"column_start":47,"column_end":58},"alias_span":null,"name":"EncodingRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9057,"byte_end":9065,"line_start":218,"line_end":218,"column_start":60,"column_end":68},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9089,"byte_end":9104,"line_start":219,"line_end":219,"column_start":23,"column_end":38},"alias_span":null,"name":"EncoderTrapFunc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9106,"byte_end":9121,"line_start":219,"line_end":219,"column_start":40,"column_end":55},"alias_span":null,"name":"DecoderTrapFunc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9123,"byte_end":9134,"line_start":219,"line_end":219,"column_start":57,"column_end":68},"alias_span":null,"name":"DecoderTrap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":930},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9158,"byte_end":9169,"line_start":220,"line_end":220,"column_start":23,"column_end":34},"alias_span":null,"name":"EncoderTrap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9171,"byte_end":9177,"line_start":220,"line_end":220,"column_start":36,"column_end":42},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":127,"byte_end":10394,"line_start":5,"line_end":267,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":42},{"krate":0,"index":98},{"krate":0,"index":208},{"krate":0,"index":894},{"krate":0,"index":916}],"decl_id":null,"docs":" # Encoding 0.2.33","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/types.rs","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":112},{"krate":0,"index":120},{"krate":0,"index":128},{"krate":0,"index":136},{"krate":0,"index":146},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":188},{"krate":0,"index":194},{"krate":0,"index":198}],"decl_id":null,"docs":" Interface to the character encoding.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":25036,"byte_end":25046,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"CodecError","qualname":"::types::CodecError","value":"CodecError { upto, cause }","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" Error information from either encoder or decoder.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":55},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":25511,"byte_end":25515,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"upto","qualname":"::types::CodecError::upto","value":"isize","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" The byte position of the first remaining byte, with respect to the *current* input.\n For the `finish` call, this should be no more than zero (since there is no input).\n It can be negative if the remaining byte is in the prior inputs,\n as long as the remaining byte is not yet processed.\n The caller should feed the bytes starting from this point again\n in order to continue encoding or decoding after an error.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":57},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":25577,"byte_end":25582,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"cause","qualname":"::types::CodecError::cause","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" A human-readable cause of the error.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":25702,"byte_end":25712,"line_start":70,"line_end":70,"column_start":11,"column_end":21},"name":"ByteWriter","qualname":"::types::ByteWriter","value":"ByteWriter","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110}],"decl_id":null,"docs":" Byte writer used by encoders. In most cases this will be an owned vector of `u8`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":26066,"byte_end":26077,"line_start":77,"line_end":77,"column_start":8,"column_end":19},"name":"writer_hint","qualname":"::types::ByteWriter::writer_hint","value":"fn (&mut self, _expectedlen: usize) -> ()","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Hints an expected lower bound on the length (in bytes) of the output\n until the next call to `writer_hint`,\n so that the writer can reserve the memory for writing.\n `RawEncoder`s are recommended but not required to call this method\n with an appropriate estimate.\n By default this method does nothing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":26151,"byte_end":26161,"line_start":80,"line_end":80,"column_start":8,"column_end":18},"name":"write_byte","qualname":"::types::ByteWriter::write_byte","value":"fn (&mut self, b: u8) -> ()","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Writes a single byte.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":26223,"byte_end":26234,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"write_bytes","qualname":"::types::ByteWriter::write_bytes","value":"fn (&mut self, v: &[u8]) -> ()","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Writes a number of bytes.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":26632,"byte_end":26644,"line_start":101,"line_end":101,"column_start":11,"column_end":23},"name":"StringWriter","qualname":"::types::StringWriter","value":"StringWriter","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126}],"decl_id":null,"docs":" String writer used by decoders. In most cases this will be an owned string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":26998,"byte_end":27009,"line_start":108,"line_end":108,"column_start":8,"column_end":19},"name":"writer_hint","qualname":"::types::StringWriter::writer_hint","value":"fn (&mut self, _expectedlen: usize) -> ()","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Hints an expected lower bound on the length (in bytes) of the output\n until the next call to `writer_hint`,\n so that the writer can reserve the memory for writing.\n `RawDecoder`s are recommended but not required to call this method\n with an appropriate estimate.\n By default this method does nothing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":27088,"byte_end":27098,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"write_char","qualname":"::types::StringWriter::write_char","value":"fn (&mut self, c: char) -> ()","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Writes a single character.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":27153,"byte_end":27162,"line_start":114,"line_end":114,"column_start":8,"column_end":17},"name":"write_str","qualname":"::types::StringWriter::write_str","value":"fn (&mut self, s: &str) -> ()","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Writes a string.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":136},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":27662,"byte_end":27672,"line_start":134,"line_end":134,"column_start":11,"column_end":21},"name":"RawEncoder","qualname":"::types::RawEncoder","value":"RawEncoder: 'static","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144}],"decl_id":null,"docs":" Encoder converting a Unicode string into a byte sequence.\n This is a lower level interface, and normally `Encoding::encode` should be used instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":27774,"byte_end":27783,"line_start":136,"line_end":136,"column_start":8,"column_end":17},"name":"from_self","qualname":"::types::RawEncoder::from_self","value":"fn (&self) -> Box<RawEncoder>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Creates a fresh `RawEncoder` instance which parameters are same as `self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":27968,"byte_end":27987,"line_start":140,"line_end":140,"column_start":8,"column_end":27},"name":"is_ascii_compatible","qualname":"::types::RawEncoder::is_ascii_compatible","value":"fn (&self) -> bool","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Returns true if this encoding is compatible to ASCII,\n i.e. U+0000 through U+007F always map to bytes 00 through 7F and nothing else.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":28380,"byte_end":28388,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"raw_feed","qualname":"::types::RawEncoder::raw_feed","value":"fn (&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>)","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Feeds given portion of string to the encoder,\n pushes the an encoded byte sequence at the end of the given output,\n and returns a byte offset to the first unprocessed character\n (that can be zero when the first such character appeared in the prior calls to `raw_feed`)\n and optional error information (None means success).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":28740,"byte_end":28750,"line_start":153,"line_end":153,"column_start":8,"column_end":18},"name":"raw_finish","qualname":"::types::RawEncoder::raw_finish","value":"fn (&mut self, output: &mut ByteWriter) -> Option<CodecError>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Finishes the encoder,\n pushes the an encoded byte sequence at the end of the given output,\n and returns optional error information (None means success).\n `remaining` value of the error information, if any, is always an empty string.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":28978,"byte_end":28988,"line_start":158,"line_end":158,"column_start":11,"column_end":21},"name":"RawDecoder","qualname":"::types::RawDecoder","value":"RawDecoder: 'static","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154}],"decl_id":null,"docs":" Decoder converting a byte sequence into a Unicode string.\n This is a lower level interface, and normally `Encoding::decode` should be used instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":29090,"byte_end":29099,"line_start":160,"line_end":160,"column_start":8,"column_end":17},"name":"from_self","qualname":"::types::RawDecoder::from_self","value":"fn (&self) -> Box<RawDecoder>","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Creates a fresh `RawDecoder` instance which parameters are same as `self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":29284,"byte_end":29303,"line_start":164,"line_end":164,"column_start":8,"column_end":27},"name":"is_ascii_compatible","qualname":"::types::RawDecoder::is_ascii_compatible","value":"fn (&self) -> bool","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Returns true if this encoding is compatible to ASCII,\n i.e. bytes 00 through 7F always map to U+0000 through U+007F and nothing else.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":29681,"byte_end":29689,"line_start":171,"line_end":171,"column_start":8,"column_end":16},"name":"raw_feed","qualname":"::types::RawDecoder::raw_feed","value":"fn (&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>)","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Feeds given portion of byte sequence to the encoder,\n pushes the a decoded string at the end of the given output,\n and returns an offset to the first unprocessed byte\n (that can be zero when the first such byte appeared in the prior calls to `raw_feed`)\n and optional error information (None means success).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":29949,"byte_end":29959,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"raw_finish","qualname":"::types::RawDecoder::raw_finish","value":"fn (&mut self, output: &mut StringWriter) -> Option<CodecError>","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Finishes the decoder,\n pushes the a decoded string at the end of the given output,\n and returns optional error information (None means success).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":30184,"byte_end":30195,"line_start":181,"line_end":181,"column_start":10,"column_end":21},"name":"EncodingRef","qualname":"::types::EncodingRef","value":"&'static (Encoding + Send + Sync)","parent":null,"children":[],"decl_id":null,"docs":" A trait object using dynamic dispatch which is a sendable reference to the encoding,\n for code where the encoding is not known at compile-time.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":30268,"byte_end":30276,"line_start":184,"line_end":184,"column_start":11,"column_end":19},"name":"Encoding","qualname":"::types::Encoding","value":"Encoding","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174}],"decl_id":null,"docs":" Character encoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":30476,"byte_end":30480,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"name","qualname":"::types::Encoding::name","value":"fn (&self) -> &'static str","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Returns the canonical name of given encoding.\n This name is guaranteed to be unique across built-in encodings,\n but it is not normative and would be at most arbitrary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":30680,"byte_end":30691,"line_start":192,"line_end":192,"column_start":8,"column_end":19},"name":"whatwg_name","qualname":"::types::Encoding::whatwg_name","value":"fn (&self) -> Option<&'static str>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Returns a name of given encoding defined in the WHATWG Encoding standard, if any.\n This name often differs from `name` due to the compatibility reason.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":30771,"byte_end":30782,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"raw_encoder","qualname":"::types::Encoding::raw_encoder","value":"fn (&self) -> Box<RawEncoder>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Creates a new encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":30849,"byte_end":30860,"line_start":198,"line_end":198,"column_start":8,"column_end":19},"name":"raw_decoder","qualname":"::types::Encoding::raw_decoder","value":"fn (&self) -> Box<RawDecoder>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Creates a new decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":31107,"byte_end":31113,"line_start":204,"line_end":204,"column_start":8,"column_end":14},"name":"encode","qualname":"::types::Encoding::encode","value":"fn (&self, input: &str, trap: EncoderTrap) -> Result<Vec<u8>, Cow<'static, str>>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" An easy-to-use interface to `RawEncoder`.\n On the encoder error `trap` is called,\n which may return a replacement sequence to continue processing,\n or a failure to return the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":31336,"byte_end":31345,"line_start":210,"line_end":210,"column_start":8,"column_end":17},"name":"encode_to","qualname":"::types::Encoding::encode_to","value":"fn (&self, input: &str, trap: EncoderTrap, ret: &mut ByteWriter) -> Result<(), Cow<'static, str>>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Encode into a `ByteWriter`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":32934,"byte_end":32940,"line_start":249,"line_end":249,"column_start":8,"column_end":14},"name":"decode","qualname":"::types::Encoding::decode","value":"fn (&self, input: &[u8], trap: DecoderTrap) -> Result<String, Cow<'static, str>>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" An easy-to-use interface to `RawDecoder`.\n On the decoder error `trap` is called,\n which may return a replacement string to continue processing,\n or a failure to return the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":33313,"byte_end":33322,"line_start":258,"line_end":258,"column_start":8,"column_end":17},"name":"decode_to","qualname":"::types::Encoding::decode_to","value":"fn (&self, input: &[u8], trap: DecoderTrap, ret: &mut StringWriter) -> Result<(), Cow<'static, str>>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Decode into a `StringWriter`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":34766,"byte_end":34781,"line_start":295,"line_end":295,"column_start":10,"column_end":25},"name":"EncoderTrapFunc","qualname":"::types::EncoderTrapFunc","value":"fn(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool","parent":null,"children":[],"decl_id":null,"docs":" A type of the bare function in `EncoderTrap` values.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":34945,"byte_end":34960,"line_start":299,"line_end":299,"column_start":10,"column_end":25},"name":"DecoderTrapFunc","qualname":"::types::DecoderTrapFunc","value":"fn(decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool","parent":null,"children":[],"decl_id":null,"docs":" A type of the bare function in `DecoderTrap` values.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":107},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35236,"byte_end":35242,"line_start":307,"line_end":307,"column_start":5,"column_end":11},"name":"Strict","qualname":"::types::DecoderTrap::Strict","value":"DecoderTrap::Strict","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Immediately fails on errors.\n Corresponds to WHATWG \"fatal\" error algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":109},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35360,"byte_end":35367,"line_start":310,"line_end":310,"column_start":5,"column_end":12},"name":"Replace","qualname":"::types::DecoderTrap::Replace","value":"DecoderTrap::Replace","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Replaces an error with a U+FFFD (decoder).\n Corresponds to WHATWG \"replacement\" error algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":111},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35457,"byte_end":35463,"line_start":312,"line_end":312,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::types::DecoderTrap::Ignore","value":"DecoderTrap::Ignore","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Silently ignores an error, effectively replacing it with an empty sequence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":113},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35667,"byte_end":35671,"line_start":316,"line_end":316,"column_start":5,"column_end":9},"name":"Call","qualname":"::types::DecoderTrap::Call","value":"DecoderTrap::Call(DecoderTrapFunc)","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Calls given function to handle decoder errors.\n The function is given the current decoder, input and output writer,\n and should return true only when it is fine to keep going.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":926},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35126,"byte_end":35137,"line_start":304,"line_end":304,"column_start":10,"column_end":21},"name":"DecoderTrap","qualname":"::types::DecoderTrap","value":"DecoderTrap::{Strict, Replace, Ignore, Call}","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113}],"decl_id":null,"docs":" Trap, which handles decoder errors.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35117,"byte_end":35691,"line_start":304,"line_end":317,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35845,"byte_end":35849,"line_start":322,"line_end":322,"column_start":12,"column_end":16},"name":"trap","qualname":"<DecoderTrap>::trap","value":"fn (&self, decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Handles a decoder error. May write to the output writer.\n Returns true only when it is fine to keep going.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":36685,"byte_end":36691,"line_start":347,"line_end":347,"column_start":5,"column_end":11},"name":"Strict","qualname":"::types::EncoderTrap::Strict","value":"EncoderTrap::Strict","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Immediately fails on errors.\n Corresponds to WHATWG \"fatal\" error algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":119},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":36884,"byte_end":36891,"line_start":351,"line_end":351,"column_start":5,"column_end":12},"name":"Replace","qualname":"::types::EncoderTrap::Replace","value":"EncoderTrap::Replace","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Replaces an error with `?` in given encoding.\n Note that this fails when `?` cannot be represented in given encoding.\n Corresponds to WHATWG \"URL\" error algorithms.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":121},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":36981,"byte_end":36987,"line_start":353,"line_end":353,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::types::EncoderTrap::Ignore","value":"EncoderTrap::Ignore","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Silently ignores an error, effectively replacing it with an empty sequence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":123},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":37214,"byte_end":37223,"line_start":357,"line_end":357,"column_start":5,"column_end":14},"name":"NcrEscape","qualname":"::types::EncoderTrap::NcrEscape","value":"EncoderTrap::NcrEscape","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Replaces an error with XML numeric character references (e.g. `&#1234;`).\n The encoder trap fails when NCRs cannot be represented in given encoding.\n Corresponds to WHATWG \"<form>\" error algorithms.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":125},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":37427,"byte_end":37431,"line_start":361,"line_end":361,"column_start":5,"column_end":9},"name":"Call","qualname":"::types::EncoderTrap::Call","value":"EncoderTrap::Call(EncoderTrapFunc)","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Calls given function to handle encoder errors.\n The function is given the current encoder, input and output writer,\n and should return true only when it is fine to keep going.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":930},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":36575,"byte_end":36586,"line_start":344,"line_end":344,"column_start":10,"column_end":21},"name":"EncoderTrap","qualname":"::types::EncoderTrap","value":"EncoderTrap::{Strict, Replace, Ignore, NcrEscape, Call}","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":36566,"byte_end":37451,"line_start":344,"line_end":362,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":37606,"byte_end":37610,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"name":"trap","qualname":"<EncoderTrap>::trap","value":"fn (&self, encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Handles an encoder error. May write to the output writer.\n Returns true only when it is fine to keep going.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":39342,"byte_end":39348,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"decode","qualname":"::types::decode","value":"fn (input: &[u8], trap: DecoderTrap, fallback_encoding: EncodingRef) -> (Result<String, Cow<'static, str>>, EncodingRef)","parent":null,"children":[],"decl_id":null,"docs":" Determine the encoding by looking for a Byte Order Mark (BOM)\n and decoded a single string in memory.\n Return the result and the used encoding.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9309,"byte_end":9314,"line_start":228,"line_end":228,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/lib.rs","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":248},{"krate":0,"index":294},{"krate":0,"index":350},{"krate":0,"index":422},{"krate":0,"index":506},{"krate":0,"index":556},{"krate":0,"index":696},{"krate":0,"index":822},{"krate":0,"index":872}],"decl_id":null,"docs":" Codec implementations.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":210},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::codec::error","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/error.rs","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":934},{"krate":0,"index":938},{"krate":0,"index":936},{"krate":0,"index":216},{"krate":0,"index":942},{"krate":0,"index":946},{"krate":0,"index":944},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":950},{"krate":0,"index":954},{"krate":0,"index":952},{"krate":0,"index":236},{"krate":0,"index":240}],"decl_id":null,"docs":" A placeholder encoding that returns encoder/decoder error for every case.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44224,"byte_end":44237,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"ErrorEncoding","qualname":"::codec::error::ErrorEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding that returns encoder/decoder error for every case.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44213,"byte_end":44238,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":942},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44538,"byte_end":44550,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"ErrorEncoder","qualname":"::codec::error::ErrorEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoder that always returns error.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44527,"byte_end":44551,"line_start":22,"line_end":22,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44584,"byte_end":44587,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<ErrorEncoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":950},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":45266,"byte_end":45278,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"ErrorDecoder","qualname":"::codec::error::ErrorDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A decoder that always returns error.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":45255,"byte_end":45279,"line_start":47,"line_end":47,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":45312,"byte_end":45315,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<ErrorDecoder>::new","value":"fn () -> Box<RawDecoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ascii","qualname":"::codec::ascii","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/ascii.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":958},{"krate":0,"index":962},{"krate":0,"index":960},{"krate":0,"index":256},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":968},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":974},{"krate":0,"index":978},{"krate":0,"index":976},{"krate":0,"index":278},{"krate":0,"index":282}],"decl_id":null,"docs":" 7-bit ASCII encoding.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":46980,"byte_end":46993,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"ASCIIEncoding","qualname":"::codec::ascii::ASCIIEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" ASCII, also known as ISO/IEC 646:US.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":46969,"byte_end":46994,"line_start":18,"line_end":18,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47278,"byte_end":47290,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"ASCIIEncoder","qualname":"::codec::ascii::ASCIIEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoder for ASCII.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47267,"byte_end":47291,"line_start":28,"line_end":28,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47324,"byte_end":47327,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<ASCIIEncoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":48411,"byte_end":48423,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"ASCIIDecoder","qualname":"::codec::ascii::ASCIIDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A decoder for ASCII.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":48400,"byte_end":48424,"line_start":63,"line_end":63,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":48457,"byte_end":48460,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<ASCIIDecoder>::new","value":"fn () -> Box<RawDecoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"singlebyte","qualname":"::codec::singlebyte","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/singlebyte.rs","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":304},{"krate":0,"index":982},{"krate":0,"index":988},{"krate":0,"index":984},{"krate":0,"index":306},{"krate":0,"index":990},{"krate":0,"index":994},{"krate":0,"index":992},{"krate":0,"index":316},{"krate":0,"index":320},{"krate":0,"index":998},{"krate":0,"index":1002},{"krate":0,"index":1000},{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":344}],"decl_id":null,"docs":" Common codec implementation for single-byte encodings.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":51821,"byte_end":51839,"line_start":13,"line_end":13,"column_start":12,"column_end":30},"name":"SingleByteEncoding","qualname":"::codec::singlebyte::SingleByteEncoding","value":"SingleByteEncoding { name, whatwg_name, index_forward, index_backward }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147}],"decl_id":null,"docs":" A common framework for single-byte encodings based on ASCII.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":51810,"byte_end":52019,"line_start":13,"line_end":18,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":51850,"byte_end":51854,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"name","qualname":"::codec::singlebyte::SingleByteEncoding::name","value":"&'static str","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":51878,"byte_end":51889,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"name":"whatwg_name","qualname":"::codec::singlebyte::SingleByteEncoding::whatwg_name","value":"std::option::Option<&'static str>","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":51921,"byte_end":51934,"line_start":16,"line_end":16,"column_start":9,"column_end":22},"name":"index_forward","qualname":"::codec::singlebyte::SingleByteEncoding::index_forward","value":"fn(u8) -> u16","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":51973,"byte_end":51987,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"index_backward","qualname":"::codec::singlebyte::SingleByteEncoding::index_backward","value":"fn(u32) -> u8","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":990},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52459,"byte_end":52476,"line_start":29,"line_end":29,"column_start":12,"column_end":29},"name":"SingleByteEncoder","qualname":"::codec::singlebyte::SingleByteEncoder","value":"SingleByteEncoder {  }","parent":null,"children":[{"krate":0,"index":149}],"decl_id":null,"docs":" An encoder for single-byte encodings based on ASCII.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52448,"byte_end":52529,"line_start":29,"line_end":31,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52567,"byte_end":52570,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<SingleByteEncoder>::new","value":"fn (index_backward: fn(u32) -> u8) -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":998},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":53803,"byte_end":53820,"line_start":71,"line_end":71,"column_start":12,"column_end":29},"name":"SingleByteDecoder","qualname":"::codec::singlebyte::SingleByteDecoder","value":"SingleByteDecoder {  }","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" A decoder for single-byte encodings based on ASCII.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":53792,"byte_end":53872,"line_start":71,"line_end":73,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":53910,"byte_end":53913,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<SingleByteDecoder>::new","value":"fn (index_forward: fn(u8) -> u16) -> Box<RawDecoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":344},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":55134,"byte_end":55144,"line_start":114,"line_end":114,"column_start":9,"column_end":19},"name":"iso_8859_1","qualname":"::codec::singlebyte::iso_8859_1","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/singlebyte.rs","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348}],"decl_id":null,"docs":" Algorithmic mapping for ISO 8859-1.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":346},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":55168,"byte_end":55175,"line_start":115,"line_end":115,"column_start":22,"column_end":29},"name":"forward","qualname":"::codec::singlebyte::iso_8859_1::forward","value":"fn (code: u8) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":55151,"byte_end":55160,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":55230,"byte_end":55238,"line_start":116,"line_end":116,"column_start":22,"column_end":30},"name":"backward","qualname":"::codec::singlebyte::iso_8859_1::backward","value":"fn (code: u32) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":55213,"byte_end":55222,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":350},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utf_8","qualname":"::codec::utf_8","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/utf_8.rs","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":1006},{"krate":0,"index":1010},{"krate":0,"index":1008},{"krate":0,"index":362},{"krate":0,"index":1014},{"krate":0,"index":1018},{"krate":0,"index":1016},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1024},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":418}],"decl_id":null,"docs":" UTF-8, the universal encoding.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1006},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":57789,"byte_end":57801,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"UTF8Encoding","qualname":"::codec::utf_8::UTF8Encoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 (UCS Transformation Format, 8-bit).","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":57778,"byte_end":57802,"line_start":47,"line_end":47,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58151,"byte_end":58162,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"UTF8Encoder","qualname":"::codec::utf_8::UTF8Encoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoder for UTF-8.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58140,"byte_end":58163,"line_start":58,"line_end":58,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58195,"byte_end":58198,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<UTF8Encoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1022},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58822,"byte_end":58833,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"UTF8Decoder","qualname":"::codec::utf_8::UTF8Decoder","value":"UTF8Decoder {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":163}],"decl_id":null,"docs":" A decoder for UTF-8.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58811,"byte_end":58893,"line_start":82,"line_end":86,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58925,"byte_end":58928,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<UTF8Decoder>::new","value":"fn () -> Box<RawDecoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":64342,"byte_end":64351,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"from_utf8","qualname":"::codec::utf_8::from_utf8","value":"fn <'a> (input: &'a [u8]) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Almost equivalent to `std::str::from_utf8`.\n This function is provided for the fair benchmark against the stdlib's UTF-8 conversion\n functions, as rust-encoding always allocates a new string.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":422},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utf_16","qualname":"::codec::utf_16","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/utf_16.rs","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":1030},{"krate":0,"index":1034},{"krate":0,"index":1032},{"krate":0,"index":1038},{"krate":0,"index":1042},{"krate":0,"index":1040},{"krate":0,"index":432},{"krate":0,"index":442},{"krate":0,"index":452},{"krate":0,"index":1046},{"krate":0,"index":1050},{"krate":0,"index":1048},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":1054},{"krate":0,"index":1058},{"krate":0,"index":1056},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":498}],"decl_id":null,"docs":" UTF-16.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":85847,"byte_end":85853,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Little","qualname":"::codec::utf_16::Little","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation type for little endian.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":85836,"byte_end":85854,"line_start":16,"line_end":16,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86028,"byte_end":86031,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"Big","qualname":"::codec::utf_16::Big","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation type for big endian.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86017,"byte_end":86032,"line_start":22,"line_end":22,"column_start":1,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86187,"byte_end":86193,"line_start":26,"line_end":26,"column_start":11,"column_end":17},"name":"Endian","qualname":"::codec::utf_16::Endian","value":"Endian: Clone + 'static","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440}],"decl_id":null,"docs":" An internal trait used to customize UTF-16 implementations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86220,"byte_end":86224,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"name","qualname":"::codec::utf_16::Endian::name","value":"fn () -> &'static str","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86251,"byte_end":86262,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"whatwg_name","qualname":"::codec::utf_16::Endian::whatwg_name","value":"fn () -> Option<&'static str>","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86297,"byte_end":86312,"line_start":29,"line_end":29,"column_start":8,"column_end":23},"name":"write_two_bytes","qualname":"::codec::utf_16::Endian::write_two_bytes","value":"fn (output: &mut ByteWriter, msb: u8, lsb: u8) -> ()","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86364,"byte_end":86380,"line_start":30,"line_end":30,"column_start":8,"column_end":24},"name":"concat_two_bytes","qualname":"::codec::utf_16::Endian::concat_two_bytes","value":"fn (lead: u16, trail: u8) -> u16","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":87815,"byte_end":87828,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"UTF16Encoding","qualname":"::codec::utf_16::UTF16Encoding","value":"UTF16Encoding {  }","parent":null,"children":[{"krate":0,"index":173}],"decl_id":null,"docs":" UTF-16 (UCS Transformation Format, 16-bit).","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":87804,"byte_end":87863,"line_start":73,"line_end":75,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":462},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":87914,"byte_end":87929,"line_start":78,"line_end":78,"column_start":10,"column_end":25},"name":"UTF16LEEncoding","qualname":"::codec::utf_16::UTF16LEEncoding","value":"UTF16Encoding<Little>","parent":null,"children":[],"decl_id":null,"docs":" A type for UTF-16 in little endian.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88001,"byte_end":88016,"line_start":80,"line_end":80,"column_start":10,"column_end":25},"name":"UTF16BEEncoding","qualname":"::codec::utf_16::UTF16BEEncoding","value":"UTF16Encoding<Big>","parent":null,"children":[],"decl_id":null,"docs":" A type for UTF-16 in big endian.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88095,"byte_end":88112,"line_start":83,"line_end":83,"column_start":11,"column_end":28},"name":"UTF_16LE_ENCODING","qualname":"::codec::utf_16::UTF_16LE_ENCODING","value":"UTF16LEEncoding","parent":null,"children":[],"decl_id":null,"docs":" An instance for UTF-16 in little endian.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":468},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88224,"byte_end":88241,"line_start":85,"line_end":85,"column_start":11,"column_end":28},"name":"UTF_16BE_ENCODING","qualname":"::codec::utf_16::UTF_16BE_ENCODING","value":"UTF16BEEncoding","parent":null,"children":[],"decl_id":null,"docs":" An instance for UTF-16 in big endian.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1054},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88868,"byte_end":88880,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"UTF16Encoder","qualname":"::codec::utf_16::UTF16Encoder","value":"UTF16Encoder {  }","parent":null,"children":[{"krate":0,"index":181}],"decl_id":null,"docs":" An encoder for UTF-16.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88857,"byte_end":88915,"line_start":103,"line_end":105,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":90562,"byte_end":90574,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"UTF16Decoder","qualname":"::codec::utf_16::UTF16Decoder","value":"UTF16Decoder {  }","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91}],"decl_id":null,"docs":" A decoder for UTF-16.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":90699,"byte_end":90702,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<UTF16Decoder<E>>::new","value":"fn () -> Box<RawDecoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"korean","qualname":"::codec::korean","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/korean.rs","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1064},{"krate":0,"index":518},{"krate":0,"index":1070},{"krate":0,"index":1074},{"krate":0,"index":1072},{"krate":0,"index":528},{"krate":0,"index":532},{"krate":0,"index":1078},{"krate":0,"index":1082},{"krate":0,"index":1080},{"krate":0,"index":542},{"krate":0,"index":546},{"krate":0,"index":1086}],"decl_id":null,"docs":" Legacy Korean encodings based on KS X 1001.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109061,"byte_end":109079,"line_start":25,"line_end":25,"column_start":12,"column_end":30},"name":"Windows949Encoding","qualname":"::codec::korean::Windows949Encoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Windows code page 949.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109050,"byte_end":109080,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109494,"byte_end":109511,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"Windows949Encoder","qualname":"::codec::korean::Windows949Encoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoder for Windows code page 949.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109483,"byte_end":109512,"line_start":36,"line_end":36,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109550,"byte_end":109553,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Windows949Encoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"japanese","qualname":"::codec::japanese","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/japanese.rs","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":1136},{"krate":0,"index":1140},{"krate":0,"index":1138},{"krate":0,"index":576},{"krate":0,"index":1144},{"krate":0,"index":1148},{"krate":0,"index":1146},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":1152},{"krate":0,"index":1156},{"krate":0,"index":1154},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":1160},{"krate":0,"index":1220},{"krate":0,"index":1224},{"krate":0,"index":1222},{"krate":0,"index":614},{"krate":0,"index":1228},{"krate":0,"index":1232},{"krate":0,"index":1230},{"krate":0,"index":624},{"krate":0,"index":628},{"krate":0,"index":1236},{"krate":0,"index":1240},{"krate":0,"index":1238},{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":1244},{"krate":0,"index":1294},{"krate":0,"index":1298},{"krate":0,"index":1296},{"krate":0,"index":652},{"krate":0,"index":1302},{"krate":0,"index":1310},{"krate":0,"index":1306},{"krate":0,"index":1304},{"krate":0,"index":1314},{"krate":0,"index":1318},{"krate":0,"index":1316},{"krate":0,"index":662},{"krate":0,"index":666},{"krate":0,"index":1322},{"krate":0,"index":1326},{"krate":0,"index":1324},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":1330}],"decl_id":null,"docs":" Legacy Japanese encodings based on JIS X 0208 and JIS X 0212.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1136},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":118867,"byte_end":118880,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"EUCJPEncoding","qualname":"::codec::japanese::EUCJPEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" EUC-JP. (XXX with asymmetric JIS X 0212 support)","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":118856,"byte_end":118881,"line_start":30,"line_end":30,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":119269,"byte_end":119281,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"EUCJPEncoder","qualname":"::codec::japanese::EUCJPEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoder for EUC-JP with unused G3 character set.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":119258,"byte_end":119282,"line_start":41,"line_end":41,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":119315,"byte_end":119318,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<EUCJPEncoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1220},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133378,"byte_end":133396,"line_start":450,"line_end":450,"column_start":12,"column_end":30},"name":"Windows31JEncoding","qualname":"::codec::japanese::Windows31JEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Windows code page 932, i.e. Shift_JIS with IBM/NEC extensions.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133367,"byte_end":133397,"line_start":450,"line_end":450,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133826,"byte_end":133843,"line_start":461,"line_end":461,"column_start":12,"column_end":29},"name":"Windows31JEncoder","qualname":"::codec::japanese::Windows31JEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoder for Shift_JIS with IBM/NEC extensions.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133815,"byte_end":133844,"line_start":461,"line_end":461,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133882,"byte_end":133885,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"new","qualname":"<Windows31JEncoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1294},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145107,"byte_end":145124,"line_start":772,"line_end":772,"column_start":12,"column_end":29},"name":"ISO2022JPEncoding","qualname":"::codec::japanese::ISO2022JPEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" ISO-2022-JP.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145096,"byte_end":145125,"line_start":772,"line_end":772,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145705,"byte_end":145721,"line_start":790,"line_end":790,"column_start":12,"column_end":28},"name":"ISO2022JPEncoder","qualname":"::codec::japanese::ISO2022JPEncoder","value":"ISO2022JPEncoder {  }","parent":null,"children":[{"krate":0,"index":299}],"decl_id":null,"docs":" An encoder for ISO-2022-JP without JIS X 0212/0213 support.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145694,"byte_end":145748,"line_start":790,"line_end":792,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145785,"byte_end":145788,"line_start":795,"line_end":795,"column_start":12,"column_end":15},"name":"new","qualname":"<ISO2022JPEncoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":696},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"simpchinese","qualname":"::codec::simpchinese","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/simpchinese.rs","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":1412},{"krate":0,"index":1416},{"krate":0,"index":1414},{"krate":0,"index":1420},{"krate":0,"index":1424},{"krate":0,"index":1422},{"krate":0,"index":710},{"krate":0,"index":718},{"krate":0,"index":726},{"krate":0,"index":1428},{"krate":0,"index":1432},{"krate":0,"index":1430},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":1436},{"krate":0,"index":1440},{"krate":0,"index":1438},{"krate":0,"index":752},{"krate":0,"index":756},{"krate":0,"index":1444},{"krate":0,"index":1448},{"krate":0,"index":1446},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":1452},{"krate":0,"index":1510},{"krate":0,"index":1514},{"krate":0,"index":1512},{"krate":0,"index":780},{"krate":0,"index":1518},{"krate":0,"index":1522},{"krate":0,"index":1520},{"krate":0,"index":790},{"krate":0,"index":794},{"krate":0,"index":1526},{"krate":0,"index":1530},{"krate":0,"index":1528},{"krate":0,"index":808},{"krate":0,"index":812},{"krate":0,"index":1534}],"decl_id":null,"docs":" Legacy simplified Chinese encodings based on GB 2312 and GB 18030.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":168684,"byte_end":168687,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"GBK","qualname":"::codec::simpchinese::GBK","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation type for GBK.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":168673,"byte_end":168688,"line_start":19,"line_end":19,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":168877,"byte_end":168884,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"GB18030","qualname":"::codec::simpchinese::GB18030","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation type for GB18030.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":168866,"byte_end":168885,"line_start":26,"line_end":26,"column_start":1,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":710},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169049,"byte_end":169055,"line_start":30,"line_end":30,"column_start":11,"column_end":17},"name":"GBType","qualname":"::codec::simpchinese::GBType","value":"GBType: Clone + 'static","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716}],"decl_id":null,"docs":" An internal trait used to customize GBK and GB18030 implementations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169082,"byte_end":169086,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"name","qualname":"::codec::simpchinese::GBType::name","value":"fn () -> &'static str","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169113,"byte_end":169124,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"whatwg_name","qualname":"::codec::simpchinese::GBType::whatwg_name","value":"fn () -> Option<&'static str>","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169159,"byte_end":169175,"line_start":33,"line_end":33,"column_start":8,"column_end":24},"name":"initial_gbk_flag","qualname":"::codec::simpchinese::GBType::initial_gbk_flag","value":"fn () -> bool","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":170969,"byte_end":170979,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"GBEncoding","qualname":"::codec::simpchinese::GBEncoding","value":"GBEncoding {  }","parent":null,"children":[{"krate":0,"index":387}],"decl_id":null,"docs":" GBK and GB 18030-2005.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":170958,"byte_end":171014,"line_start":77,"line_end":79,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":734},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171045,"byte_end":171056,"line_start":82,"line_end":82,"column_start":10,"column_end":21},"name":"GBKEncoding","qualname":"::codec::simpchinese::GBKEncoding","value":"GBEncoding<GBK>","parent":null,"children":[],"decl_id":null,"docs":" A type for GBK.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":736},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171109,"byte_end":171124,"line_start":84,"line_end":84,"column_start":10,"column_end":25},"name":"GB18030Encoding","qualname":"::codec::simpchinese::GB18030Encoding","value":"GBEncoding<GB18030>","parent":null,"children":[],"decl_id":null,"docs":" A type for GB18030.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":738},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171184,"byte_end":171196,"line_start":87,"line_end":87,"column_start":11,"column_end":23},"name":"GBK_ENCODING","qualname":"::codec::simpchinese::GBK_ENCODING","value":"GBKEncoding","parent":null,"children":[],"decl_id":null,"docs":" An instance for GBK.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":740},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171288,"byte_end":171304,"line_start":89,"line_end":89,"column_start":11,"column_end":27},"name":"GB18030_ENCODING","qualname":"::codec::simpchinese::GB18030_ENCODING","value":"GB18030Encoding","parent":null,"children":[],"decl_id":null,"docs":" An instance for GB18030.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171891,"byte_end":171900,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"GBEncoder","qualname":"::codec::simpchinese::GBEncoder","value":"GBEncoder {  }","parent":null,"children":[{"krate":0,"index":395}],"decl_id":null,"docs":" An encoder for GBK and GB18030.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171880,"byte_end":171935,"line_start":107,"line_end":109,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171979,"byte_end":171982,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<GBEncoder<T>>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1510},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186534,"byte_end":186544,"line_start":475,"line_end":475,"column_start":12,"column_end":22},"name":"HZEncoding","qualname":"::codec::simpchinese::HZEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" HZ. (RFC 1843)","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186523,"byte_end":186545,"line_start":475,"line_end":475,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1518},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186873,"byte_end":186882,"line_start":486,"line_end":486,"column_start":12,"column_end":21},"name":"HZEncoder","qualname":"::codec::simpchinese::HZEncoder","value":"HZEncoder {  }","parent":null,"children":[{"krate":0,"index":449}],"decl_id":null,"docs":" An encoder for HZ.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186862,"byte_end":186905,"line_start":486,"line_end":488,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186935,"byte_end":186938,"line_start":491,"line_end":491,"column_start":12,"column_end":15},"name":"new","qualname":"<HZEncoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":822},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tradchinese","qualname":"::codec::tradchinese","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/tradchinese.rs","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":1596},{"krate":0,"index":834},{"krate":0,"index":1602},{"krate":0,"index":1606},{"krate":0,"index":1604},{"krate":0,"index":844},{"krate":0,"index":848},{"krate":0,"index":1610},{"krate":0,"index":1614},{"krate":0,"index":1612},{"krate":0,"index":858},{"krate":0,"index":862},{"krate":0,"index":1618}],"decl_id":null,"docs":" Legacy traditional Chinese encodings.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1594},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198233,"byte_end":198252,"line_start":28,"line_end":28,"column_start":12,"column_end":31},"name":"BigFive2003Encoding","qualname":"::codec::tradchinese::BigFive2003Encoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Big5-2003 with common extensions. (XXX with asymmetric HKSCS-2008 support)","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198222,"byte_end":198253,"line_start":28,"line_end":28,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1602},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198663,"byte_end":198681,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"name":"BigFive2003Encoder","qualname":"::codec::tradchinese::BigFive2003Encoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoder for Big5-2003.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198652,"byte_end":198682,"line_start":39,"line_end":39,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198721,"byte_end":198724,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<BigFive2003Encoder>::new","value":"fn () -> Box<RawEncoder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":872},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"whatwg","qualname":"::codec::whatwg","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/whatwg.rs","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":1668},{"krate":0,"index":1672},{"krate":0,"index":1670},{"krate":0,"index":878},{"krate":0,"index":888}],"decl_id":null,"docs":" Asymmetric or special encoding constructions required by the WHATWG Encoding standard.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1668},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":207805,"byte_end":207828,"line_start":13,"line_end":13,"column_start":12,"column_end":35},"name":"EncoderOnlyUTF8Encoding","qualname":"::codec::whatwg::EncoderOnlyUTF8Encoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Replacement encoding used to solve a particular attack vector due to mismatching server and\n client supports for encodings. It is rarely useful outside.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":207794,"byte_end":207829,"line_start":13,"line_end":13,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":888},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":208280,"byte_end":208294,"line_start":23,"line_end":23,"column_start":9,"column_end":23},"name":"x_user_defined","qualname":"::codec::whatwg::x_user_defined","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/codec/whatwg.rs","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":892}],"decl_id":null,"docs":" Algorithmic mapping for `x-user-defined` encoding.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":890},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":208322,"byte_end":208329,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"forward","qualname":"::codec::whatwg::x_user_defined::forward","value":"fn (code: u8) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":208301,"byte_end":208310,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":208412,"byte_end":208420,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"backward","qualname":"::codec::whatwg::x_user_defined::backward","value":"fn (code: u32) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":208391,"byte_end":208400,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":894},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,97,108,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"all","qualname":"::all","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/all.rs","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":906},{"krate":0,"index":912}],"decl_id":null,"docs":" A list of all supported encodings. Useful for encodings fixed in the compile time.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":906},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,97,108,108,46,114,115],"byte_start":213257,"byte_end":213263,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"name":"whatwg","qualname":"::all::whatwg","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/all.rs","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,97,108,108,46,114,115],"byte_start":213697,"byte_end":213706,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"encodings","qualname":"::all::encodings","value":"fn () -> &'static [EncodingRef]","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of references to the encodings available.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,97,98,101,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"label","qualname":"::label","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding-0.2.33/src/label.rs","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924}],"decl_id":null,"docs":" An interface for retrieving an encoding (or a set of encodings) from a string/numeric label.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":922},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,97,98,101,108,46,114,115],"byte_start":215197,"byte_end":215223,"line_start":12,"line_end":12,"column_start":8,"column_end":34},"name":"encoding_from_whatwg_label","qualname":"::label::encoding_from_whatwg_label","value":"fn (label: &str) -> Option<EncodingRef>","parent":null,"children":[],"decl_id":null,"docs":" Returns an encoding from given label, defined in the WHATWG Encoding standard, if any.\n Implements \"get an encoding\" algorithm: http://encoding.spec.whatwg.org/#concept-encoding-get\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":924},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,97,98,101,108,46,114,115],"byte_start":222594,"byte_end":222625,"line_start":280,"line_end":280,"column_start":8,"column_end":39},"name":"encoding_from_windows_code_page","qualname":"::label::encoding_from_windows_code_page","value":"fn (cp: usize) -> Option<EncodingRef>","parent":null,"children":[],"decl_id":null,"docs":" Returns an encoding from Windows code page number.\n http://msdn.microsoft.com/en-us/library/windows/desktop/dd317756%28v=vs.85%29.aspx\n Sometimes it can return a *superset* of the requested encoding, e.g. for several CJK encodings.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":11022,"byte_end":11042,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":12397,"byte_end":12418,"line_start":69,"line_end":69,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":26280,"byte_end":26283,"line_start":86,"line_end":86,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":27209,"byte_end":27215,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35698,"byte_end":35709,"line_start":319,"line_end":319,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":36230,"byte_end":36241,"line_start":332,"line_end":332,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":37458,"byte_end":37469,"line_start":364,"line_end":364,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":38799,"byte_end":38810,"line_start":397,"line_end":397,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44258,"byte_end":44271,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44558,"byte_end":44570,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44659,"byte_end":44671,"line_start":28,"line_end":28,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":45286,"byte_end":45298,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":45387,"byte_end":45399,"line_start":53,"line_end":53,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47014,"byte_end":47027,"line_start":20,"line_end":20,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47298,"byte_end":47310,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47399,"byte_end":47411,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":48431,"byte_end":48443,"line_start":65,"line_end":65,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":48532,"byte_end":48544,"line_start":69,"line_end":69,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52039,"byte_end":52057,"line_start":20,"line_end":20,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52536,"byte_end":52553,"line_start":33,"line_end":33,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52737,"byte_end":52754,"line_start":39,"line_end":39,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":53879,"byte_end":53896,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":54077,"byte_end":54094,"line_start":81,"line_end":81,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":57822,"byte_end":57834,"line_start":49,"line_end":49,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58170,"byte_end":58181,"line_start":60,"line_end":60,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58269,"byte_end":58280,"line_start":64,"line_end":64,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58900,"byte_end":58911,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":61529,"byte_end":61540,"line_start":141,"line_end":141,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86430,"byte_end":86436,"line_start":33,"line_end":33,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86805,"byte_end":86808,"line_start":45,"line_end":45,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88331,"byte_end":88344,"line_start":87,"line_end":87,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88933,"byte_end":88945,"line_start":107,"line_end":107,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":89086,"byte_end":89098,"line_start":113,"line_end":113,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":90670,"byte_end":90682,"line_start":160,"line_end":160,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":90905,"byte_end":90917,"line_start":167,"line_end":167,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109100,"byte_end":109118,"line_start":27,"line_end":27,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109519,"byte_end":109536,"line_start":38,"line_end":38,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109630,"byte_end":109647,"line_start":42,"line_end":42,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":110774,"byte_end":110791,"line_start":78,"line_end":78,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":110924,"byte_end":110941,"line_start":84,"line_end":84,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":118901,"byte_end":118914,"line_start":32,"line_end":32,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":119289,"byte_end":119301,"line_start":43,"line_end":43,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":119390,"byte_end":119402,"line_start":47,"line_end":47,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":120977,"byte_end":120993,"line_start":92,"line_end":92,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":121125,"byte_end":121141,"line_start":98,"line_end":98,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133417,"byte_end":133435,"line_start":452,"line_end":452,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133851,"byte_end":133868,"line_start":463,"line_end":463,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133962,"byte_end":133979,"line_start":467,"line_end":467,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":135795,"byte_end":135812,"line_start":514,"line_end":514,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":135945,"byte_end":135962,"line_start":520,"line_end":520,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145145,"byte_end":145162,"line_start":774,"line_end":774,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145755,"byte_end":145771,"line_start":794,"line_end":794,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145878,"byte_end":145894,"line_start":798,"line_end":798,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":148079,"byte_end":148095,"line_start":858,"line_end":858,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":148227,"byte_end":148243,"line_start":864,"line_end":864,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169206,"byte_end":169209,"line_start":36,"line_end":36,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169375,"byte_end":169382,"line_start":42,"line_end":42,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171391,"byte_end":171401,"line_start":91,"line_end":91,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171953,"byte_end":171962,"line_start":111,"line_end":111,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":172104,"byte_end":172113,"line_start":117,"line_end":117,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":174219,"byte_end":174233,"line_start":171,"line_end":171,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":174363,"byte_end":174377,"line_start":177,"line_end":177,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186565,"byte_end":186575,"line_start":477,"line_end":477,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186912,"byte_end":186921,"line_start":490,"line_end":490,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":187026,"byte_end":187035,"line_start":494,"line_end":494,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":189131,"byte_end":189140,"line_start":553,"line_end":553,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":189265,"byte_end":189274,"line_start":559,"line_end":559,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198273,"byte_end":198292,"line_start":30,"line_end":30,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198689,"byte_end":198707,"line_start":41,"line_end":41,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198802,"byte_end":198820,"line_start":45,"line_end":45,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":200195,"byte_end":200222,"line_start":84,"line_end":84,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":200365,"byte_end":200392,"line_start":90,"line_end":90,"column_start":21,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":207849,"byte_end":207872,"line_start":15,"line_end":15,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9266,"byte_end":9271,"line_start":225,"line_end":225,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9329,"byte_end":9334,"line_start":229,"line_end":229,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":210}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9348,"byte_end":9353,"line_start":230,"line_end":230,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":248}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9367,"byte_end":9377,"line_start":231,"line_end":231,"column_start":13,"column_end":23},"ref_id":{"krate":0,"index":294}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9391,"byte_end":9396,"line_start":232,"line_end":232,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":350}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9410,"byte_end":9416,"line_start":233,"line_end":233,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":422}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9430,"byte_end":9436,"line_start":234,"line_end":234,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":506}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9450,"byte_end":9458,"line_start":235,"line_end":235,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9472,"byte_end":9483,"line_start":236,"line_end":236,"column_start":13,"column_end":24},"ref_id":{"krate":0,"index":696}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9497,"byte_end":9508,"line_start":237,"line_end":237,"column_start":13,"column_end":24},"ref_id":{"krate":0,"index":822}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9522,"byte_end":9528,"line_start":238,"line_end":238,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":872}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9541,"byte_end":9544,"line_start":241,"line_end":241,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":894}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9554,"byte_end":9559,"line_start":242,"line_end":242,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":916}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":11022,"byte_end":11042,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3802}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":12397,"byte_end":12418,"line_start":69,"line_end":69,"column_start":29,"column_end":50},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":26280,"byte_end":26283,"line_start":86,"line_end":86,"column_start":21,"column_end":24},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":4,"index":3906},"to":{"krate":0,"index":104}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":27209,"byte_end":27215,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":4,"index":4906},"to":{"krate":0,"index":120}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":35698,"byte_end":35709,"line_start":319,"line_end":319,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":36230,"byte_end":36241,"line_start":332,"line_end":332,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":926},"to":{"krate":2,"index":2562}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":37458,"byte_end":37469,"line_start":364,"line_end":364,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,116,121,112,101,115,46,114,115],"byte_start":38799,"byte_end":38810,"line_start":397,"line_end":397,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":930},"to":{"krate":2,"index":2562}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44258,"byte_end":44271,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":934},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44558,"byte_end":44570,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":44659,"byte_end":44671,"line_start":28,"line_end":28,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":942},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":45286,"byte_end":45298,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,101,114,114,111,114,46,114,115],"byte_start":45387,"byte_end":45399,"line_start":53,"line_end":53,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":950},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47014,"byte_end":47027,"line_start":20,"line_end":20,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":958},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47298,"byte_end":47310,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":47399,"byte_end":47411,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":966},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":48431,"byte_end":48443,"line_start":65,"line_end":65,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,97,115,99,105,105,46,114,115],"byte_start":48532,"byte_end":48544,"line_start":69,"line_end":69,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":974},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52039,"byte_end":52057,"line_start":20,"line_end":20,"column_start":19,"column_end":37},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":982},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52536,"byte_end":52553,"line_start":33,"line_end":33,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":52737,"byte_end":52754,"line_start":39,"line_end":39,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":990},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":53879,"byte_end":53896,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,110,103,108,101,98,121,116,101,46,114,115],"byte_start":54077,"byte_end":54094,"line_start":81,"line_end":81,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":998},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":57822,"byte_end":57834,"line_start":49,"line_end":49,"column_start":19,"column_end":31},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1006},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58170,"byte_end":58181,"line_start":60,"line_end":60,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58269,"byte_end":58280,"line_start":64,"line_end":64,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1014},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":58900,"byte_end":58911,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,56,46,114,115],"byte_start":61529,"byte_end":61540,"line_start":141,"line_end":141,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1022},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86195,"byte_end":86200,"line_start":26,"line_end":26,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2562},"to":{"krate":0,"index":432}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86430,"byte_end":86436,"line_start":33,"line_end":33,"column_start":17,"column_end":23},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1030},"to":{"krate":0,"index":432}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":86805,"byte_end":86808,"line_start":45,"line_end":45,"column_start":17,"column_end":20},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":1038},"to":{"krate":0,"index":432}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88331,"byte_end":88344,"line_start":87,"line_end":87,"column_start":30,"column_end":43},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":88933,"byte_end":88945,"line_start":107,"line_end":107,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":89086,"byte_end":89098,"line_start":113,"line_end":113,"column_start":32,"column_end":44},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1054},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":90670,"byte_end":90682,"line_start":160,"line_end":160,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,117,116,102,95,49,54,46,114,115],"byte_start":90905,"byte_end":90917,"line_start":167,"line_end":167,"column_start":32,"column_end":44},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":492},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109100,"byte_end":109118,"line_start":27,"line_end":27,"column_start":19,"column_end":37},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1062},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109519,"byte_end":109536,"line_start":38,"line_end":38,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":109630,"byte_end":109647,"line_start":42,"line_end":42,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":110774,"byte_end":110791,"line_start":78,"line_end":78,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,107,111,114,101,97,110,46,114,115],"byte_start":110924,"byte_end":110941,"line_start":84,"line_end":84,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":1078},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":118901,"byte_end":118914,"line_start":32,"line_end":32,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1136},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":119289,"byte_end":119301,"line_start":43,"line_end":43,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":119390,"byte_end":119402,"line_start":47,"line_end":47,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1144},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":120977,"byte_end":120993,"line_start":92,"line_end":92,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":121125,"byte_end":121141,"line_start":98,"line_end":98,"column_start":21,"column_end":37},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1152},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133417,"byte_end":133435,"line_start":452,"line_end":452,"column_start":19,"column_end":37},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1220},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133851,"byte_end":133868,"line_start":463,"line_end":463,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":133962,"byte_end":133979,"line_start":467,"line_end":467,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1228},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":135795,"byte_end":135812,"line_start":514,"line_end":514,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":135945,"byte_end":135962,"line_start":520,"line_end":520,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1236},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145145,"byte_end":145162,"line_start":774,"line_end":774,"column_start":19,"column_end":36},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145755,"byte_end":145771,"line_start":794,"line_end":794,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":145878,"byte_end":145894,"line_start":798,"line_end":798,"column_start":21,"column_end":37},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":148079,"byte_end":148095,"line_start":858,"line_end":858,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,106,97,112,97,110,101,115,101,46,114,115],"byte_start":148227,"byte_end":148243,"line_start":864,"line_end":864,"column_start":21,"column_end":37},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1322},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169057,"byte_end":169062,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2562},"to":{"krate":0,"index":710}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169206,"byte_end":169209,"line_start":36,"line_end":36,"column_start":17,"column_end":20},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1412},"to":{"krate":0,"index":710}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":169375,"byte_end":169382,"line_start":42,"line_end":42,"column_start":17,"column_end":24},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":1420},"to":{"krate":0,"index":710}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171391,"byte_end":171401,"line_start":91,"line_end":91,"column_start":30,"column_end":40},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":1428},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":171953,"byte_end":171962,"line_start":111,"line_end":111,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":172104,"byte_end":172113,"line_start":117,"line_end":117,"column_start":32,"column_end":41},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":1436},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":174219,"byte_end":174233,"line_start":171,"line_end":171,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":1444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":174363,"byte_end":174377,"line_start":177,"line_end":177,"column_start":21,"column_end":35},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":1444},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186565,"byte_end":186575,"line_start":477,"line_end":477,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":1510},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":186912,"byte_end":186921,"line_start":490,"line_end":490,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":1518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":187026,"byte_end":187035,"line_start":494,"line_end":494,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":1518},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":189131,"byte_end":189140,"line_start":553,"line_end":553,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,115,105,109,112,99,104,105,110,101,115,101,46,114,115],"byte_start":189265,"byte_end":189274,"line_start":559,"line_end":559,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":1526},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198273,"byte_end":198292,"line_start":30,"line_end":30,"column_start":19,"column_end":38},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":1594},"to":{"krate":0,"index":158}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198689,"byte_end":198707,"line_start":41,"line_end":41,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":198802,"byte_end":198820,"line_start":45,"line_end":45,"column_start":21,"column_end":39},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":1602},"to":{"krate":0,"index":136}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":200195,"byte_end":200222,"line_start":84,"line_end":84,"column_start":6,"column_end":33},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":1610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,116,114,97,100,99,104,105,110,101,115,101,46,114,115],"byte_start":200365,"byte_end":200392,"line_start":90,"line_end":90,"column_start":21,"column_end":48},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1610},"to":{"krate":0,"index":146}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,45,48,46,50,46,51,51,47,115,114,99,47,99,111,100,101,99,47,119,104,97,116,119,103,46,114,115],"byte_start":207849,"byte_end":207872,"line_start":15,"line_end":15,"column_start":19,"column_end":42},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":158}}]}