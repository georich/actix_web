{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"error_chain","disambiguator":[1794079230551925161,7395649683696659434]},"crate_root":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src","external_crates":[{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1877579056841321839,4002650866653523028]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12966739244720591078,10895073499070158948]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4148811982382486632,5293825926111630395]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[55294194006836696,257979567559498938]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[5663549295587754337,15298730489275369687]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[198562575503244264,15640276364166720962]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15019360886040341153,15954958735131723916]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[2748248400471175825,13783408877556183619]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[13472166887002568360,10424338574949869411]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[12375417675816278768,9196220298666412745]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":11,"id":{"name":"libc","disambiguator":[16979918600155282520,14701978168063965125]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":12,"id":{"name":"cfg_if","disambiguator":[7450768405540088009,12392756746561101942]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[3198589881043051637,3519026914791773569]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","num":14,"id":{"name":"backtrace_sys","disambiguator":[14588255602234624172,9198330302183371009]}}],"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":28474,"line_start":1,"line_end":865,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":10,"index":362},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20135,"byte_end":20144,"line_start":550,"line_end":550,"column_start":20,"column_end":29},"alias_span":null,"name":"Backtrace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20388,"byte_end":20396,"line_start":561,"line_end":561,"column_start":21,"column_end":29},"alias_span":null,"name":"ExitCode","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":28474,"line_start":1,"line_end":865,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":32},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":76},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":98},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116}],"decl_id":null,"docs":" A library for consistent and reliable error handling","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints)","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23,"byte_end":47,"line_start":2,"line_end":2,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,113,117,105,99,107,95,109,97,105,110,46,114,115],"byte_start":65053,"byte_end":65061,"line_start":62,"line_end":62,"column_start":11,"column_end":19},"name":"ExitCode","qualname":"::quick_main::ExitCode","value":"ExitCode","parent":null,"children":[{"krate":0,"index":38}],"decl_id":null,"docs":" Represents a value that can be used as the exit status of the process.\n See [`quick_main!`](macro.quick_main.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,113,117,105,99,107,95,109,97,105,110,46,114,115],"byte_start":65124,"byte_end":65128,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"code","qualname":"::quick_main::ExitCode::code","value":"fn (self) -> i32","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Returns the value to use as the exit status.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,101,120,97,109,112,108,101,95,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"example_generated","qualname":"::example_generated","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/example_generated.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":230},{"krate":0,"index":248},{"krate":0,"index":264},{"krate":0,"index":270},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":290},{"krate":0,"index":294},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":228}],"decl_id":null,"docs":" These modules show an example of code generated by the macro. **IT MUST NOT BE\n USED OUTSIDE THIS CRATE**.","sig":null,"attributes":[{"value":"cfg(feature = \"example_generated\")","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20398,"byte_end":20435,"line_start":562,"line_end":562,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,101,120,97,109,112,108,101,95,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":66379,"byte_end":66384,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"inner","qualname":"::example_generated::inner","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/example_generated.rs","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":120},{"krate":0,"index":138},{"krate":0,"index":154},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":202},{"krate":0,"index":118}],"decl_id":null,"docs":" Another code generated by the macro.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20561,"byte_end":20565,"line_start":567,"line_end":567,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the error chain using the `Error::cause()` method.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20705,"byte_end":20708,"line_start":571,"line_end":571,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter<'a>>::new","value":"fn (err: Option<&'a error::Error>) -> Iter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new iterator over the error chain using `Error::cause()`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21319,"byte_end":21333,"line_start":595,"line_end":595,"column_start":8,"column_end":22},"name":"make_backtrace","qualname":"::make_backtrace","value":"fn () -> Option<Arc<Backtrace>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a backtrace of the current call stack if `RUST_BACKTRACE`\n is set to anything but ``0``, and `None` otherwise.  This is used\n in the generated error implementations.\n","sig":null,"attributes":[{"value":"cfg(feature = \"backtrace\")","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21267,"byte_end":21296,"line_start":593,"line_end":593,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22285,"byte_end":22297,"line_start":624,"line_end":624,"column_start":11,"column_end":23},"name":"ChainedError","qualname":"::ChainedError","value":"ChainedError: error::Error + Send + 'static","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96}],"decl_id":null,"docs":" This trait is implemented on all the errors generated by the `error_chain`\n macro.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22370,"byte_end":22379,"line_start":626,"line_end":626,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::ChainedError::ErrorKind","value":"type ErrorKind;","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Associated kind type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22457,"byte_end":22466,"line_start":629,"line_end":629,"column_start":8,"column_end":17},"name":"from_kind","qualname":"::ChainedError::from_kind","value":"fn (kind: Self::ErrorKind) -> Self","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Constructs an error from a kind, and generates a backtrace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22618,"byte_end":22628,"line_start":632,"line_end":632,"column_start":8,"column_end":18},"name":"with_chain","qualname":"::ChainedError::with_chain","value":"fn <E, K> (error: E, kind: K) -> Self","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Constructs a chained error from another error and a kind, and generates a backtrace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22831,"byte_end":22835,"line_start":638,"line_end":638,"column_start":8,"column_end":12},"name":"kind","qualname":"::ChainedError::kind","value":"fn (&self) -> &Self::ErrorKind","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Returns the kind of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22911,"byte_end":22915,"line_start":641,"line_end":641,"column_start":8,"column_end":12},"name":"iter","qualname":"::ChainedError::iter","value":"fn (&self) -> Iter","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Iterates over the error chain.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22998,"byte_end":23007,"line_start":644,"line_end":644,"column_start":8,"column_end":17},"name":"backtrace","qualname":"::ChainedError::backtrace","value":"fn (&self) -> Option<&Backtrace>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Returns the backtrace associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23233,"byte_end":23246,"line_start":650,"line_end":650,"column_start":8,"column_end":21},"name":"display_chain","qualname":"::ChainedError::display_chain","value":"fn <'a> (&'a self) -> DisplayChain<'a, Self>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Returns an object which implements `Display` for printing the full\n context of this error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23380,"byte_end":23389,"line_start":655,"line_end":655,"column_start":8,"column_end":17},"name":"chain_err","qualname":"::ChainedError::chain_err","value":"fn <F, EK> (self, error: F) -> Self","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Extends the error chain with a new entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23563,"byte_end":23566,"line_start":661,"line_end":661,"column_start":8,"column_end":11},"name":"new","qualname":"::ChainedError::new","value":"fn (kind: Self::ErrorKind, state: State) -> Self","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Creates an error from its parts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23813,"byte_end":23830,"line_start":667,"line_end":667,"column_start":8,"column_end":25},"name":"extract_backtrace","qualname":"::ChainedError::extract_backtrace","value":"fn (e: &(error::Error + Send + 'static)) -> Option<Arc<Backtrace>>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Returns the first known backtrace, either from its State or from one\n of the errors from `foreign_links`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"backtrace\")","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23757,"byte_end":23786,"line_start":665,"line_end":665,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24000,"byte_end":24012,"line_start":673,"line_end":673,"column_start":12,"column_end":24},"name":"DisplayChain","qualname":"::DisplayChain","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct which formats an error for output.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24593,"byte_end":24598,"line_start":697,"line_end":697,"column_start":12,"column_end":17},"name":"State","qualname":"::State","value":"State { next_error, backtrace }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":205}],"decl_id":null,"docs":" Common state between errors.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":203},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24648,"byte_end":24658,"line_start":699,"line_end":699,"column_start":9,"column_end":19},"name":"next_error","qualname":"::State::next_error","value":"std::option::Option<std::boxed::Box<std::error::Error + std::marker::Send + 'static>>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Next error in the error chain.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":205},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24777,"byte_end":24786,"line_start":702,"line_end":702,"column_start":9,"column_end":18},"name":"backtrace","qualname":"::State::backtrace","value":"std::option::Option<std::sync::Arc<backtrace::Backtrace>>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Backtrace for the current error.\n","sig":null,"attributes":[{"value":"cfg(feature = \"backtrace\")","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24739,"byte_end":24768,"line_start":701,"line_end":701,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25208,"byte_end":25211,"line_start":723,"line_end":723,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"fn <CE> (e: Box<error::Error + Send>) -> State","parent":null,"children":[],"decl_id":null,"docs":" Creates a new State type\n","sig":null,"attributes":[{"value":"cfg(feature = \"backtrace\")","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25167,"byte_end":25196,"line_start":722,"line_end":722,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25729,"byte_end":25738,"line_start":739,"line_end":739,"column_start":12,"column_end":21},"name":"backtrace","qualname":"<State>::backtrace","value":"fn (&self) -> Option<&Backtrace>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner backtrace if present.\n","sig":null,"attributes":[{"value":"cfg(feature = \"backtrace\")","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25688,"byte_end":25717,"line_start":738,"line_end":738,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28447,"byte_end":28451,"line_start":863,"line_end":863,"column_start":9,"column_end":13},"name":"mock","qualname":"::mock","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":370},{"krate":0,"index":388},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":474},{"krate":0,"index":432},{"krate":0,"index":436},{"krate":0,"index":440},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":368}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20607,"byte_end":20611,"line_start":569,"line_end":569,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20803,"byte_end":20807,"line_start":576,"line_end":576,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24071,"byte_end":24083,"line_start":675,"line_end":675,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24832,"byte_end":24837,"line_start":705,"line_end":705,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25122,"byte_end":25127,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20444,"byte_end":20461,"line_start":563,"line_end":563,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":50}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20607,"byte_end":20611,"line_start":569,"line_end":569,"column_start":10,"column_end":14},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20803,"byte_end":20807,"line_start":576,"line_end":576,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":350},"to":{"krate":2,"index":3802}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22306,"byte_end":22311,"line_start":624,"line_end":624,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":2396},"to":{"krate":0,"index":76}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22314,"byte_end":22318,"line_start":624,"line_end":624,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1728},"to":{"krate":0,"index":76}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24071,"byte_end":24083,"line_start":675,"line_end":675,"column_start":30,"column_end":42},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":356},"to":{"krate":2,"index":7702}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24832,"byte_end":24837,"line_start":705,"line_end":705,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":362},"to":{"krate":2,"index":2596}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25122,"byte_end":25127,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}}]}