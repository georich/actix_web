{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"lru_cache","disambiguator":[14039381186001314797,4237716720191692169]},"crate_root":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src","external_crates":[{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1877579056841321839,4002650866653523028]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12966739244720591078,10895073499070158948]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4148811982382486632,5293825926111630395]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[55294194006836696,257979567559498938]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[5663549295587754337,15298730489275369687]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[198562575503244264,15640276364166720962]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15019360886040341153,15954958735131723916]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[2748248400471175825,13783408877556183619]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[13472166887002568360,10424338574949869411]}},{"file_name":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","num":10,"id":{"name":"linked_hash_map","disambiguator":[16666604470221047948,12163827795877947440]}}],"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":467,"byte_end":16415,"line_start":11,"line_end":567,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":467,"byte_end":16415,"line_start":11,"line_end":567,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/george/.cargo/registry/src/github.com-1ecc6299db9ec823/lru-cache-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":20},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":70},{"krate":0,"index":78},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":86},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":134},{"krate":0,"index":138}],"decl_id":null,"docs":" A cache that holds a limited number of key-value pairs. When the\n capacity of the cache is exceeded, the least-recently-used\n (where \"used\" means a look-up or putting the pair into the cache)\n pair is automatically removed.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1584,"byte_end":1592,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"LruCache","qualname":"::LruCache","value":"LruCache {  }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":153}],"decl_id":null,"docs":" An LRU cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1976,"byte_end":1979,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<LruCache<K, V>>::new","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty cache that can hold at most `capacity` items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2284,"byte_end":2295,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<LruCache<K, V, S>>::with_hasher","value":"fn (capacity: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty cache that can hold at most `capacity` items with the given hash builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2725,"byte_end":2737,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LruCache<K, V, S>>::contains_key","value":"fn <Q> (&mut self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the map contains the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3324,"byte_end":3330,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"insert","qualname":"<LruCache<K, V, S>>::insert","value":"fn (&mut self, k: K, v: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the cache. If the key already existed, the old value is\n returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4019,"byte_end":4026,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LruCache<K, V, S>>::get_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the given key in the cache, if\n any.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4628,"byte_end":4634,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"remove","qualname":"<LruCache<K, V, S>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes the given key from the cache and returns its corresponding value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5053,"byte_end":5061,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LruCache<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of key-value pairs the cache can hold.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6116,"byte_end":6128,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<LruCache<K, V, S>>::set_capacity","value":"fn (&mut self, capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of key-value pairs the cache can hold. Removes\n least-recently-used key-value pairs if necessary.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6695,"byte_end":6705,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"remove_lru","qualname":"<LruCache<K, V, S>>::remove_lru","value":"fn (&mut self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the least recently used key-value pair as a tuple.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6674,"byte_end":6683,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6844,"byte_end":6847,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"len","qualname":"<LruCache<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of key-value pairs in the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6960,"byte_end":6968,"line_start":250,"line_end":250,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LruCache<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the cache contains no key-value pairs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7072,"byte_end":7077,"line_start":253,"line_end":253,"column_start":12,"column_end":17},"name":"clear","qualname":"<LruCache<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all key-value pairs from the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7665,"byte_end":7669,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"iter","qualname":"<LruCache<K, V, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the cache's key-value pairs in least- to most-recently-used order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8554,"byte_end":8562,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<LruCache<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the cache's key-value pairs in least- to most-recently-used order,\n with mutable references to the values.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10201,"byte_end":10209,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over a cache's key-value pairs in least- to most-recently-used order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10907,"byte_end":10911,"line_start":395,"line_end":395,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over a cache's key-value pairs in least- to most-recently-used order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11757,"byte_end":11764,"line_start":419,"line_end":419,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over a cache's key-value pairs in least- to most-recently-used order with mutable\n references to the values.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1721,"byte_end":1729,"line_start":61,"line_end":61,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2154,"byte_end":2162,"line_start":78,"line_end":78,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8684,"byte_end":8692,"line_start":307,"line_end":307,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8927,"byte_end":8935,"line_start":315,"line_end":315,"column_start":79,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9128,"byte_end":9136,"line_start":321,"line_end":321,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10275,"byte_end":10283,"line_start":368,"line_end":368,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10512,"byte_end":10520,"line_start":380,"line_end":380,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10646,"byte_end":10654,"line_start":386,"line_end":386,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10990,"byte_end":10994,"line_start":397,"line_end":397,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11101,"byte_end":11105,"line_start":401,"line_end":401,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11332,"byte_end":11336,"line_start":407,"line_end":407,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11466,"byte_end":11470,"line_start":411,"line_end":411,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11849,"byte_end":11856,"line_start":421,"line_end":421,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12091,"byte_end":12098,"line_start":427,"line_end":427,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12232,"byte_end":12239,"line_start":431,"line_end":431,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1721,"byte_end":1729,"line_start":61,"line_end":61,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2154,"byte_end":2162,"line_start":78,"line_end":78,"column_start":39,"column_end":47},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8684,"byte_end":8692,"line_start":307,"line_end":307,"column_start":58,"column_end":66},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":142},"to":{"krate":2,"index":4208}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8927,"byte_end":8935,"line_start":315,"line_end":315,"column_start":79,"column_end":87},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":142},"to":{"krate":2,"index":7698}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9128,"byte_end":9136,"line_start":321,"line_end":321,"column_start":56,"column_end":64},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":142},"to":{"krate":2,"index":4192}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10275,"byte_end":10283,"line_start":368,"line_end":368,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":148},"to":{"krate":2,"index":3802}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10512,"byte_end":10520,"line_start":380,"line_end":380,"column_start":36,"column_end":44},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":148},"to":{"krate":2,"index":4216}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10646,"byte_end":10654,"line_start":386,"line_end":386,"column_start":34,"column_end":42},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":148},"to":{"krate":2,"index":4230}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10990,"byte_end":10994,"line_start":397,"line_end":397,"column_start":26,"column_end":30},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":102},"to":{"krate":2,"index":2562}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11101,"byte_end":11105,"line_start":401,"line_end":401,"column_start":29,"column_end":33},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":102},"to":{"krate":2,"index":3802}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11332,"byte_end":11336,"line_start":407,"line_end":407,"column_start":40,"column_end":44},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":102},"to":{"krate":2,"index":4216}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11466,"byte_end":11470,"line_start":411,"line_end":411,"column_start":38,"column_end":42},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":102},"to":{"krate":2,"index":4230}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11849,"byte_end":11856,"line_start":421,"line_end":421,"column_start":29,"column_end":36},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":124},"to":{"krate":2,"index":3802}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12091,"byte_end":12098,"line_start":427,"line_end":427,"column_start":40,"column_end":47},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":124},"to":{"krate":2,"index":4216}},{"span":{"file_name":[47,104,111,109,101,47,103,101,111,114,103,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,114,117,45,99,97,99,104,101,45,48,46,49,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12232,"byte_end":12239,"line_start":431,"line_end":431,"column_start":38,"column_end":45},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":124},"to":{"krate":2,"index":4230}}]}